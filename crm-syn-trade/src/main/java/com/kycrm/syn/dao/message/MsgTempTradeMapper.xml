<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
 <mapper namespace="com.kycrm.syn.dao.message.IMsgTempTradeDao">
 	<resultMap type="com.kycrm.member.domain.entity.trade.MsgTempTrade" id="msgTempTrade">
 		<result column="id" property="id"/>
		<result column="uid" property="uid"/>
		<result column="msg_id" property="msgId"/>
		<result column="tid" property="tid"/>
		<result column="num_iid_str" property="numIidStr"/>
		<result column="buyer_nick" property="buyerNick"/>
		<result column="refund_flag" property="refundFlag"/>
		<result column="payment" property="payment"/>
		<result column="trade_from" property="tradeFrom"/>
		<result column="item_num" property="itemNum"/>
		<result column="created" property="created"/>
		<result column="end_time" property="endTime"/>
		<result column="modified_time" property="modifiedTime"/>
		<result column="pay_time" property="payTime"/>
		<result column="msg_created" property="msgCreated"/>
		<result column="trade_status" property="tradeStatus"/>
		<result column="receiver_address" property="receiverAddress"/>
		<result column="receiver_mobile" property="receiverMobile"/>
		<result column="receiver_name" property="receiverName"/>
 	</resultMap>
 	
 	<select id="tableIsExist"  resultType="java.lang.String">
 		SHOW TABLES LIKE 'crm_msg_temp_trade${uid}' 
 	</select>
 	
 	<!-- 创建该用户的表  -->
 	<insert id="doCreateTable" parameterType="java.lang.Long">
 		DROP TABLE IF EXISTS `crm_msg_temp_trade${uid}`;
 		CREATE TABLE `crm_msg_temp_trade${uid}` (
		  `id` bigint(20) NOT NULL AUTO_INCREMENT,
		  `uid` bigint(20) NOT NULL,
		  `msg_id` bigint(20) DEFAULT NULL,
		  `tid` bigint(20) DEFAULT NULL,
		  `num_iid_str` varchar(255) DEFAULT NULL,
		  `buyer_nick` varchar(255) DEFAULT NULL,
		  `refund_flag` tinyint(5) DEFAULT NULL,
		  `payment` decimal(20,2) DEFAULT NULL,
		  `trade_from` varchar(255) DEFAULT NULL,
		  `item_num` bigint(10) DEFAULT NULL,
		  `created` datetime DEFAULT NULL,
		  `end_time` datetime DEFAULT NULL,
		  `modified_time` datetime DEFAULT NULL,
		  `pay_time` datetime DEFAULT NULL,
		  `msg_created` datetime DEFAULT NULL,
		  `trade_status` varchar(255) DEFAULT NULL,
		  `receiver_address` varchar(255) DEFAULT NULL,
		  `receiver_mobile` varchar(255) DEFAULT NULL,
		  `receiver_name` varchar(255) DEFAULT NULL,
		  `optlock` int(10) NOT NULL DEFAULT '0',
		  PRIMARY KEY (`id`)
		) ENGINE=InnoDB DEFAULT CHARSET=utf8;
 	</insert>
 	<insert id="addMsgTempTradeTableIndex" parameterType="java.lang.Long">
 		ALTER TABLE
		`crm_msg_temp_trade${_parameter}`
		ADD INDEX index_msg_id 						(msg_id),
		ADD INDEX index_tid 								(tid),
		ADD KEY		  index_buyer_nick				(buyer_nick(255)),
		ADD INDEX index_refund_flag				(refund_flag),
		ADD INDEX index_created						(created),
		ADD INDEX index_end_time					(end_time),
		ADD INDEX index_modified_time		(modified_time),
		ADD INDEX index_pay_time					(pay_time),
		ADD INDEX index_trade_status			(trade_status);
 	</insert>
 	
 	<!-- 添加一条记录 -->
 	<insert id="saveMsgTempTrade" parameterType="com.kycrm.member.domain.entity.trade.MsgTempTrade">
 		<selectKey resultType="java.lang.Long" keyProperty="id">
 			select LAST_INSERT_ID()
 		</selectKey>
 		insert into crm_msg_match_trade${uid}(uid,msg_id,tid,num_iid_str,buyer_nick,refund_flag,payment,
 		trade_from,item_num,created,end_time,modified_time,pay_time,receiver_address,
 		receiver_mobile,receiver_name)
 		value(#{uid},#{msgId},#{tid},#{numIidStr},#{buyerNick},#{refundFlag},#{payment},#{tradeFrom},
 		#{itemNum},#{created},#{endTime},#{modifiedTime},#{payTime},#{receiverAddress},
 		#{receiverMobile},#{receiverName})
 	</insert>
 	
 	<!-- 添加多条记录 -->
 	<insert id="saveMsgTempTradeList" parameterType="com.kycrm.member.domain.entity.base.BaseListEntity">
 		insert into crm_msg_temp_trade${uid}(uid,msg_id,tid,num_iid_str,buyer_nick,refund_flag,payment,
 		trade_from,item_num,created,end_time,modified_time,pay_time,receiver_address,
 		receiver_mobile,receiver_name,trade_status,msg_created)
 		values
 		<foreach collection="entityList" item="trade" index="index" separator="," close=";">
 			(#{uid},#{trade.msgId},#{trade.tid},#{trade.numIidStr},#{trade.buyerNick},#{trade.refundFlag},
 			#{trade.payment},#{trade.tradeFrom},#{trade.itemNum},#{trade.created},#{trade.endTime},
 			#{trade.modifiedTime},#{trade.payTime},#{trade.receiverAddress},
	 		#{trade.receiverMobile},#{trade.receiverName},#{trade.tradeStatus},#{trade.msgCreated})
 		</foreach>
 	</insert>
 	
 	<!-- 根据msgId,uid,tradeStatus,tid查询是否存在记录 -->
 	<select id="isExistMsgTrade" parameterType="java.util.Map" resultType="java.lang.Long">
 		select id
 		from crm_msg_temp_trade${uid}
 		where msg_id = #{msgId} and trade_status = #{tradeStatus} and tid = #{tid}
 	</select>
 	
 	
 	<!-- 根据订单来源和订单状态查询效果分析数据 -->
 	<select id="aggregateDataByStatus" parameterType="java.util.Map" resultMap="msgTempTrade">
 		select count(tid),sum(payment),sum(item_num),count(distinct buyer_nick)
 		from crm_msg_temp_trade${uid}
 		<where>
 			uid = #{uid} and msg_id = #{msgId}
			<if test="tradeFrom != null and tradeFrom != ''">
				and trade_from = #{tradeFrom}
			</if>
			<if test="tradeStatus != null and tradeStatus != ''">
				and trade_status = #{tradeStatus}
			</if>
			<if test="bTime != null and eTime != null">
				and modified_time between #{bTime} and #{eTime}
			</if>
 		</where>
 	</select>
 	
 	<!-- 计算用户选择时间段内每天成交数据 -->
 	<select id="listPayData" parameterType="java.util.Map" resultType="java.util.Map">
 		select DAY(pay_time) pay_time,count(tid) tid,sum(payment) payment,sum(item_num) item_num,count(distinct buyer_nick)
 		from crm_msg_temp_trade${uid}
 		<where>
 			msg_id = #{msgId}
			<if test="tradeFrom != null and tradeFrom != ''">
				and trade_from = #{tradeFrom}
			</if>
			<if test="tradeStatus != null and tradeStatus != ''">
				and trade_status = #{tradeStatus}
			</if>
			<if test="bTime != null and eTime != null">
				and pay_time between #{bTime} and #{eTime}
			</if>
 		</where>
 		group by pay_time
 		order by pay_time DESC
 	</select>
 	
 	<!-- 根据发送总记录id查询符合的临时订单 -->
 	<select id="listTempTradeByMsgId" parameterType="java.util.Map" resultMap="msgTempTrade">
 		select tid,trade_from,trade_status,item_num,buyer_nick,refund_flag,payment,created,end_time,
 			   modified_time,pay_time
 		from crm_msg_temp_trade${uid}
 		where msg_id = #{msgId}
 	</select>
 	
 	<!-- 查询15天之前的订单 -->
 	<select id="listFifteenTrade" parameterType="java.util.Map" resultMap="msgTempTrade">
		select *
		from crm_msg_temp_trade${uid}
		<where>
			msg_created > #{fifteenAgoTime}
			<if test="lastSyncId != null">
				and id > #{lastSyncId}
			</if>
			order by id ASC
			limit #{startRows},#{pageSize}
		</where>
 	</select>
 	
 	<!-- 查询15天之前数据中最大的id -->
 	<select id="findMaxIdByTime" parameterType="java.util.Map" resultType="java.lang.Long">
 		select max(id) from crm_msg_temp_trade${uid} where #{fifteenAgoTime} > msg_created
 	</select>
 	
 	<!-- 批量删除数据 -->
 	<delete id="deleteDataById">
 		delete from crm_msg_temp_trade${uid} where #{maxId} > id limit 10000
 	</delete>
 	
 	<!-- 客户详情查询group_name, -->
 	<select id="listCustomerDetail" parameterType="java.util.Map" resultMap="msgTempTrade">
 		select buyer_nick,receiver_name,receiver_mobile,sum(payment) payment,count(distinct tid) tid,
 			   sum(item_num) item_num,receiver_address
 		from crm_msg_temp_trade${uid}
 		<where>
 			msg_id = #{msgId}
 			<if test="tradeFrom != null and tradeFrom != ''">
 				and trade_from = #{tradeFrom}
 			</if>
 			<if test="tradeStatus != null and tradeStatus != ''">
 				and trade_status = #{tradeStatus}
 			</if>
 			<if test="bTime != null and eTime != null">
 				and created between #{bTime} and #{eTime}
 			</if>
 			<if test="buyerNick != null and buyerNick != ''">
 				and buyer_nick = #{buyerNick}
 			</if>
 			<if test="receiverMobile != null and receiverMobile != ''">
 				and receiver_mobile = #{receiverMobile}
 			</if>
 			<if test="numIid != null">
 				and num_iid_str like '%${numIid}%'
 			</if>
 		</where>
 		group by buyer_nick
 		<!-- order By #{orderBy} #{orderByType} -->
 		<if test="startRows != null and pageSize != null">
 			limit #{startRows},#{pageSize}
 		</if>
 	</select>
 	
 	<!-- 客户详情查询count -->
 	<select id="countCustomerDetail" parameterType="java.util.Map" resultType="java.lang.Integer">
 		select count(distinct buyer_nick)
 		from crm_msg_temp_trade${uid}
 		<where>
 			msg_id = #{msgId}
 			<if test="tradeFrom != null and tradeFrom != ''">
 				and trade_from = #{tradeFrom}
 			</if>
 			<if test="tradeStatus != null and tradeStatus != ''">
 				and trade_status = #{tradeStatus}
 			</if>
 			<if test="bTime != null and eTime != null">
 				and created between #{bTime} and #{eTime}
 			</if>
 			<if test="buyerNick != null and buyerNick != ''">
 				and buyer_nick = #{buyerNick}
 			</if>
 			<if test="receiverMobile != null and receiverMobile != ''">
 				and receiver_mobile = #{receiverMobile}
 			</if>
 			<if test="numIid != null">
 				and num_iid_str like '%${numIid}%'
 			</if>
 		</where>
 	</select>
 </mapper>