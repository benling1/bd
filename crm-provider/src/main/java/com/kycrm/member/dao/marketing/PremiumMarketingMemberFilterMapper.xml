<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper    
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"    
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper
	namespace="com.kycrm.member.dao.marketing.IPremiumMarketingMemberFilterDao">

	<resultMap type="com.kycrm.member.domain.entity.member.MemberInfoDTO"
		id="memberInfoDTO">
		<result column="ID" property="id" />
		<result column="BUYER_NICK" property="buyerNick" />
		<result column="MOBILE" property="mobile" />
		<result column="RECEIVER_NAME" property="receiverName" />
		<result column="LAST_TRADE_TIME" property="lastTradeTime" />
		<result column="ITEM_NUM" property="itemNum" />
		<result column="ADD_ITEM_NUM" property="addItemNum" />
		<result column="BUY_NUMBER" property="buyNumber" />
		<result column="ADD_NUMBER" property="addNumber" />
		<result column="CLOSE_TRADE_NUM" property="closeTradeNum" />
		<association property="orderDTO" resultMap="orderDTOMap" />
	</resultMap>

	<resultMap type="com.kycrm.member.domain.entity.order.OrderDTO"
		id="orderDTOMap">
		<result column="PAYMENT" property="payment" />
		<result column="TRADE_TOTAL_FEE" property="tradeTotalFee" />
		<result column="TRADE_PAYMENT" property="tradePayment" />
	</resultMap>

	<!-- 高级会员筛选 - 使用会员和订单表联合查询会员信息 -->
	<select id="findFromMemberInfoDTOJoinOrderDTO" parameterType="java.util.Map"
		resultMap="memberInfoDTO">
		SELECT
		MEM.ID,
		MEM.BUYER_NICK,
		MEM.MOBILE,
		MEM.RECEIVER_NAME,
		MEM.LAST_TRADE_TIME,
		M1.PAYMENT,
		M1.TRADE_TOTAL_FEE,
		M1.TRADE_PAYMENT,
		MEM.ITEM_NUM,
		MEM.ADD_ITEM_NUM,
		MEM.BUY_NUMBER,
		MEM.ADD_NUMBER,
		MEM.CLOSE_TRADE_NUM
		FROM
		CRM_MEMBER_INFO_DTO${uid} MEM,(
		SELECT
		M.ID,
		O.PAYMENT,
		O.TRADE_TOTAL_FEE,
		O.TRADE_PAYMENT
		FROM
		CRM_MEMBER_INFO_DTO${uid} M,
		CRM_ORDER_DTO${uid} O
		WHERE
		M.BUYER_NICK =
		O.BUYER_NICK
		AND
		M.UID = #{uid}
		<!-- ### 自定义筛选 - 购物属性 ### -->
		<!-- 付款商品名称 -->
		<include refid="orderTable_payGoodsName" />
		<!-- 时段内购买某商品 -->
		<include refid="orderTable_payGoodsInPeriodTime" />
		<!-- 付款商品数量 -->
		<include refid="memberTable_payGoodsCount" />
		<!-- 拍下商品数量 -->
		<include refid="memberTable_bookGoodsCount" />
		<!-- 商品价格 -->
		<include refid="orderTable_goodsPrice" />
		<!-- 订单金额 -->
		<include refid="orderTable_orderPrice" />
		<!-- 收货地区 -->
		<include refid="memberTable_receiveGoodsArea" />
		<!-- 时段内订单状态 -->
		<include refid="orderTable_orderStatusInPeriodTime" />
		<!-- 订单发货时间 -->
		<include refid="orderTable_orderSentDate" />
		<!-- 交易来源 -->
		<include refid="orderTable_orderFrom" />
		<!-- 卖家备注 -->
		<include refid="orderTable_sellerFlag" />
		<!-- 买家评价 -->
		<include refid="orderTable_buyerRemark" />
		<!-- ### 自定义筛选 - 购物属性 ### -->

		<!-- ### 自定义筛选 - RFM属性 ### -->
		<!-- 时间内首次购买商品 -->
		<include refid="orderTable_buyGoodsInFirstTimeOfPeriodTime" />
		<!-- 时间内最后一次购买商品 -->
		<include refid="orderTable_buyGoodsInLastTimeOfPeriodTime" />
		<!-- 拍下时间 -->
		<include refid="orderTable_bookDate" />
		<!-- 付款时间 -->
		<include refid="orderTable_payDate" />
		<!-- 拍下时段 -->
		<include refid="orderTable_bookTime" />
		<!-- 付款时段 -->
		<include refid="orderTable_payTime" />
		<!-- 购买次数 -->
		<include refid="memberTable_buyGoodsTime" />
		<!-- 拍下次数 -->
		<include refid="memberTable_bookGoodsTime" />
		<!-- 拍下金额 -->
		<include refid="orderTable_bookPrice" />
		<!-- 拍下未付款次数 -->
		<include refid="memberTable_bookButNonPaymentTime" />
		<!-- 付款金额 -->
		<include refid="orderTable_payPrice" />
		<!-- 星期几付款 -->
		<include refid="orderTable_payInDayOfWeek" />
		<!-- ### 自定义筛选 - RFM属性 ### -->

		<!-- ### 自定义筛选 - 会员属性 ### -->
		<!-- 手机号运营商 -->
		<include refid="memberTable_mobileManufacturer" />
		<!-- 手机号归属地 -->
		<include refid="memberTable_mobileLocation" />
		<!-- 手机号段 -->
		<include refid="memberTable_mobileSectionNumber" />
		<!-- 过滤黑名单 -->
		<include refid="memberTable_sendBlackListMember" />
		<!-- ### 自定义筛选 - 会员属性 ### -->

		<!-- ### 分组筛选 - 基础会员筛选条件 ### -->
		<!-- 会员分组 - 引用基础会员筛选的条件 -->
		<!-- 最近交易时间与最近未交易时间* -->
		<include refid="memberInfoDTO_tradeTimeAndUntradeTime" />
		<!-- 订单来源* -->
		<include refid="orderDTO_orderFrom" />
		<!-- 交易成功次数* -->
		<include refid="memberInfoDTO_tradeNum" />
		<!-- 订单状态* -->
		<include refid="orderDTO_status" />
		<!-- 累计消费金额* -->
		<include refid="memberInfoDTO_tradeAmount" />
		<!-- 平均订单金额* -->
		<include refid="memberInfoDTO_avgTradePrice" />
		<!-- 指定商品* -->
		<include refid="orderDTO_numIid" />
		<!-- 关闭交易次数* -->
		<include refid="memberInfoDTO_closeTradeNum" />
		<!-- 地区筛选【省份】* -->
		<include refid="memberInfoDTO_province" />
		<!-- 地区筛选【城市】* -->
		<include refid="memberInfoDTO_city" />
		<!-- 交易宝贝件数 -->
		<include refid="memberInfoDTO_itemNum" />
		<!-- 拍下订单时段* -->
		<include refid="orderDTO_tradeCreatedTime" />
		<!-- 参与短信营销活动次数* -->
		<include refid="memberInfoDTO_marketingSmsNumber" />
		<!-- 卖家标记* -->
		<include refid="orderDTO_sellerFlag" />
		<!-- 已发送过滤* -->
		<include refid="memberInfoDTO_lastMarketingTime" />
		<!-- 黑名单* -->
		<include refid="memberInfoDTO_status" />
		<!-- ### 分组筛选 - 基础会员筛选条件 ### -->

		<!-- ### 分组筛选 - 商品分组 ### -->
		<!-- 商品分组 -->
		<include refid="orderTable_specifyGoodsNumIids" />
		<!-- ### 分组筛选 - 商品分组 ### -->
		<include refid="limit_id" />
		GROUP BY M.ID
		ORDER BY M.ID DESC
		<!-- 分页组件 -->
		<include refid="pagination" />
		) M1
		WHERE
		MEM.ID = M1.ID
	</select>

	<!-- 高级会员筛选 - 使用会员和订单表联合查询会员数量 -->
	<select id="findCountFromMemberInfoDTOJoinOrderDTO"
		parameterType="java.util.Map" resultType="java.lang.Long">
		SELECT
		COUNT(1)
		FROM
		CRM_MEMBER_INFO_DTO${uid} MEM,(
		SELECT
		M.ID
		FROM
		CRM_MEMBER_INFO_DTO${uid} M,
		CRM_ORDER_DTO${uid} O
		WHERE
		M.BUYER_NICK =
		O.BUYER_NICK
		AND
		M.UID = #{uid}
		<!-- ### 自定义筛选 - 购物属性 ### -->
		<!-- 付款商品名称 -->
		<include refid="orderTable_payGoodsName" />
		<!-- 时段内购买某商品 -->
		<include refid="orderTable_payGoodsInPeriodTime" />
		<!-- 付款商品数量 -->
		<include refid="memberTable_payGoodsCount" />
		<!-- 拍下商品数量 -->
		<include refid="memberTable_bookGoodsCount" />
		<!-- 商品价格 -->
		<include refid="orderTable_goodsPrice" />
		<!-- 订单金额 -->
		<include refid="orderTable_orderPrice" />
		<!-- 收货地区 -->
		<include refid="memberTable_receiveGoodsArea" />
		<!-- 时段内订单状态 -->
		<include refid="orderTable_orderStatusInPeriodTime" />
		<!-- 订单发货时间 -->
		<include refid="orderTable_orderSentDate" />
		<!-- 交易来源 -->
		<include refid="orderTable_orderFrom" />
		<!-- 卖家备注 -->
		<include refid="orderTable_sellerFlag" />
		<!-- 买家评价 -->
		<include refid="orderTable_buyerRemark" />
		<!-- ### 自定义筛选 - 购物属性 ### -->

		<!-- ### 自定义筛选 - RFM属性 ### -->
		<!-- 时间内首次购买商品 -->
		<include refid="orderTable_buyGoodsInFirstTimeOfPeriodTime" />
		<!-- 时间内最后一次购买商品 -->
		<include refid="orderTable_buyGoodsInLastTimeOfPeriodTime" />
		<!-- 拍下时间 -->
		<include refid="orderTable_bookDate" />
		<!-- 付款时间 -->
		<include refid="orderTable_payDate" />
		<!-- 拍下时段 -->
		<include refid="orderTable_bookTime" />
		<!-- 付款时段 -->
		<include refid="orderTable_payTime" />
		<!-- 购买次数 -->
		<include refid="memberTable_buyGoodsTime" />
		<!-- 拍下次数 -->
		<include refid="memberTable_bookGoodsTime" />
		<!-- 拍下金额 -->
		<include refid="orderTable_bookPrice" />
		<!-- 拍下未付款次数 -->
		<include refid="memberTable_bookButNonPaymentTime" />
		<!-- 付款金额 -->
		<include refid="orderTable_payPrice" />
		<!-- 星期几付款 -->
		<include refid="orderTable_payInDayOfWeek" />
		<!-- ### 自定义筛选 - RFM属性 ### -->

		<!-- ### 自定义筛选 - 会员属性 ### -->
		<!-- 手机号运营商 -->
		<include refid="memberTable_mobileManufacturer" />
		<!-- 手机号归属地 -->
		<include refid="memberTable_mobileLocation" />
		<!-- 手机号段 -->
		<include refid="memberTable_mobileSectionNumber" />
		<!-- 过滤黑名单 -->
		<include refid="memberTable_sendBlackListMember" />
		<!-- ### 自定义筛选 - 会员属性 ### -->

		<!-- ### 分组筛选 - 基础会员筛选条件 ### -->
		<!-- 会员分组 - 引用基础会员筛选的条件 -->
		<!-- 最近交易时间与最近未交易时间* -->
		<include refid="memberInfoDTO_tradeTimeAndUntradeTime" />
		<!-- 订单来源* -->
		<include refid="orderDTO_orderFrom" />
		<!-- 交易成功次数* -->
		<include refid="memberInfoDTO_tradeNum" />
		<!-- 订单状态* -->
		<include refid="orderDTO_status" />
		<!-- 累计消费金额* -->
		<include refid="memberInfoDTO_tradeAmount" />
		<!-- 平均订单金额* -->
		<include refid="memberInfoDTO_avgTradePrice" />
		<!-- 指定商品* -->
		<include refid="orderDTO_numIid" />
		<!-- 关闭交易次数* -->
		<include refid="memberInfoDTO_closeTradeNum" />
		<!-- 地区筛选【省份】* -->
		<include refid="memberInfoDTO_province" />
		<!-- 地区筛选【城市】* -->
		<include refid="memberInfoDTO_city" />
		<!-- 交易宝贝件数 -->
		<include refid="memberInfoDTO_itemNum" />
		<!-- 拍下订单时段* -->
		<include refid="orderDTO_tradeCreatedTime" />
		<!-- 参与短信营销活动次数* -->
		<include refid="memberInfoDTO_marketingSmsNumber" />
		<!-- 卖家标记* -->
		<include refid="orderDTO_sellerFlag" />
		<!-- 已发送过滤* -->
		<include refid="memberInfoDTO_lastMarketingTime" />
		<!-- 黑名单* -->
		<include refid="memberInfoDTO_status" />
		<!-- ### 分组筛选 - 基础会员筛选条件 ### -->

		<!-- ### 分组筛选 - 商品分组 ### -->
		<!-- 商品分组 -->
		<include refid="orderTable_specifyGoodsNumIids" />
		<!-- ### 分组筛选 - 商品分组 ### -->
		GROUP BY M.ID
		) M1
		WHERE
		MEM.ID = M1.ID
	</select>

	<!-- 高级会员筛选 - 使用会员表查询会员信息 -->
	<select id="findFromMemberInfoDTO" parameterType="java.util.Map"
		resultMap="memberInfoDTO">
		SELECT
		MEM.ID,
		MEM.BUYER_NICK,
		MEM.MOBILE,
		MEM.RECEIVER_NAME,
		MEM.LAST_TRADE_TIME,
		MEM.ITEM_NUM,
		MEM.ADD_ITEM_NUM,
		MEM.BUY_NUMBER,
		MEM.ADD_NUMBER,
		MEM.CLOSE_TRADE_NUM
		FROM
		CRM_MEMBER_INFO_DTO${uid} MEM,(
		SELECT
		M.ID
		FROM
		CRM_MEMBER_INFO_DTO${uid} M
		WHERE
		M.UID =
		#{uid}
		<!-- ### 自定义筛选 - 购物属性 ### -->
		<!-- 付款商品数量 -->
		<include refid="memberTable_payGoodsCount" />
		<!-- 拍下商品数量 -->
		<include refid="memberTable_bookGoodsCount" />
		<!-- 收货地区 -->
		<include refid="memberTable_receiveGoodsArea" />
		<!-- ### 自定义筛选 - 购物属性 ### -->

		<!-- ### 自定义筛选 - RFM属性 ### -->
		<!-- 购买次数 -->
		<include refid="memberTable_buyGoodsTime" />
		<!-- 拍下次数 -->
		<include refid="memberTable_bookGoodsTime" />
		<!-- 拍下未付款次数 -->
		<include refid="memberTable_bookButNonPaymentTime" />
		<!-- ### 自定义筛选 - RFM属性 ### -->

		<!-- ### 自定义筛选 - 会员属性 ### -->
		<!-- 手机号运营商 -->
		<include refid="memberTable_mobileManufacturer" />
		<!-- 手机号归属地 -->
		<include refid="memberTable_mobileLocation" />
		<!-- 手机号段 -->
		<include refid="memberTable_mobileSectionNumber" />
		<!-- 过滤黑名单 -->
		<include refid="memberTable_sendBlackListMember" />
		<!-- ### 自定义筛选 - 会员属性 ### -->

		<!-- ### 分组筛选 - 基础会员筛选条件 ### -->
		<!-- 会员分组 - 引用基础会员筛选的条件 -->
		<!-- 最近交易时间与最近未交易时间* -->
		<include refid="memberInfoDTO_tradeTimeAndUntradeTime" />
		<!-- 交易成功次数* -->
		<include refid="memberInfoDTO_tradeNum" />
		<!-- 累计消费金额* -->
		<include refid="memberInfoDTO_tradeAmount" />
		<!-- 平均订单金额* -->
		<include refid="memberInfoDTO_avgTradePrice" />
		<!-- 关闭交易次数* -->
		<include refid="memberInfoDTO_closeTradeNum" />
		<!-- 地区筛选【省份】* -->
		<include refid="memberInfoDTO_province" />
		<!-- 地区筛选【城市】* -->
		<include refid="memberInfoDTO_city" />
		<!-- 交易宝贝件数 -->
		<include refid="memberInfoDTO_itemNum" />
		<!-- 参与短信营销活动次数* -->
		<include refid="memberInfoDTO_marketingSmsNumber" />
		<!-- 已发送过滤* -->
		<include refid="memberInfoDTO_lastMarketingTime" />
		<!-- 黑名单* -->
		<include refid="memberInfoDTO_status" />
		<!-- ### 分组筛选 - 基础会员筛选条件 ### -->
		<include refid="limit_id" />
		GROUP BY M.ID
		ORDER BY M.ID DESC
		<!-- 分页组件 -->
		<include refid="pagination" />
		) M1
		WHERE
		MEM.ID = M1.ID
	</select>

	<!-- 高级会员筛选 - 使用会员表查询会员数量 -->
	<select id="findCountFromMemberInfoDTO" parameterType="java.util.Map"
		resultType="java.lang.Long">
		SELECT
		COUNT(1)
		FROM
		CRM_MEMBER_INFO_DTO${uid} MEM,(
		SELECT
		M.ID
		FROM
		CRM_MEMBER_INFO_DTO${uid} M
		WHERE
		M.UID =
		#{uid}
		<!-- ### 自定义筛选 - 购物属性 ### -->
		<!-- 付款商品数量 -->
		<include refid="memberTable_payGoodsCount" />
		<!-- 拍下商品数量 -->
		<include refid="memberTable_bookGoodsCount" />
		<!-- 收货地区 -->
		<include refid="memberTable_receiveGoodsArea" />
		<!-- ### 自定义筛选 - 购物属性 ### -->

		<!-- ### 自定义筛选 - RFM属性 ### -->
		<!-- 购买次数 -->
		<include refid="memberTable_buyGoodsTime" />
		<!-- 拍下次数 -->
		<include refid="memberTable_bookGoodsTime" />
		<!-- 拍下未付款次数 -->
		<include refid="memberTable_bookButNonPaymentTime" />
		<!-- ### 自定义筛选 - RFM属性 ### -->

		<!-- ### 自定义筛选 - 会员属性 ### -->
		<!-- 手机号运营商 -->
		<include refid="memberTable_mobileManufacturer" />
		<!-- 手机号归属地 -->
		<include refid="memberTable_mobileLocation" />
		<!-- 手机号段 -->
		<include refid="memberTable_mobileSectionNumber" />
		<!-- 过滤黑名单 -->
		<include refid="memberTable_sendBlackListMember" />
		<!-- ### 自定义筛选 - 会员属性 ### -->

		<!-- ### 分组筛选 - 基础会员筛选条件 ### -->
		<!-- 会员分组 - 引用基础会员筛选的条件 -->
		<!-- 最近交易时间与最近未交易时间* -->
		<include refid="memberInfoDTO_tradeTimeAndUntradeTime" />
		<!-- 交易成功次数* -->
		<include refid="memberInfoDTO_tradeNum" />
		<!-- 累计消费金额* -->
		<include refid="memberInfoDTO_tradeAmount" />
		<!-- 平均订单金额* -->
		<include refid="memberInfoDTO_avgTradePrice" />
		<!-- 关闭交易次数* -->
		<include refid="memberInfoDTO_closeTradeNum" />
		<!-- 地区筛选【省份】* -->
		<include refid="memberInfoDTO_province" />
		<!-- 地区筛选【城市】* -->
		<include refid="memberInfoDTO_city" />
		<!-- 交易宝贝件数 -->
		<include refid="memberInfoDTO_itemNum" />
		<!-- 参与短信营销活动次数* -->
		<include refid="memberInfoDTO_marketingSmsNumber" />
		<!-- 已发送过滤* -->
		<include refid="memberInfoDTO_lastMarketingTime" />
		<!-- 黑名单* -->
		<include refid="memberInfoDTO_status" />
		<!-- ### 分组筛选 - 基础会员筛选条件 ### -->
		GROUP BY M.ID
		) M1
		WHERE
		MEM.ID = M1.ID
	</select>

	<!-- 付款商品名称 -->
	<sql id="orderTable_payGoodsName">
		<if test="payGoodsNameList != null">
			AND
			<foreach collection="payGoodsNameList" item="item" index="index"
				open="(" close=")">
				<choose>
					<when test="index == 0">
						<if test="payGoodsNameList.size > 1">
							(
						</if>
						<choose>
							<when test="item.includeOrExclude == true">
								O.NUM_IID IN (
								SELECT
								I.NUM_IID
								FROM
								CRM_ITEM${uid} I
								WHERE
								I.TITLE
								LIKE
								<choose>
									<when
										test="(item.firstGoodsKeyCode != null and item.firstGoodsKeyCode != '') and (item.secondGoodsKeyCode == null or item.secondGoodsKeyCode == '' )">
										"%"#{item.firstGoodsKeyCode}"%"
									</when>
									<when
										test="(item.firstGoodsKeyCode == null or item.firstGoodsKeyCode == '') and (item.secondGoodsKeyCode != null and item.secondGoodsKeyCode != '' )">
										"%"#{item.secondGoodsKeyCode}"%"
									</when>
									<otherwise>
										<choose>
											<when test="item.andOrOrForGoods == 1">
												"%"#{item.firstGoodsKeyCode}"%"
												AND
												I.TITLE
												LIKE
												"%"#{item.secondGoodsKeyCode}"%"
											</when>
											<otherwise>
												"%"#{item.firstGoodsKeyCode}"%"
												OR
												I.TITLE
												LIKE
												"%"#{item.secondGoodsKeyCode}"%"
											</otherwise>
										</choose>
									</otherwise>
								</choose>
								)
							</when>
							<otherwise>
								O.NUM_IID NOT IN (
								SELECT
								I.NUM_IID
								FROM
								CRM_ITEM${uid} I
								WHERE
								I.TITLE
								LIKE
								<choose>
									<when
										test="(item.firstGoodsKeyCode != null and item.firstGoodsKeyCode != '') and (item.secondGoodsKeyCode == null or item.secondGoodsKeyCode == '' )">
										"%"#{item.firstGoodsKeyCode}"%"
									</when>
									<when
										test="(item.firstGoodsKeyCode == null or item.firstGoodsKeyCode == '') and (item.secondGoodsKeyCode != null and item.secondGoodsKeyCode != '' )">
										"%"#{item.secondGoodsKeyCode}"%"
									</when>
									<otherwise>
										<choose>
											<when test="item.andOrOrForGoods == 1">
												"%"#{item.firstGoodsKeyCode}"%"
												AND
												I.TITLE
												LIKE
												"%"#{item.secondGoodsKeyCode}"%"
											</when>
											<otherwise>
												"%"#{item.firstGoodsKeyCode}"%"
												OR
												I.TITLE
												LIKE
												"%"#{item.secondGoodsKeyCode}"%"
											</otherwise>
										</choose>
									</otherwise>
								</choose>
								)
							</otherwise>
						</choose>
						<if test="payGoodsNameList.size > 1">
							)
						</if>
					</when>
					<otherwise>
						<choose>
							<when test="item.andOrOr == true">
								AND (
								<choose>
									<when test="item.includeOrExclude == true">
										O.NUM_IID IN (
										SELECT
										I.NUM_IID
										FROM
										CRM_ITEM${uid} I
										WHERE
										I.TITLE
										LIKE
										<choose>
											<when
												test="(item.firstGoodsKeyCode != null and item.firstGoodsKeyCode != '') and (item.secondGoodsKeyCode == null or item.secondGoodsKeyCode == '' )">
												"%"#{item.firstGoodsKeyCode}"%"
											</when>
											<when
												test="(item.firstGoodsKeyCode == null or item.firstGoodsKeyCode == '') and (item.secondGoodsKeyCode != null and item.secondGoodsKeyCode != '' )">
												"%"#{item.secondGoodsKeyCode}"%"
											</when>
											<otherwise>
												<choose>
													<when test="item.andOrOrForGoods == 1">
														"%"#{item.firstGoodsKeyCode}"%"
														AND
														I.TITLE
														LIKE
														"%"#{item.secondGoodsKeyCode}"%"
													</when>
													<otherwise>
														"%"#{item.firstGoodsKeyCode}"%"
														OR
														I.TITLE
														LIKE
														"%"#{item.secondGoodsKeyCode}"%"
													</otherwise>
												</choose>
											</otherwise>
										</choose>
										)
									</when>
									<otherwise>
										O.NUM_IID NOT IN (
										SELECT
										I.NUM_IID
										FROM
										CRM_ITEM${uid} I
										WHERE
										I.TITLE
										LIKE
										<choose>
											<when
												test="(item.firstGoodsKeyCode != null and item.firstGoodsKeyCode != '') and (item.secondGoodsKeyCode == null or item.secondGoodsKeyCode == '' )">
												"%"#{item.firstGoodsKeyCode}"%"
											</when>
											<when
												test="(item.firstGoodsKeyCode == null or item.firstGoodsKeyCode == '') and (item.secondGoodsKeyCode != null and item.secondGoodsKeyCode != '' )">
												"%"#{item.secondGoodsKeyCode}"%"
											</when>
											<otherwise>
												<choose>
													<when test="item.andOrOrForGoods == 1">
														"%"#{item.firstGoodsKeyCode}"%"
														AND
														I.TITLE
														LIKE
														"%"#{item.secondGoodsKeyCode}"%"
													</when>
													<otherwise>
														"%"#{item.firstGoodsKeyCode}"%"
														OR
														I.TITLE
														LIKE
														"%"#{item.secondGoodsKeyCode}"%"
													</otherwise>
												</choose>
											</otherwise>
										</choose>
										)
									</otherwise>
								</choose>
								)
							</when>
							<otherwise>
								OR (
								<choose>
									<when test="item.includeOrExclude == true">
										O.NUM_IID IN (
										SELECT
										I.NUM_IID
										FROM
										CRM_ITEM${uid} I
										WHERE
										I.TITLE
										LIKE
										<choose>
											<when
												test="(item.firstGoodsKeyCode != null and item.firstGoodsKeyCode != '') and (item.secondGoodsKeyCode == null or item.secondGoodsKeyCode == '' )">
												"%"#{item.firstGoodsKeyCode}"%"
											</when>
											<when
												test="(item.firstGoodsKeyCode == null or item.firstGoodsKeyCode == '') and (item.secondGoodsKeyCode != null and item.secondGoodsKeyCode != '' )">
												"%"#{item.secondGoodsKeyCode}"%"
											</when>
											<otherwise>
												<choose>
													<when test="item.andOrOrForGoods == 1">
														"%"#{item.firstGoodsKeyCode}"%"
														AND
														I.TITLE
														LIKE
														"%"#{item.secondGoodsKeyCode}"%"
													</when>
													<otherwise>
														"%"#{item.firstGoodsKeyCode}"%"
														OR
														I.TITLE
														LIKE
														"%"#{item.secondGoodsKeyCode}"%"
													</otherwise>
												</choose>
											</otherwise>
										</choose>
										)
									</when>
									<otherwise>
										O.NUM_IID NOT IN (
										SELECT
										I.NUM_IID
										FROM
										CRM_ITEM${uid} I
										WHERE
										I.TITLE
										LIKE
										<choose>
											<when
												test="(item.firstGoodsKeyCode != null and item.firstGoodsKeyCode != '') and (item.secondGoodsKeyCode == null or item.secondGoodsKeyCode == '' )">
												"%"#{item.firstGoodsKeyCode}"%"
											</when>
											<when
												test="(item.firstGoodsKeyCode == null or item.firstGoodsKeyCode == '') and (item.secondGoodsKeyCode != null and item.secondGoodsKeyCode != '' )">
												"%"#{item.secondGoodsKeyCode}"%"
											</when>
											<otherwise>
												<choose>
													<when test="item.andOrOrForGoods == 1">
														"%"#{item.firstGoodsKeyCode}"%"
														AND
														I.TITLE
														LIKE
														"%"#{item.secondGoodsKeyCode}"%"
													</when>
													<otherwise>
														"%"#{item.firstGoodsKeyCode}"%"
														OR
														I.TITLE
														LIKE
														"%"#{item.secondGoodsKeyCode}"%"
													</otherwise>
												</choose>
											</otherwise>
										</choose>
										)
									</otherwise>
								</choose>
								)
							</otherwise>
						</choose>
					</otherwise>
				</choose>
			</foreach>
		</if>
	</sql>

	<!-- 时段内购买某商品 -->
	<sql id="orderTable_payGoodsInPeriodTime">
		<if test="payGoodsInPeriodTimeList != null">
			AND
			<foreach collection="payGoodsInPeriodTimeList" item="item"
				index="index" open="(" close=")">
				<choose>
					<when test="index == 0">
						<if test="payGoodsInPeriodTimeList.size > 1">
							(
						</if>
						<choose>
							<when test="item.includeOrExclude == true">
								<if test="item.startTime != null and item.endTime == null">
									O.TRADE_PAY_TIME_HMS &gt;= #{item.startTime}
								</if>
								<if test="item.startTime == null and item.endTime != null">
									O.TRADE_PAY_TIME_HMS &lt;= #{item.endTime}
								</if>
								<if test="item.startTime != null and item.endTime != null">
									<choose>
										<when test="item.compareResultBetweenStartAndEnd == -1">
											O.TRADE_PAY_TIME_HMS &gt;= #{item.startTime}
											AND
											O.TRADE_PAY_TIME_HMS &lt;= #{item.endTime}
										</when>
										<when test="item.compareResultBetweenStartAndEnd == 0">
											O.TRADE_PAY_TIME_HMS = #{item.startTime}
										</when>
										<otherwise>
											(
											O.TRADE_PAY_TIME_HMS &gt;= #{item.startTime}
											OR
											O.TRADE_PAY_TIME_HMS &lt;= #{item.endTime}
											)
										</otherwise>
									</choose>
								</if>
								<if test="item.numIids != null">
									AND
									O.NUM_IID IN
									<foreach collection="item.numIids" item="goods" open="("
										close=")" separator=",">
										#{goods}
									</foreach>
								</if>
							</when>
							<otherwise>
								(
								<if test="item.startTime != null and item.endTime == null">
									O.TRADE_PAY_TIME_HMS &gt;= #{item.startTime}
								</if>
								<if test="item.startTime == null and item.endTime != null">
									O.TRADE_PAY_TIME_HMS &lt;= #{item.endTime}
								</if>
								<if test="item.startTime != null and item.endTime != null">
									<choose>
										<when test="item.compareResultBetweenStartAndEnd == -1">
											O.TRADE_PAY_TIME_HMS &gt;= #{item.startTime}
											AND
											O.TRADE_PAY_TIME_HMS &lt;= #{item.endTime}
										</when>
										<when test="item.compareResultBetweenStartAndEnd == 0">
											O.TRADE_PAY_TIME_HMS = #{item.startTime}
										</when>
										<otherwise>
											(
											O.TRADE_PAY_TIME_HMS &gt;= #{item.startTime}
											OR
											O.TRADE_PAY_TIME_HMS &lt;= #{item.endTime}
											)
										</otherwise>
									</choose>
								</if>
								<if test="item.numIids != null">
									AND
									O.NUM_IID NOT IN
									<foreach collection="item.numIids" item="goods" open="("
										close=")" separator=",">
										#{goods}
									</foreach>
								</if>
								)
								OR
								(
								<if test="item.startTime != null and item.endTime == null">
									O.TRADE_PAY_TIME_HMS &lt; #{item.startTime}
								</if>
								<if test="item.startTime == null and item.endTime != null">
									O.TRADE_PAY_TIME_HMS &gt; #{item.endTime}
								</if>
								<if test="item.startTime != null and item.endTime != null">
									<choose>
										<when test="item.compareResultBetweenStartAndEnd == -1">
											(
											O.TRADE_PAY_TIME_HMS &lt; #{item.startTime}
											OR
											O.TRADE_PAY_TIME_HMS &gt; #{item.endTime}
											)
										</when>
										<when test="item.compareResultBetweenStartAndEnd == 0">
											O.TRADE_PAY_TIME_HMS != #{item.startTime}
										</when>
										<otherwise>
											O.TRADE_PAY_TIME_HMS &gt;= #{item.endTime}
											AND
											O.TRADE_PAY_TIME_HMS &lt;= #{item.startTime}
										</otherwise>
									</choose>
								</if>
								<if test="item.numIids != null">
									AND
									O.NUM_IID IN
									<foreach collection="item.numIids" item="goods" open="("
										close=")" separator=",">
										#{goods}
									</foreach>
								</if>
								)
								OR
								(
								<if test="item.startTime != null and item.endTime == null">
									O.TRADE_PAY_TIME_HMS &lt; #{item.startTime}
								</if>
								<if test="item.startTime == null and item.endTime != null">
									O.TRADE_PAY_TIME_HMS &gt; #{item.endTime}
								</if>
								<if test="item.startTime != null and item.endTime != null">
									<choose>
										<when test="item.compareResultBetweenStartAndEnd == -1">
											(
											O.TRADE_PAY_TIME_HMS &lt; #{item.startTime}
											OR
											O.TRADE_PAY_TIME_HMS &gt; #{item.endTime}
											)
										</when>
										<when test="item.compareResultBetweenStartAndEnd == -0">
											O.TRADE_PAY_TIME_HMS != #{item.startTime}
										</when>
										<otherwise>
											O.TRADE_PAY_TIME_HMS &gt;= #{item.endTime}
											AND
											O.TRADE_PAY_TIME_HMS &lt;= #{item.startTime}
										</otherwise>
									</choose>
								</if>
								<if test="item.numIids != null">
									AND
									O.NUM_IID NOT IN
									<foreach collection="item.numIids" item="goods" open="("
										close=")" separator=",">
										#{goods}
									</foreach>
								</if>
								)
							</otherwise>
						</choose>
						<if test="payGoodsInPeriodTimeList.size > 1">
							)
						</if>
					</when>
					<otherwise>
						<choose>
							<when test="item.andOrOr == true">
								AND (
								<choose>
									<when test="item.includeOrExclude == true">
										<if test="item.startTime != null and item.endTime == null">
											O.TRADE_PAY_TIME_HMS &gt;= #{item.startTime}
										</if>
										<if test="item.startTime == null and item.endTime != null">
											O.TRADE_PAY_TIME_HMS &lt;= #{item.endTime}
										</if>
										<if test="item.startTime != null and item.endTime != null">
											<choose>
												<when test="item.compareResultBetweenStartAndEnd == -1">
													O.TRADE_PAY_TIME_HMS &gt;= #{item.startTime}
													AND
													O.TRADE_PAY_TIME_HMS &lt;= #{item.endTime}
												</when>
												<when test="item.compareResultBetweenStartAndEnd == 0">
													O.TRADE_PAY_TIME_HMS = #{item.startTime}
												</when>
												<otherwise>
													(
													O.TRADE_PAY_TIME_HMS &gt;= #{item.startTime}
													OR
													O.TRADE_PAY_TIME_HMS &lt;= #{item.endTime}
													)
												</otherwise>
											</choose>
										</if>
										<if test="item.numIids != null">
											AND
											O.NUM_IID IN
											<foreach collection="item.numIids" item="goods" open="("
												close=")" separator=",">
												#{goods}
											</foreach>
										</if>
									</when>
									<otherwise>
										(
										<if test="item.startTime != null and item.endTime == null">
											O.TRADE_PAY_TIME_HMS &gt;= #{item.startTime}
										</if>
										<if test="item.startTime == null and item.endTime != null">
											O.TRADE_PAY_TIME_HMS &lt;= #{item.endTime}
										</if>
										<if test="item.startTime != null and item.endTime != null">
											<choose>
												<when test="item.compareResultBetweenStartAndEnd == -1">
													O.TRADE_PAY_TIME_HMS &gt;= #{item.startTime}
													AND
													O.TRADE_PAY_TIME_HMS &lt;= #{item.endTime}
												</when>
												<when test="item.compareResultBetweenStartAndEnd == 0">
													O.TRADE_PAY_TIME_HMS = #{item.startTime}
												</when>
												<otherwise>
													(
													O.TRADE_PAY_TIME_HMS &gt;= #{item.startTime}
													OR
													O.TRADE_PAY_TIME_HMS &lt;= #{item.endTime}
													)
												</otherwise>
											</choose>
										</if>
										<if test="item.numIids != null">
											AND
											O.NUM_IID NOT IN
											<foreach collection="item.numIids" item="goods" open="("
												close=")" separator=",">
												#{goods}
											</foreach>
										</if>
										)
										OR
										(
										<if test="item.startTime != null and item.endTime == null">
											O.TRADE_PAY_TIME_HMS &lt; #{item.startTime}
										</if>
										<if test="item.startTime == null and item.endTime != null">
											O.TRADE_PAY_TIME_HMS &gt; #{item.endTime}
										</if>
										<if test="item.startTime != null and item.endTime != null">
											<choose>
												<when test="item.compareResultBetweenStartAndEnd == -1">
													(
													O.TRADE_PAY_TIME_HMS &lt; #{item.startTime}
													OR
													O.TRADE_PAY_TIME_HMS &gt; #{item.endTime}
													)
												</when>
												<when test="item.compareResultBetweenStartAndEnd == -0">
													O.TRADE_PAY_TIME_HMS != #{item.startTime}
												</when>
												<otherwise>
													O.TRADE_PAY_TIME_HMS &gt;= #{item.endTime}
													AND
													O.TRADE_PAY_TIME_HMS &lt;= #{item.startTime}
												</otherwise>
											</choose>
										</if>
										<if test="item.numIids != null">
											AND
											O.NUM_IID IN
											<foreach collection="item.numIids" item="goods" open="("
												close=")" separator=",">
												#{goods}
											</foreach>
										</if>
										)
										OR
										(
										<if test="item.startTime != null and item.endTime == null">
											O.TRADE_PAY_TIME_HMS &lt; #{item.startTime}
										</if>
										<if test="item.startTime == null and item.endTime != null">
											O.TRADE_PAY_TIME_HMS &gt; #{item.endTime}
										</if>
										<if test="item.startTime != null and item.endTime != null">
											<choose>
												<when test="item.compareResultBetweenStartAndEnd == -1">
													(
													O.TRADE_PAY_TIME_HMS &lt; #{item.startTime}
													OR
													O.TRADE_PAY_TIME_HMS &gt; #{item.endTime}
													)
												</when>
												<when test="item.compareResultBetweenStartAndEnd == -0">
													O.TRADE_PAY_TIME_HMS != #{item.startTime}
												</when>
												<otherwise>
													O.TRADE_PAY_TIME_HMS &gt;= #{item.endTime}
													AND
													O.TRADE_PAY_TIME_HMS &lt;= #{item.startTime}
												</otherwise>
											</choose>
										</if>
										<if test="item.numIids != null">
											AND
											O.NUM_IID NOT IN
											<foreach collection="item.numIids" item="goods" open="("
												close=")" separator=",">
												#{goods}
											</foreach>
										</if>
										)
									</otherwise>
								</choose>
								)
							</when>
							<otherwise>
								OR (
								<choose>
									<when test="item.includeOrExclude == true">
										<if test="item.startTime != null and item.endTime == null">
											O.TRADE_PAY_TIME_HMS &gt;= #{item.startTime}
										</if>
										<if test="item.startTime == null and item.endTime != null">
											O.TRADE_PAY_TIME_HMS &lt;= #{item.endTime}
										</if>
										<if test="item.startTime != null and item.endTime != null">
											<choose>
												<when test="item.compareResultBetweenStartAndEnd == -1">
													O.TRADE_PAY_TIME_HMS &gt;= #{item.startTime}
													AND
													O.TRADE_PAY_TIME_HMS &lt;= #{item.endTime}
												</when>
												<when test="item.compareResultBetweenStartAndEnd == 0">
													O.TRADE_PAY_TIME_HMS = #{item.startTime}
												</when>
												<otherwise>
													(
													O.TRADE_PAY_TIME_HMS &gt;= #{item.startTime}
													OR
													O.TRADE_PAY_TIME_HMS &lt;= #{item.endTime}
													)
												</otherwise>
											</choose>
										</if>
										<if test="item.numIids != null">
											AND
											O.NUM_IID IN
											<foreach collection="item.numIids" item="goods" open="("
												close=")" separator=",">
												#{goods}
											</foreach>
										</if>
									</when>
									<otherwise>
										(
										<if test="item.startTime != null and item.endTime == null">
											O.TRADE_PAY_TIME_HMS &gt;= #{item.startTime}
										</if>
										<if test="item.startTime == null and item.endTime != null">
											O.TRADE_PAY_TIME_HMS &lt;= #{item.endTime}
										</if>
										<if test="item.startTime != null and item.endTime != null">
											<choose>
												<when test="item.compareResultBetweenStartAndEnd == -1">
													O.TRADE_PAY_TIME_HMS &gt;= #{item.startTime}
													AND
													O.TRADE_PAY_TIME_HMS &lt;= #{item.endTime}
												</when>
												<when test="item.compareResultBetweenStartAndEnd == 0">
													O.TRADE_PAY_TIME_HMS = #{item.startTime}
												</when>
												<otherwise>
													(
													O.TRADE_PAY_TIME_HMS &gt;= #{item.startTime}
													OR
													O.TRADE_PAY_TIME_HMS &lt;= #{item.endTime}
													)
												</otherwise>
											</choose>
										</if>
										<if test="item.numIids != null">
											AND
											O.NUM_IID NOT IN
											<foreach collection="item.numIids" item="goods" open="("
												close=")" separator=",">
												#{goods}
											</foreach>
										</if>
										)
										OR
										(
										<if test="item.startTime != null and item.endTime == null">
											O.TRADE_PAY_TIME_HMS &lt; #{item.startTime}
										</if>
										<if test="item.startTime == null and item.endTime != null">
											O.TRADE_PAY_TIME_HMS &gt; #{item.endTime}
										</if>
										<if test="item.startTime != null and item.endTime != null">
											<choose>
												<when test="item.compareResultBetweenStartAndEnd == -1">
													(
													O.TRADE_PAY_TIME_HMS &lt; #{item.startTime}
													OR
													O.TRADE_PAY_TIME_HMS &gt; #{item.endTime}
													)
												</when>
												<when test="item.compareResultBetweenStartAndEnd == -0">
													O.TRADE_PAY_TIME_HMS != #{item.startTime}
												</when>
												<otherwise>
													O.TRADE_PAY_TIME_HMS &gt;= #{item.endTime}
													AND
													O.TRADE_PAY_TIME_HMS &lt;= #{item.startTime}
												</otherwise>
											</choose>
										</if>
										<if test="item.numIids != null">
											AND
											O.NUM_IID IN
											<foreach collection="item.numIids" item="goods" open="("
												close=")" separator=",">
												#{goods}
											</foreach>
										</if>
										)
										OR
										(
										<if test="item.startTime != null and item.endTime == null">
											O.TRADE_PAY_TIME_HMS &lt; #{item.startTime}
										</if>
										<if test="item.startTime == null and item.endTime != null">
											O.TRADE_PAY_TIME_HMS &gt; #{item.endTime}
										</if>
										<if test="item.startTime != null and item.endTime != null">
											<choose>
												<when test="item.compareResultBetweenStartAndEnd == -1">
													(
													O.TRADE_PAY_TIME_HMS &lt; #{item.startTime}
													OR
													O.TRADE_PAY_TIME_HMS &gt; #{item.endTime}
													)
												</when>
												<when test="item.compareResultBetweenStartAndEnd == -0">
													O.TRADE_PAY_TIME_HMS != #{item.startTime}
												</when>
												<otherwise>
													O.TRADE_PAY_TIME_HMS &gt;= #{item.endTime}
													AND
													O.TRADE_PAY_TIME_HMS &lt;= #{item.startTime}
												</otherwise>
											</choose>
										</if>
										<if test="item.numIids != null">
											AND
											O.NUM_IID NOT IN
											<foreach collection="item.numIids" item="goods" open="("
												close=")" separator=",">
												#{goods}
											</foreach>
										</if>
										)
									</otherwise>
								</choose>
								)
							</otherwise>
						</choose>
					</otherwise>
				</choose>
			</foreach>
		</if>
	</sql>

	<!-- 付款商品数量 -->
	<sql id="memberTable_payGoodsCount">
		<if test="payGoodsCountList != null">
			AND
			<foreach collection="payGoodsCountList" item="item" index="index"
				open="(" close=")">
				<choose>
					<when test="index == 0">
						<if test="payGoodsCountList.size > 1">
							(
						</if>
						<choose>
							<when test="item.includeOrExclude == true">
								<choose>
									<when
										test="item.minPayGoodsCount != null and item.maxPayGoodsCount == null">
										M.ITEM_NUM &gt;= #{item.minPayGoodsCount}
									</when>
									<when
										test="item.minPayGoodsCount == null and item.maxPayGoodsCount != null">
										M.ITEM_NUM &lt;= #{item.maxPayGoodsCount}
									</when>
									<otherwise>
										M.ITEM_NUM &gt;= #{item.minPayGoodsCount}
										AND
										M.ITEM_NUM &lt;=
										#{item.maxPayGoodsCount}
									</otherwise>
								</choose>
							</when>
							<otherwise>
								<choose>
									<when
										test="item.minPayGoodsCount != null and item.maxPayGoodsCount == null">
										M.ITEM_NUM &lt; #{item.minPayGoodsCount}
									</when>
									<when
										test="item.minPayGoodsCount == null and item.maxPayGoodsCount != null">
										M.ITEM_NUM &gt; #{item.maxPayGoodsCount}
									</when>
									<otherwise>
										M.ITEM_NUM &lt; #{item.minPayGoodsCount}
										OR
										M.ITEM_NUM &gt; #{item.maxPayGoodsCount}
									</otherwise>
								</choose>
							</otherwise>
						</choose>
						<if test="payGoodsCountList.size > 1">
							)
						</if>
					</when>
					<otherwise>
						<choose>
							<when test="item.andOrOr == true">
								AND (
								<choose>
									<when test="item.includeOrExclude == true">
										<choose>
											<when
												test="item.minPayGoodsCount != null and item.maxPayGoodsCount == null">
												M.ITEM_NUM &gt;= #{item.minPayGoodsCount}
											</when>
											<when
												test="item.minPayGoodsCount == null and item.maxPayGoodsCount != null">
												M.ITEM_NUM &lt;= #{item.maxPayGoodsCount}
											</when>
											<otherwise>
												M.ITEM_NUM &gt;= #{item.minPayGoodsCount}
												AND
												M.ITEM_NUM &lt;=
												#{item.maxPayGoodsCount}
											</otherwise>
										</choose>
									</when>
									<otherwise>
										<choose>
											<when
												test="item.minPayGoodsCount != null and item.maxPayGoodsCount == null">
												M.ITEM_NUM &lt; #{item.minPayGoodsCount}
											</when>
											<when
												test="item.minPayGoodsCount == null and item.maxPayGoodsCount != null">
												M.ITEM_NUM &gt; #{item.maxPayGoodsCount}
											</when>
											<otherwise>
												M.ITEM_NUM &lt; #{item.minPayGoodsCount}
												OR
												M.ITEM_NUM &gt; #{item.maxPayGoodsCount}
											</otherwise>
										</choose>
									</otherwise>
								</choose>
								)
							</when>
							<otherwise>
								OR (
								<choose>
									<when test="item.includeOrExclude == true">
										<choose>
											<when
												test="item.minPayGoodsCount != null and item.maxPayGoodsCount == null">
												M.ITEM_NUM &gt;= #{item.minPayGoodsCount}
											</when>
											<when
												test="item.minPayGoodsCount == null and item.maxPayGoodsCount != null">
												M.ITEM_NUM &lt;= #{item.maxPayGoodsCount}
											</when>
											<otherwise>
												M.ITEM_NUM &gt;= #{item.minPayGoodsCount}
												AND
												M.ITEM_NUM &lt;=
												#{item.maxPayGoodsCount}
											</otherwise>
										</choose>
									</when>
									<otherwise>
										<choose>
											<when
												test="item.minPayGoodsCount != null and item.maxPayGoodsCount == null">
												M.ITEM_NUM &lt; #{item.minPayGoodsCount}
											</when>
											<when
												test="item.minPayGoodsCount == null and item.maxPayGoodsCount != null">
												M.ITEM_NUM &gt; #{item.maxPayGoodsCount}
											</when>
											<otherwise>
												M.ITEM_NUM &lt; #{item.minPayGoodsCount}
												OR
												M.ITEM_NUM &gt; #{item.maxPayGoodsCount}
											</otherwise>
										</choose>
									</otherwise>
								</choose>
								)
							</otherwise>
						</choose>
					</otherwise>
				</choose>
			</foreach>
		</if>
	</sql>

	<!-- 拍下商品数量 -->
	<sql id="memberTable_bookGoodsCount">
		<if test="bookGoodsCountList != null">
			AND
			<foreach collection="bookGoodsCountList" item="item" index="index"
				open="(" close=")">
				<choose>
					<when test="index == 0">
						<if test="bookGoodsCountList.size > 1">
							(
						</if>
						<choose>
							<when test="item.includeOrExclude == true">
								<choose>
									<when
										test="item.minBookGoodsCount != null and item.maxBookGoodsCount == null">
										M.ADD_ITEM_NUM &gt;= #{item.minBookGoodsCount}
									</when>
									<when
										test="item.minBookGoodsCount == null and item.maxBookGoodsCount != null">
										M.ADD_ITEM_NUM &lt;= #{item.maxBookGoodsCount}
									</when>
									<otherwise>
										M.ADD_ITEM_NUM &gt;= #{item.minBookGoodsCount}
										AND
										M.ADD_ITEM_NUM &lt;= #{item.maxBookGoodsCount}
									</otherwise>
								</choose>
							</when>
							<otherwise>
								<choose>
									<when
										test="item.minBookGoodsCount != null and item.maxBookGoodsCount == null">
										M.ADD_ITEM_NUM &lt; #{item.minBookGoodsCount}
									</when>
									<when
										test="item.minBookGoodsCount == null and item.maxBookGoodsCount != null">
										M.ADD_ITEM_NUM &gt; #{item.maxBookGoodsCount}
									</when>
									<otherwise>
										M.ADD_ITEM_NUM &lt; #{item.minBookGoodsCount}
										OR
										M.ADD_ITEM_NUM &gt; #{item.maxBookGoodsCount}
									</otherwise>
								</choose>
							</otherwise>
						</choose>
						<if test="bookGoodsCountList.size > 1">
							)
						</if>
					</when>
					<otherwise>
						<choose>
							<when test="item.andOrOr == true">
								AND (
								<choose>
									<when test="item.includeOrExclude == true">
										<choose>
											<when
												test="item.minBookGoodsCount != null and item.maxBookGoodsCount == null">
												M.ADD_ITEM_NUM &gt;= #{item.minBookGoodsCount}
											</when>
											<when
												test="item.minBookGoodsCount == null and item.maxBookGoodsCount != null">
												M.ADD_ITEM_NUM &lt;= #{item.maxBookGoodsCount}
											</when>
											<otherwise>
												M.ADD_ITEM_NUM &gt;= #{item.minBookGoodsCount}
												AND
												M.ADD_ITEM_NUM &lt;= #{item.maxBookGoodsCount}
											</otherwise>
										</choose>
									</when>
									<otherwise>
										<choose>
											<when
												test="item.minBookGoodsCount != null and item.maxBookGoodsCount == null">
												M.ADD_ITEM_NUM &lt; #{item.minBookGoodsCount}
											</when>
											<when
												test="item.minBookGoodsCount == null and item.maxBookGoodsCount != null">
												M.ADD_ITEM_NUM &gt; #{item.maxBookGoodsCount}
											</when>
											<otherwise>
												M.ADD_ITEM_NUM &lt; #{item.minBookGoodsCount}
												OR
												M.ADD_ITEM_NUM &gt; #{item.maxBookGoodsCount}
											</otherwise>
										</choose>
									</otherwise>
								</choose>
								)
							</when>
							<otherwise>
								OR (
								<choose>
									<when test="item.includeOrExclude == true">
										<choose>
											<when
												test="item.minBookGoodsCount != null and item.maxBookGoodsCount == null">
												M.ADD_ITEM_NUM &gt;= #{item.minBookGoodsCount}
											</when>
											<when
												test="item.minBookGoodsCount == null and item.maxBookGoodsCount != null">
												M.ADD_ITEM_NUM &lt;= #{item.maxBookGoodsCount}
											</when>
											<otherwise>
												M.ADD_ITEM_NUM &gt;= #{item.minBookGoodsCount}
												AND
												M.ADD_ITEM_NUM &lt;= #{item.maxBookGoodsCount}
											</otherwise>
										</choose>
									</when>
									<otherwise>
										<choose>
											<when
												test="item.minBookGoodsCount != null and item.maxBookGoodsCount == null">
												M.ADD_ITEM_NUM &lt; #{item.minBookGoodsCount}
											</when>
											<when
												test="item.minBookGoodsCount == null and item.maxBookGoodsCount != null">
												M.ADD_ITEM_NUM &gt; #{item.maxBookGoodsCount}
											</when>
											<otherwise>
												M.ADD_ITEM_NUM &lt; #{item.minBookGoodsCount}
												OR
												M.ADD_ITEM_NUM &gt; #{item.maxBookGoodsCount}
											</otherwise>
										</choose>
									</otherwise>
								</choose>
								)
							</otherwise>
						</choose>
					</otherwise>
				</choose>
			</foreach>
		</if>
	</sql>

	<!-- 商品价格 -->
	<sql id="orderTable_goodsPrice">
		<if test="goodsPriceList != null">
			AND
			<foreach collection="goodsPriceList" item="item" index="index"
				open="(" close=")">
				<choose>
					<when test="index == 0">
						<if test="goodsPriceList.size > 1">
							(
						</if>
						<choose>
							<when test="item.includeOrExclude == true">
								<choose>
									<when
										test="item.minGoodsPrice != null  and item.maxGoodsPrice == null">
										O.PRICE &gt;= #{item.minGoodsPrice}
									</when>
									<when
										test="item.minGoodsPrice == null and item.maxGoodsPrice != null">
										O.PRICE &lt;= #{item.maxGoodsPrice}
									</when>
									<otherwise>
										O.PRICE &gt;= #{item.minGoodsPrice}
										AND
										O.PRICE &lt;=
										#{item.maxGoodsPrice}
									</otherwise>
								</choose>
							</when>
							<otherwise>
								<choose>
									<when
										test="item.minGoodsPrice != null and item.maxGoodsPrice == null">
										O.PRICE &lt; #{item.minGoodsPrice}
									</when>
									<when
										test="item.minGoodsPrice == null and item.maxGoodsPrice != null">
										O.PRICE &gt; #{item.maxGoodsPrice}
									</when>
									<otherwise>
										O.PRICE &lt; #{item.minGoodsPrice}
										OR
										O.PRICE &gt;
										#{item.maxGoodsPrice}
									</otherwise>
								</choose>
							</otherwise>
						</choose>
						<if test="goodsPriceList.size > 1">
							)
						</if>
					</when>
					<otherwise>
						<choose>
							<when test="item.andOrOr == true">
								AND (
								<choose>
									<when test="item.includeOrExclude == true">
										<choose>
											<when
												test="item.minGoodsPrice != null and item.maxGoodsPrice == null">
												O.PRICE &gt;= #{item.minGoodsPrice}
											</when>
											<when
												test="item.minGoodsPrice == null and item.maxGoodsPrice != null">
												O.PRICE &lt;= #{item.maxGoodsPrice}
											</when>
											<otherwise>
												O.PRICE &gt;= #{item.minGoodsPrice}
												AND
												O.PRICE
												&lt;=
												#{item.maxGoodsPrice}
											</otherwise>
										</choose>
									</when>
									<otherwise>
										<choose>
											<when
												test="item.minGoodsPrice != null and item.maxGoodsPrice == null">
												O.PRICE &lt; #{item.minGoodsPrice}
											</when>
											<when
												test="item.minGoodsPrice == null and item.maxGoodsPrice != null">
												O.PRICE &gt; #{item.maxGoodsPrice}
											</when>
											<otherwise>
												O.PRICE &lt; #{item.minGoodsPrice}
												OR
												O.PRICE &gt;
												#{item.maxGoodsPrice}
											</otherwise>
										</choose>
									</otherwise>
								</choose>
								)
							</when>
							<otherwise>
								OR (
								<choose>
									<when test="item.includeOrExclude == true">
										<choose>
											<when
												test="item.minGoodsPrice != null and item.maxGoodsPrice == null">
												O.PRICE &gt;= #{item.minGoodsPrice}
											</when>
											<when
												test="item.minGoodsPrice == null and item.maxGoodsPrice != null">
												O.PRICE &lt;= #{item.maxGoodsPrice}
											</when>
											<otherwise>
												O.PRICE &gt;= #{item.minGoodsPrice}
												AND
												O.PRICE
												&lt;=
												#{item.maxGoodsPrice}
											</otherwise>
										</choose>
									</when>
									<otherwise>
										<choose>
											<when
												test="item.minGoodsPrice != null and item.maxGoodsPrice == null">
												O.PRICE &lt; #{item.minGoodsPrice}
											</when>
											<when
												test="item.minGoodsPrice == null and item.maxGoodsPrice != null">
												O.PRICE &gt; #{item.maxGoodsPrice}
											</when>
											<otherwise>
												O.PRICE &lt; #{item.minGoodsPrice}
												OR
												O.PRICE &gt;
												#{item.maxGoodsPrice}
											</otherwise>
										</choose>
									</otherwise>
								</choose>
								)
							</otherwise>
						</choose>
					</otherwise>
				</choose>
			</foreach>
		</if>
	</sql>

	<!-- 订单金额 -->
	<sql id="orderTable_orderPrice">
		<if test="orderPriceList != null">
			AND
			<foreach collection="orderPriceList" item="item" index="index"
				open="(" close=")">
				<choose>
					<when test="index == 0">
						<if test="orderPriceList.size > 1">
							(
						</if>
						<choose>
							<when test="item.includeOrExclude == true">
								<choose>
									<when
										test="item.minOrderPrice != null and item.maxOrderPrice == null">
										O.TRADE_PAYMENT &gt;= #{item.minOrderPrice}
									</when>
									<when
										test="item.minOrderPrice == null and item.maxOrderPrice != null">
										O.TRADE_PAYMENT &lt;= #{item.maxOrderPrice}
									</when>
									<otherwise>
										O.TRADE_PAYMENT &gt;= #{item.minOrderPrice}
										AND
										O.TRADE_PAYMENT
										&lt;= #{item.maxOrderPrice}
									</otherwise>
								</choose>
							</when>
							<otherwise>
								<choose>
									<when
										test="item.minOrderPrice != null and item.maxOrderPrice == null">
										O.TRADE_PAYMENT &lt; #{item.minOrderPrice}
									</when>
									<when
										test="item.minOrderPrice == null and item.maxOrderPrice != null">
										O.TRADE_PAYMENT &gt; #{item.maxOrderPrice}
									</when>
									<otherwise>
										O.TRADE_PAYMENT &lt; #{item.minOrderPrice}
										OR
										O.TRADE_PAYMENT &gt;
										#{item.maxOrderPrice}
									</otherwise>
								</choose>
							</otherwise>
						</choose>
						<if test="orderPriceList.size > 1">
							)
						</if>
					</when>
					<otherwise>
						<choose>
							<when test="item.andOrOr == true">
								AND (
								<choose>
									<when test="item.includeOrExclude == true">
										<choose>
											<when
												test="item.minOrderPrice != null and item.maxOrderPrice == null">
												O.TRADE_PAYMENT &gt;= #{item.minOrderPrice}
											</when>
											<when
												test="item.minOrderPrice == null and item.maxOrderPrice != null">
												O.TRADE_PAYMENT &lt;= #{item.maxOrderPrice}
											</when>
											<otherwise>
												O.TRADE_PAYMENT &gt;= #{item.minOrderPrice}
												AND
												O.PAYMENT
												&lt;= #{item.maxOrderPrice}
											</otherwise>
										</choose>
									</when>
									<otherwise>
										<choose>
											<when
												test="item.minOrderPrice != null and item.maxOrderPrice == null">
												O.TRADE_PAYMENT &lt; #{item.minOrderPrice}
											</when>
											<when
												test="item.minOrderPrice == null and item.maxOrderPrice != null">
												O.TRADE_PAYMENT &gt; #{item.maxOrderPrice}
											</when>
											<otherwise>
												O.TRADE_PAYMENT &lt; #{item.minOrderPrice}
												OR
												O.TRADE_PAYMENT
												&gt;= #{item.maxOrderPrice}
											</otherwise>
										</choose>
									</otherwise>
								</choose>
								)
							</when>
							<otherwise>
								OR (
								<choose>
									<when test="item.includeOrExclude == true">
										<choose>
											<when
												test="item.minOrderPrice != null and item.maxOrderPrice == null">
												O.TRADE_PAYMENT &gt;= #{item.minOrderPrice}
											</when>
											<when
												test="item.minOrderPrice == null and item.maxOrderPrice != null">
												O.TRADE_PAYMENT &lt;= #{item.maxOrderPrice}
											</when>
											<otherwise>
												O.TRADE_PAYMENT &gt;= #{item.minOrderPrice}
												AND
												O.TRADE_PAYMENT
												&lt;= #{item.maxOrderPrice}
											</otherwise>
										</choose>
									</when>
									<otherwise>
										<choose>
											<when
												test="item.minOrderPrice != null and item.maxOrderPrice == null">
												O.TRADE_PAYMENT &lt; #{item.minOrderPrice}
											</when>
											<when
												test="item.minOrderPrice == null and item.maxOrderPrice != null">
												O.TRADE_PAYMENT &gt; #{item.maxOrderPrice}
											</when>
											<otherwise>
												O.TRADE_PAYMENT &lt; #{item.minOrderPrice}
												OR
												O.TRADE_PAYMENT
												&gt; #{item.maxOrderPrice}
											</otherwise>
										</choose>
									</otherwise>
								</choose>
								)
							</otherwise>
						</choose>
					</otherwise>
				</choose>
			</foreach>
		</if>
	</sql>

	<!-- 收货地区 -->
	<sql id="memberTable_receiveGoodsArea">
		<if test="receiveGoodsAreaList != null">
			AND
			<foreach collection="receiveGoodsAreaList" item="item" index="index"
				open="(" close=")">
				<choose>
					<when test="index == 0">
						<if test="receiveGoodsAreaList.size > 1">
							(
						</if>
						<choose>
							<when test="item.includeOrExclude == true">
								<choose>
									<when
										test="item.receiveGoodsProvince != null and item.receiveGoodsCity == null">
										M.PROVINCE IN
										<foreach collection="item.receiveGoodsProvince" item="province"
											open="(" close=")" separator=",">
											#{province}
										</foreach>
									</when>
									<when
										test="item.receiveGoodsProvince == null and item.receiveGoodsCity != null">
										M.CITY IN
										<foreach collection="item.receiveGoodsCity" item="city"
											open="(" close=")" separator=",">
											#{city}
										</foreach>
									</when>
									<otherwise>
										M.PROVINCE IN
										<foreach collection="item.receiveGoodsProvince" item="province"
											open="(" close=")" separator=",">
											#{province}
										</foreach>
										OR
										M.CITY IN
										<foreach collection="item.receiveGoodsCity" item="city"
											open="(" close=")" separator=",">
											#{city}
										</foreach>
									</otherwise>
								</choose>
							</when>
							<otherwise>
								<choose>
									<when
										test="item.receiveGoodsProvince != null and item.receiveGoodsCity == null">
										(M.PROVINCE NOT IN
										<foreach collection="item.receiveGoodsProvince" item="province"
											open="(" close=")" separator=",">
											#{province}
										</foreach>
										AND M.PROVINCE IS NOT NULL)
									</when>
									<when
										test="item.receiveGoodsProvince == null and item.receiveGoodsCity != null">
										(M.CITY NOT IN
										<foreach collection="item.receiveGoodsCity" item="city"
											open="(" close=")" separator=",">
											#{city}
										</foreach>
										AND M.CITY IS NOT NULL)
									</when>
									<otherwise>
										(M.PROVINCE NOT IN
										<foreach collection="item.receiveGoodsProvince" item="province"
											open="(" close=")" separator=",">
											#{province}
										</foreach>
										AND M.PROVINCE IS NOT NULL)
										AND
										(M.CITY NOT IN
										<foreach collection="item.receiveGoodsCity" item="city"
											open="(" close=")" separator=",">
											#{city}
										</foreach>
										AND M.CITY IS NOT NULL)
									</otherwise>
								</choose>
							</otherwise>
						</choose>
						<if test="receiveGoodsAreaList.size > 1">
							)
						</if>
					</when>
					<otherwise>
						<choose>
							<when test="item.andOrOr == true">
								AND (
								<choose>
									<when test="item.includeOrExclude == true">
										<choose>
											<when
												test="item.receiveGoodsProvince != null and item.receiveGoodsCity == null">
												M.PROVINCE IN
												<foreach collection="item.receiveGoodsProvince"
													item="province" open="(" close=")" separator=",">
													#{province}
												</foreach>
											</when>
											<when
												test="item.receiveGoodsProvince == null and item.receiveGoodsCity != null">
												M.CITY IN
												<foreach collection="item.receiveGoodsCity" item="city"
													open="(" close=")" separator=",">
													#{city}
												</foreach>
											</when>
											<otherwise>
												M.PROVINCE IN
												<foreach collection="item.receiveGoodsProvince"
													item="province" open="(" close=")" separator=",">
													#{province}
												</foreach>
												OR
												M.CITY IN
												<foreach collection="item.receiveGoodsCity" item="city"
													open="(" close=")" separator=",">
													#{city}
												</foreach>
											</otherwise>
										</choose>
									</when>
									<otherwise>
										<choose>
											<when
												test="item.receiveGoodsProvince != null and item.receiveGoodsCity == null">
												(M.PROVINCE NOT IN
												<foreach collection="item.receiveGoodsProvince"
													item="province" open="(" close=")" separator=",">
													#{province}
												</foreach>
												AND M.PROVINCE IS NOT NULL)
											</when>
											<when
												test="item.receiveGoodsProvince == null and item.receiveGoodsCity != null">
												(M.CITY NOT IN
												<foreach collection="item.receiveGoodsCity" item="city"
													open="(" close=")" separator=",">
													#{city}
												</foreach>
												AND M.CITY IS NOT NULL)
											</when>
											<otherwise>
												(M.PROVINCE NOT IN
												<foreach collection="item.receiveGoodsProvince"
													item="province" open="(" close=")" separator=",">
													#{province}
												</foreach>
												AND M.PROVINCE IS NOT NULL)
												AND
												(M.CITY NOT IN
												<foreach collection="item.receiveGoodsCity" item="city"
													open="(" close=")" separator=",">
													#{city}
												</foreach>
												AND M.CITY IS NOT NULL)
											</otherwise>
										</choose>
									</otherwise>
								</choose>
								)
							</when>
							<otherwise>
								OR (
								<choose>
									<when test="item.includeOrExclude == true">
										<choose>
											<when
												test="item.receiveGoodsProvince != null and item.receiveGoodsCity == null">
												M.PROVINCE IN
												<foreach collection="item.receiveGoodsProvince"
													item="province" open="(" close=")" separator=",">
													#{province}
												</foreach>
											</when>
											<when
												test="item.receiveGoodsProvince == null and item.receiveGoodsCity != null">
												M.CITY IN
												<foreach collection="item.receiveGoodsCity" item="city"
													open="(" close=")" separator=",">
													#{city}
												</foreach>
											</when>
											<otherwise>
												M.PROVINCE IN
												<foreach collection="item.receiveGoodsProvince"
													item="province" open="(" close=")" separator=",">
													#{province}
												</foreach>
												OR
												M.CITY IN
												<foreach collection="item.receiveGoodsCity" item="city"
													open="(" close=")" separator=",">
													#{city}
												</foreach>
											</otherwise>
										</choose>
									</when>
									<otherwise>
										<choose>
											<when
												test="item.receiveGoodsProvince != null and item.receiveGoodsCity == null">
												(M.PROVINCE NOT IN
												<foreach collection="item.receiveGoodsProvince"
													item="province" open="(" close=")" separator=",">
													#{province}
												</foreach>
												AND M.PROVINCE IS NOT NULL)
											</when>
											<when
												test="item.receiveGoodsProvince == null and item.receiveGoodsCity != null">
												(M.CITY NOT IN
												<foreach collection="item.receiveGoodsCity" item="city"
													open="(" close=")" separator=",">
													#{city}
												</foreach>
												AND M.CITY IS NOT NULL)
											</when>
											<otherwise>
												(M.PROVINCE NOT IN
												<foreach collection="item.receiveGoodsProvince"
													item="province" open="(" close=")" separator=",">
													#{province}
												</foreach>
												AND M.PROVINCE IS NOT NULL)
												AND
												(M.CITY NOT IN
												<foreach collection="item.receiveGoodsCity" item="city"
													open="(" close=")" separator=",">
													#{city}
												</foreach>
												AND M.CITY IS NOT NULL)
											</otherwise>
										</choose>
									</otherwise>
								</choose>
								)
							</otherwise>
						</choose>
					</otherwise>
				</choose>
			</foreach>
		</if>
	</sql>

	<!-- 时段内订单状态 -->
	<sql id="orderTable_orderStatusInPeriodTime">
		<if test="orderStatusInPeriodTimeList != null">
			AND
			<foreach collection="orderStatusInPeriodTimeList" item="item"
				index="index" open="(" close=")">
				<choose>
					<when test="index == 0">
						<choose>
							<when test="item.includeOrExclude == true">
								<trim suffixOverrides="and">
									<if test="item.waitBuyerPay == true">
										(
										<if test="item.startTime != null and item.endTime == null">
											O.TRADE_CREATED_TIME &gt;= #{item.startTime}
										</if>
										<if test="item.startTime == null and item.endTime != null">
											O.TRADE_CREATED_TIME &lt;= #{item.endTime}
										</if>
										<if test="item.startTime != null and item.endTime != null">
											<choose>
												<when test="item.compareResultBetweenStartAndEnd == -1">
													O.TRADE_CREATED_TIME &gt;= #{item.startTime}
													AND
													O.TRADE_CREATED_TIME &lt;= #{item.endTime}
												</when>
												<when test="item.compareResultBetweenStartAndEnd == 0">
													O.TRADE_CREATED_TIME = #{item.startTime}
												</when>
												<otherwise>
													(
													O.TRADE_CREATED_TIME &gt;= #{item.startTime}
													OR
													O.TRADE_CREATED_TIME &lt;= #{item.endTime}
													)
												</otherwise>
											</choose>
										</if>
										AND
										O.STATUS = 'WAIT_BUYER_PAY'
										)
									</if>
									<if test="item.waitSellerSendGoods == true">
										<if test="item.waitBuyerPay == true">
											OR
										</if>
										(
										<if test="item.startTime != null and item.endTime == null">
											O.TRADE_PAY_TIME_HMS &gt;= #{item.startTime}
										</if>
										<if test="item.startTime == null and item.endTime != null">
											O.TRADE_PAY_TIME_HMS &lt;= #{item.endTime}
										</if>
										<if test="item.startTime != null and item.endTime != null">
											<choose>
												<when test="item.compareResultBetweenStartAndEnd == -1">
													O.TRADE_PAY_TIME_HMS &gt;= #{item.startTime}
													AND
													O.TRADE_PAY_TIME_HMS &lt;= #{item.endTime}
												</when>
												<when test="item.compareResultBetweenStartAndEnd == 0">
													O.TRADE_PAY_TIME_HMS = #{item.startTime}
												</when>
												<otherwise>
													(
													O.TRADE_PAY_TIME_HMS &gt;= #{item.startTime}
													OR
													O.TRADE_PAY_TIME_HMS &lt;=
													#{item.endTime}
													)
												</otherwise>
											</choose>
										</if>
										AND
										O.STATUS IN
										('WAIT_SELLER_SEND_GOODS','SELLER_CONSIGNED_PART')
										)
									</if>
									<if test="item.tradeFinished == true">
										<if
											test="item.waitBuyerPay == true or item.waitSellerSendGoods == true">
											OR
										</if>
										(
										<if test="item.startTime != null and item.endTime == null">
											O.TRADE_END_TIME_HMS &gt;= #{item.startTime}
										</if>
										<if test="item.startTime == null and item.endTime != null">
											O.TRADE_END_TIME_HMS &lt;= #{item.endTime}
										</if>
										<if test="item.startTime != null and item.endTime != null">
											<choose>
												<when test="item.compareResultBetweenStartAndEnd == -1">
													O.TRADE_END_TIME_HMS &gt;= #{item.startTime}
													AND
													O.TRADE_END_TIME_HMS &lt;= #{item.endTime}
												</when>
												<when test="item.compareResultBetweenStartAndEnd == 0">
													O.TRADE_END_TIME_HMS = #{item.startTime}
												</when>
												<otherwise>
													(
													O.TRADE_END_TIME_HMS &gt;= #{item.startTime}
													OR
													O.TRADE_END_TIME_HMS &lt;=
													#{item.endTime}
													)
												</otherwise>
											</choose>
										</if>
										AND
										O.STATUS = 'TRADE_FINISHED'
										)
									</if>
								</trim>
							</when>
							<otherwise>
								<trim suffixOverrides="and">
									<if test="item.waitBuyerPay == true">
										(
										<if test="item.startTime != null and item.endTime == null">
											O.TRADE_CREATED_TIME &gt; #{item.startTime}
										</if>
										<if test="item.startTime == null and item.endTime != null">
											O.TRADE_CREATED_TIME &lt; #{item.endTime}
										</if>
										<if test="item.startTime != null and item.endTime != null">
											<choose>
												<when test="item.compareResultBetweenStartAndEnd == -1">
													O.TRADE_CREATED_TIME &gt; #{item.startTime}
													AND
													O.TRADE_CREATED_TIME &lt; #{item.endTime}
												</when>
												<when test="item.compareResultBetweenStartAndEnd == 0">
													O.TRADE_CREATED_TIME != #{item.startTime}
												</when>
												<otherwise>
													O.TRADE_CREATED_TIME &gt; #{item.endTime}
													AND
													O.TRADE_CREATED_TIME &lt;
													#{item.startTime}
												</otherwise>
											</choose>
										</if>
										AND
										O.STATUS != 'WAIT_BUYER_PAY'
										)
									</if>
									<if test="item.waitSellerSendGoods == true">
										<if test="item.waitBuyerPay == true">
											AND
										</if>
										(
										<if test="item.startTime != null and item.endTime == null">
											O.TRADE_PAY_TIME_HMS &gt; #{item.startTime}
										</if>
										<if test="item.startTime == null and item.endTime != null">
											O.TRADE_PAY_TIME_HMS &lt; #{item.endTime}
										</if>
										<if test="item.startTime != null and item.endTime != null">
											<choose>
												<when test="item.compareResultBetweenStartAndEnd == -1">
													O.TRADE_PAY_TIME_HMS &gt; #{item.startTime}
													AND
													O.TRADE_PAY_TIME_HMS &lt; #{item.endTime}
												</when>
												<when test="item.compareResultBetweenStartAndEnd == 0">
													O.TRADE_PAY_TIME_HMS != #{item.startTime}
												</when>
												<otherwise>
													O.TRADE_PAY_TIME_HMS &gt; #{item.endTime}
													AND
													O.TRADE_PAY_TIME_HMS &lt;
													#{item.startTime}
												</otherwise>
											</choose>
										</if>
										AND
										O.STATUS NOT IN
										('WAIT_SELLER_SEND_GOODS','SELLER_CONSIGNED_PART')
										)
									</if>
									<if test="item.tradeFinished == true">
										<if
											test="item.waitBuyerPay == true or item.waitSellerSendGoods == true">
											AND
										</if>
										(
										<if test="item.startTime != null and item.endTime == null">
											O.TRADE_END_TIME_HMS &gt; #{item.startTime}
										</if>
										<if test="item.startTime == null and item.endTime != null">
											O.TRADE_END_TIME_HMS &lt; #{item.endTime}
										</if>
										<if test="item.startTime != null and item.endTime != null">
											<choose>
												<when test="item.compareResultBetweenStartAndEnd == -1">
													O.TRADE_END_TIME_HMS &gt; #{item.startTime}
													AND
													O.TRADE_END_TIME_HMS &lt; #{item.endTime}
												</when>
												<when test="item.compareResultBetweenStartAndEnd == 0">
													O.TRADE_END_TIME_HMS != #{item.startTime}
												</when>
												<otherwise>
													O.TRADE_END_TIME_HMS &gt; #{item.endTime}
													AND
													O.TRADE_END_TIME_HMS &lt;
													#{item.startTime}
												</otherwise>
											</choose>
										</if>
										AND
										O.STATUS != 'TRADE_FINISHED'
										)
									</if>
								</trim>
							</otherwise>
						</choose>
					</when>
					<otherwise>
						<choose>
							<when test="item.andOrOr == true">
								AND
								<choose>
									<when test="item.includeOrExclude == true">
										<trim suffixOverrides="and">
											<if test="item.waitBuyerPay == true">
												(
												<if test="item.startTime != null and item.endTime == null">
													O.TRADE_CREATED_TIME &gt;=
													#{item.startTime}
												</if>
												<if test="item.startTime == null and item.endTime != null">
													O.TRADE_CREATED_TIME &lt;= #{item.endTime}
												</if>
												<if test="item.startTime != null and item.endTime != null">
													<choose>
														<when test="item.compareResultBetweenStartAndEnd == -1">
															O.TRADE_CREATED_TIME &gt;=
															#{item.startTime}
															AND
															O.TRADE_CREATED_TIME &lt;=
															#{item.endTime}
														</when>
														<when test="item.compareResultBetweenStartAndEnd == 0">
															O.TRADE_CREATED_TIME =
															#{item.startTime}
														</when>
														<otherwise>
															(
															O.TRADE_CREATED_TIME &gt;=
															#{item.startTime}
															OR
															O.TRADE_CREATED_TIME &lt;=
															#{item.endTime}
															)
														</otherwise>
													</choose>
												</if>
												AND
												O.STATUS = 'WAIT_BUYER_PAY'
												)
											</if>
											<if test="item.waitSellerSendGoods == true">
												<if test="item.waitBuyerPay == true">
													OR
												</if>
												(
												<if test="item.startTime != null and item.endTime == null">
													O.TRADE_PAY_TIME_HMS &gt;=
													#{item.startTime}
												</if>
												<if test="item.startTime == null and item.endTime != null">
													O.TRADE_PAY_TIME_HMS &lt;= #{item.endTime}
												</if>
												<if test="item.startTime != null and item.endTime != null">
													<choose>
														<when test="item.compareResultBetweenStartAndEnd == -1">
															O.TRADE_PAY_TIME_HMS &gt;=
															#{item.startTime}
															AND
															O.TRADE_PAY_TIME_HMS &lt;=
															#{item.endTime}
														</when>
														<when test="item.compareResultBetweenStartAndEnd == 0">
															O.TRADE_PAY_TIME_HMS =
															#{item.startTime}
														</when>
														<otherwise>
															(
															O.TRADE_PAY_TIME_HMS &gt;=
															#{item.startTime}
															OR
															O.TRADE_PAY_TIME_HMS &lt;=
															#{item.endTime}
															)
														</otherwise>
													</choose>
												</if>
												AND
												O.STATUS IN
												('WAIT_SELLER_SEND_GOODS','SELLER_CONSIGNED_PART')
												)
											</if>
											<if test="item.tradeFinished == true">
												<if
													test="item.waitBuyerPay == true or item.waitSellerSendGoods == true">
													OR
												</if>
												(
												<if test="item.startTime != null and item.endTime == null">
													O.TRADE_END_TIME_HMS &gt;=
													#{item.startTime}
												</if>
												<if test="item.startTime == null and item.endTime != null">
													O.TRADE_END_TIME_HMS &lt;= #{item.endTime}
												</if>
												<if test="item.startTime != null and item.endTime != null">
													<choose>
														<when test="item.compareResultBetweenStartAndEnd == -1">
															O.TRADE_END_TIME_HMS &gt;=
															#{item.startTime}
															AND
															O.TRADE_END_TIME_HMS &lt;=
															#{item.endTime}
														</when>
														<when test="item.compareResultBetweenStartAndEnd == 0">
															O.TRADE_END_TIME_HMS =
															#{item.startTime}
														</when>
														<otherwise>
															(
															O.TRADE_END_TIME_HMS &gt;=
															#{item.startTime}
															OR
															O.TRADE_END_TIME_HMS &lt;=
															#{item.endTime}
															)
														</otherwise>
													</choose>
												</if>
												AND
												O.STATUS = 'TRADE_FINISHED'
												)
											</if>
										</trim>
									</when>
									<otherwise>
										<trim suffixOverrides="and">
											<if test="item.waitBuyerPay == true">
												(
												<if test="item.startTime != null and item.endTime == null">
													O.TRADE_CREATED_TIME &gt;
													#{item.startTime}
												</if>
												<if test="item.startTime == null and item.endTime != null">
													O.TRADE_CREATED_TIME &lt; #{item.endTime}
												</if>
												<if test="item.startTime != null and item.endTime != null">
													<choose>
														<when test="item.compareResultBetweenStartAndEnd == -1">
															O.TRADE_CREATED_TIME &gt;
															#{item.startTime}
															AND
															O.TRADE_CREATED_TIME &lt;
															#{item.endTime}
														</when>
														<when test="item.compareResultBetweenStartAndEnd == 0">
															O.TRADE_CREATED_TIME !=
															#{item.startTime}
														</when>
														<otherwise>
															O.TRADE_CREATED_TIME &gt;
															#{item.endTime}
															AND
															O.TRADE_CREATED_TIME &lt;
															#{item.startTime}
														</otherwise>
													</choose>
												</if>
												AND
												O.STATUS != 'WAIT_BUYER_PAY'
												)
											</if>
											<if test="item.waitSellerSendGoods == true">
												<if test="item.waitBuyerPay == true">
													AND
												</if>
												(
												<if test="item.startTime != null and item.endTime == null">
													O.TRADE_PAY_TIME_HMS &gt;
													#{item.startTime}
												</if>
												<if test="item.startTime == null and item.endTime != null">
													O.TRADE_PAY_TIME_HMS &lt; #{item.endTime}
												</if>
												<if test="item.startTime != null and item.endTime != null">
													<choose>
														<when test="item.compareResultBetweenStartAndEnd == -1">
															O.TRADE_PAY_TIME_HMS &gt;
															#{item.startTime}
															AND
															O.TRADE_PAY_TIME_HMS &lt;
															#{item.endTime}
														</when>
														<when test="item.compareResultBetweenStartAndEnd == 0">
															O.TRADE_PAY_TIME_HMS !=
															#{item.startTime}
														</when>
														<otherwise>
															O.TRADE_PAY_TIME_HMS &gt;
															#{item.endTime}
															AND
															O.TRADE_PAY_TIME_HMS &lt;
															#{item.startTime}
														</otherwise>
													</choose>
												</if>
												AND
												O.STATUS NOT IN
												('WAIT_SELLER_SEND_GOODS','SELLER_CONSIGNED_PART')
												)
											</if>
											<if test="item.tradeFinished == true">
												<if
													test="item.waitBuyerPay == true or item.waitSellerSendGoods == true">
													AND
												</if>
												(
												<if test="item.startTime != null and item.endTime == null">
													O.TRADE_END_TIME_HMS &gt;
													#{item.startTime}
												</if>
												<if test="item.startTime == null and item.endTime != null">
													O.TRADE_END_TIME_HMS &lt; #{item.endTime}
												</if>
												<if test="item.startTime != null and item.endTime != null">
													<choose>
														<when test="item.compareResultBetweenStartAndEnd == -1">
															O.TRADE_END_TIME_HMS &gt;
															#{item.startTime}
															AND
															O.TRADE_END_TIME_HMS &lt;
															#{item.endTime}
														</when>
														<when test="item.compareResultBetweenStartAndEnd == 0">
															O.TRADE_END_TIME_HMS !=
															#{item.startTime}
														</when>
														<otherwise>
															O.TRADE_END_TIME_HMS &gt;
															#{item.endTime}
															AND
															O.TRADE_END_TIME_HMS &lt;
															#{item.startTime}
														</otherwise>
													</choose>
												</if>
												AND
												O.STATUS != 'TRADE_FINISHED'
												)
											</if>
										</trim>
									</otherwise>
								</choose>
							</when>
							<otherwise>
								OR (
								<choose>
									<when test="item.includeOrExclude == true">
										<trim suffixOverrides="and">
											<if test="item.waitBuyerPay == true">
												(
												<if test="item.startTime != null and item.endTime == null">
													O.TRADE_CREATED_TIME &gt;=
													#{item.startTime}
												</if>
												<if test="item.startTime == null and item.endTime != null">
													O.TRADE_CREATED_TIME &lt;= #{item.endTime}
												</if>
												<if test="item.startTime != null and item.endTime != null">
													<choose>
														<when test="item.compareResultBetweenStartAndEnd == -1">
															O.TRADE_CREATED_TIME &gt;=
															#{item.startTime}
															AND
															O.TRADE_CREATED_TIME &lt;=
															#{item.endTime}
														</when>
														<when test="item.compareResultBetweenStartAndEnd == 0">
															O.TRADE_CREATED_TIME =
															#{item.startTime}
														</when>
														<otherwise>
															(
															O.TRADE_CREATED_TIME &gt;=
															#{item.startTime}
															OR
															O.TRADE_CREATED_TIME &lt;=
															#{item.endTime}
															)
														</otherwise>
													</choose>
												</if>
												AND
												O.STATUS = 'WAIT_BUYER_PAY'
												)
											</if>
											<if test="item.waitSellerSendGoods == true">
												<if test="item.waitBuyerPay == true">
													OR
												</if>
												(
												<if test="item.startTime != null and item.endTime == null">
													O.TRADE_PAY_TIME_HMS &gt;=
													#{item.startTime}
												</if>
												<if test="item.startTime == null and item.endTime != null">
													O.TRADE_PAY_TIME_HMS &lt;= #{item.endTime}
												</if>
												<if test="item.startTime != null and item.endTime != null">
													<choose>
														<when test="item.compareResultBetweenStartAndEnd == -1">
															O.TRADE_PAY_TIME_HMS &gt;=
															#{item.startTime}
															AND
															O.TRADE_PAY_TIME_HMS &lt;=
															#{item.endTime}
														</when>
														<when test="item.compareResultBetweenStartAndEnd == 0">
															O.TRADE_PAY_TIME_HMS =
															#{item.startTime}
														</when>
														<otherwise>
															(
															O.TRADE_PAY_TIME_HMS &gt;=
															#{item.startTime}
															OR
															O.TRADE_PAY_TIME_HMS &lt;=
															#{item.endTime}
															)
														</otherwise>
													</choose>
												</if>
												AND
												O.STATUS IN
												('WAIT_SELLER_SEND_GOODS','SELLER_CONSIGNED_PART')
												)
											</if>
											<if test="item.tradeFinished == true">
												<if
													test="item.waitBuyerPay == true or item.waitSellerSendGoods == true">
													OR
												</if>
												(
												<if test="item.startTime != null and item.endTime == null">
													O.TRADE_END_TIME_HMS &gt;=
													#{item.startTime}
												</if>
												<if test="item.startTime == null and item.endTime != null">
													O.TRADE_END_TIME_HMS &lt;= #{item.endTime}
												</if>
												<if test="item.startTime != null and item.endTime != null">
													<choose>
														<when test="item.compareResultBetweenStartAndEnd == -1">
															O.TRADE_END_TIME_HMS &gt;=
															#{item.startTime}
															AND
															O.TRADE_END_TIME_HMS &lt;=
															#{item.endTime}
														</when>
														<when test="item.compareResultBetweenStartAndEnd == 0">
															O.TRADE_END_TIME_HMS =
															#{item.startTime}
														</when>
														<otherwise>
															(
															O.TRADE_END_TIME_HMS &gt;=
															#{item.startTime}
															OR
															O.TRADE_END_TIME_HMS &lt;=
															#{item.endTime}
															)
														</otherwise>
													</choose>
												</if>
												AND
												O.STATUS = 'TRADE_FINISHED'
												)
											</if>
										</trim>
									</when>
									<otherwise>
										<trim suffixOverrides="and">
											<if test="item.waitBuyerPay == true">
												(
												<if test="item.startTime != null and item.endTime == null">
													O.TRADE_CREATED_TIME &gt;
													#{item.startTime}
												</if>
												<if test="item.startTime == null and item.endTime != null">
													O.TRADE_CREATED_TIME &lt; #{item.endTime}
												</if>
												<if test="item.startTime != null and item.endTime != null">
													<choose>
														<when test="item.compareResultBetweenStartAndEnd == -1">
															O.TRADE_CREATED_TIME &gt;
															#{item.startTime}
															AND
															O.TRADE_CREATED_TIME &lt;
															#{item.endTime}
														</when>
														<when test="item.compareResultBetweenStartAndEnd == 0">
															O.TRADE_CREATED_TIME !=
															#{item.startTime}
														</when>
														<otherwise>
															O.TRADE_CREATED_TIME &gt;
															#{item.endTime}
															AND
															O.TRADE_CREATED_TIME &lt;
															#{item.startTime}
														</otherwise>
													</choose>
												</if>
												AND
												O.STATUS != 'WAIT_BUYER_PAY'
												)
											</if>
											<if test="item.waitSellerSendGoods == true">
												<if test="item.waitBuyerPay == true">
													AND
												</if>
												(
												<if test="item.startTime != null and item.endTime == null">
													O.TRADE_PAY_TIME_HMS &gt;
													#{item.startTime}
												</if>
												<if test="item.startTime == null and item.endTime != null">
													O.TRADE_PAY_TIME_HMS &lt; #{item.endTime}
												</if>
												<if test="item.startTime != null and item.endTime != null">
													<choose>
														<when test="item.compareResultBetweenStartAndEnd == -1">
															O.TRADE_PAY_TIME_HMS &gt;
															#{item.startTime}
															AND
															O.TRADE_PAY_TIME_HMS &lt;
															#{item.endTime}
														</when>
														<when test="item.compareResultBetweenStartAndEnd == 0">
															O.TRADE_PAY_TIME_HMS !=
															#{item.startTime}
														</when>
														<otherwise>
															O.TRADE_PAY_TIME_HMS &gt;
															#{item.endTime}
															AND
															O.TRADE_PAY_TIME_HMS &lt;
															#{item.startTime}
														</otherwise>
													</choose>
												</if>
												AND
												O.STATUS NOT IN
												('WAIT_SELLER_SEND_GOODS','SELLER_CONSIGNED_PART')
												)
											</if>
											<if test="item.tradeFinished == true">
												<if
													test="item.waitBuyerPay == true or item.waitSellerSendGoods == true">
													AND
												</if>
												(
												<if test="item.startTime != null and item.endTime == null">
													O.TRADE_END_TIME_HMS &gt;
													#{item.startTime}
												</if>
												<if test="item.startTime == null and item.endTime != null">
													O.TRADE_END_TIME_HMS &lt; #{item.endTime}
												</if>
												<if test="item.startTime != null and item.endTime != null">
													<choose>
														<when test="item.compareResultBetweenStartAndEnd == -1">
															O.TRADE_END_TIME_HMS &gt;
															#{item.startTime}
															AND
															O.TRADE_END_TIME_HMS &lt;
															#{item.endTime}
														</when>
														<when test="item.compareResultBetweenStartAndEnd == 0">
															O.TRADE_END_TIME_HMS !=
															#{item.startTime}
														</when>
														<otherwise>
															O.TRADE_END_TIME_HMS &gt;
															#{item.endTime}
															AND
															O.TRADE_END_TIME_HMS &lt;
															#{item.startTime}
														</otherwise>
													</choose>
												</if>
												AND
												O.STATUS != 'TRADE_FINISHED'
												)
											</if>
										</trim>
									</otherwise>
								</choose>
								)
							</otherwise>
						</choose>
					</otherwise>
				</choose>
			</foreach>
		</if>
	</sql>

	<!-- 订单发货时间 -->
	<sql id="orderTable_orderSentDate">
		<if test="orderSentDateList != null">
			AND
			<foreach collection="orderSentDateList" item="item" index="index"
				open="(" close=")">
				<choose>
					<when test="index == 0">
						<if test="orderSentDateList.size > 1">
							(
						</if>
						<choose>
							<when test="item.includeOrExclude == true">
								<choose>
									<when test="item.startDate != null and item.endDate == null">
										O.TRADE_CONSIGN_TIME &gt;= #{item.startDate}
									</when>
									<when test="item.startDate == null and item.endDate != null">
										O.TRADE_CONSIGN_TIME &lt;= #{item.endDate}
									</when>
									<otherwise>
										O.TRADE_CONSIGN_TIME &gt;= #{item.startDate}
										AND
										O.TRADE_CONSIGN_TIME &lt;= #{item.endDate}
									</otherwise>
								</choose>
							</when>
							<otherwise>
								<choose>
									<when test="item.startDate != null and item.endDate == null">
										O.TRADE_CONSIGN_TIME &lt; #{item.startDate}
									</when>
									<when test="item.startDate == null and item.endDate != null">
										O.TRADE_CONSIGN_TIME &gt; #{item.endDate}
									</when>
									<otherwise>
										O.TRADE_CONSIGN_TIME &lt; #{item.startDate}
										OR
										O.TRADE_CONSIGN_TIME &gt; #{item.endDate}
									</otherwise>
								</choose>
							</otherwise>
						</choose>
						<if test="orderSentDateList.size > 1">
							)
						</if>
					</when>
					<otherwise>
						<choose>
							<when test="item.andOrOr == true">
								AND (
								<choose>
									<when test="item.includeOrExclude == true">
										<choose>
											<when test="item.startDate != null and item.endDate == null">
												O.TRADE_CONSIGN_TIME &gt;= #{item.startDate}
											</when>
											<when test="item.startDate == null and item.endDate != null">
												O.TRADE_CONSIGN_TIME &lt;= #{item.endDate}
											</when>
											<otherwise>
												O.TRADE_CONSIGN_TIME &gt;= #{item.startDate}
												AND
												O.TRADE_CONSIGN_TIME &lt;= #{item.endDate}
											</otherwise>
										</choose>
									</when>
									<otherwise>
										<choose>
											<when test="item.startDate != null and item.endDate == null">
												O.TRADE_CONSIGN_TIME &lt; #{item.startDate}
											</when>
											<when test="item.startDate == null and item.endDate != null">
												O.TRADE_CONSIGN_TIME &gt; #{item.endDate}
											</when>
											<otherwise>
												O.TRADE_CONSIGN_TIME &lt; #{item.startDate}
												OR
												O.TRADE_CONSIGN_TIME &gt; #{item.endDate}
											</otherwise>
										</choose>
									</otherwise>
								</choose>
								)
							</when>
							<otherwise>
								OR (
								<choose>
									<when test="item.includeOrExclude == true">
										<choose>
											<when test="item.startDate != null and item.endDate == null">
												O.TRADE_CONSIGN_TIME &gt;= #{item.startDate}
											</when>
											<when test="item.startDate == null and item.endDate != null">
												O.TRADE_CONSIGN_TIME &lt;= #{item.endDate}
											</when>
											<otherwise>
												O.TRADE_CONSIGN_TIME &gt;= #{item.startDate}
												AND
												O.TRADE_CONSIGN_TIME &lt;= #{item.endDate}
											</otherwise>
										</choose>
									</when>
									<otherwise>
										<choose>
											<when test="item.startDate != null and item.endDate == null">
												O.TRADE_CONSIGN_TIME &lt; #{item.startDate}
											</when>
											<when test="item.startDate == null and item.endDate != null">
												O.TRADE_CONSIGN_TIME &gt; #{item.endDate}
											</when>
											<otherwise>
												O.TRADE_CONSIGN_TIME &lt; #{item.startDate}
												OR
												O.TRADE_CONSIGN_TIME &gt; #{item.endDate}
											</otherwise>
										</choose>
									</otherwise>
								</choose>
								)
							</otherwise>
						</choose>
					</otherwise>
				</choose>
			</foreach>
		</if>
	</sql>

	<!-- 交易来源 -->
	<sql id="orderTable_orderFrom">
		<if test="orderFromForSQLList != null">
			AND
			<foreach collection="orderFromForSQLList" item="item" index="index"
				open="(" close=")">
				<choose>
					<when test="index == 0">
						<if test="orderFromForSQLList.size > 1">
							(
						</if>
						<choose>
							<when test="item.includeOrExclude == true">
								<if test="item.wap == true">
									O.ORDER_FROM LIKE "%WAP%"
								</if>
								<if test="item.wap == true and item.pc == true">
									OR
								</if>
								<if test="item.pc == true">
									O.ORDER_FROM LIKE "%TAOBAO%"
								</if>
								<if test="(item.wap == true or item.pc == true) and item.jhs == true">
									OR
								</if>
								<if test="item.jhs ==true">
									O.ORDER_FROM LIKE "%JHS%"
								</if>
								<if
									test="(item.wap == true or item.pc == true or item.jhs ==true) and item.importByUser == true">
									OR
								</if>
								<if test="item.importByUser == true">
									O.ORDER_FROM = "import"
								</if>
							</when>
							<otherwise>
								<if test="item.wap == true">
									O.ORDER_FROM NOT LIKE "%WAP%"
								</if>
								<if test="item.wap == true and item.pc == true">
									AND
								</if>
								<if test="item.pc == true">
									O.ORDER_FROM NOT LIKE "%TAOBAO%"
								</if>
								<if test="(item.wap == true or item.pc == true) and item.jhs == true">
									AND
								</if>
								<if test="item.jhs ==true">
									O.ORDER_FROM NOT LIKE "%JHS%"
								</if>
								<if
									test="(item.wap == true or item.pc == true or item.jhs ==true) and item.importByUser == true">
									AND
								</if>
								<if test="item.importByUser == true">
									O.ORDER_FROM != "import"
								</if>
							</otherwise>
						</choose>
						<if test="orderFromForSQLList.size > 1">
							)
						</if>
					</when>
					<otherwise>
						<choose>
							<when test="item.andOrOr == true">
								AND (
								<choose>
									<when test="item.includeOrExclude == true">
										<if test="item.wap == true">
											O.ORDER_FROM LIKE "%WAP%"
										</if>
										<if test="item.wap == true and item.pc == true">
											OR
										</if>
										<if test="item.pc == true">
											O.ORDER_FROM LIKE "%TAOBAO%"
										</if>
										<if
											test="(item.wap == true or item.pc == true) and item.jhs == true">
											OR
										</if>
										<if test="item.jhs ==true">
											O.ORDER_FROM LIKE "%JHS%"
										</if>
										<if
											test="(item.wap == true or item.pc == true or item.jhs ==true) and item.importByUser == true">
											OR
										</if>
										<if test="item.importByUser == true">
											O.ORDER_FROM = "import"
										</if>
									</when>
									<otherwise>
										<if test="item.wap == true">
											O.ORDER_FROM NOT LIKE "%WAP%"
										</if>
										<if test="item.wap == true and item.pc == true">
											AND
										</if>
										<if test="item.pc == true">
											O.ORDER_FROM NOT LIKE "%TAOBAO%"
										</if>
										<if
											test="(item.wap == true or item.pc == true) and item.jhs == true">
											AND
										</if>
										<if test="item.jhs ==true">
											O.ORDER_FROM NOT LIKE "%JHS%"
										</if>
										<if
											test="(item.wap == true or item.pc == true or item.jhs ==true) and item.importByUser == true">
											AND
										</if>
										<if test="item.importByUser == true">
											O.ORDER_FROM != "import"
										</if>
									</otherwise>
								</choose>
								)
							</when>
							<otherwise>
								OR (
								<choose>
									<when test="item.includeOrExclude == true">
										<if test="item.wap == true">
											O.ORDER_FROM LIKE "%WAP%"
										</if>
										<if test="item.wap == true and item.pc == true">
											OR
										</if>
										<if test="item.pc == true">
											O.ORDER_FROM LIKE "%TAOBAO%"
										</if>
										<if
											test="(item.wap == true or item.pc == true) and item.jhs == true">
											OR
										</if>
										<if test="item.jhs ==true">
											O.ORDER_FROM LIKE "%JHS%"
										</if>
										<if
											test="(item.wap == true or item.pc == true or item.jhs ==true) and item.importByUser == true">
											OR
										</if>
										<if test="item.importByUser == true">
											O.ORDER_FROM = "import"
										</if>
									</when>
									<otherwise>
										<if test="item.wap == true">
											O.ORDER_FROM NOT LIKE "%WAP%"
										</if>
										<if test="item.wap == true and item.pc == true">
											AND
										</if>
										<if test="item.pc == true">
											O.ORDER_FROM NOT LIKE "%TAOBAO%"
										</if>
										<if
											test="(item.wap == true or item.pc == true) and item.jhs == true">
											AND
										</if>
										<if test="item.jhs ==true">
											O.ORDER_FROM NOT LIKE "%JHS%"
										</if>
										<if
											test="(item.wap == true or item.pc == true or item.jhs ==true) and item.importByUser == true">
											AND
										</if>
										<if test="item.importByUser == true">
											O.ORDER_FROM != "import"
										</if>
									</otherwise>
								</choose>
								)
							</otherwise>
						</choose>
					</otherwise>
				</choose>
			</foreach>
		</if>
	</sql>

	<!-- 卖家备注 -->
	<sql id="orderTable_sellerFlag">
		<if test="sellerFlagList != null">
			AND
			<foreach collection="sellerFlagList" item="item" index="index"
				open="(" close=")">
				<choose>
					<when test="index == 0">
						<if test="sellerFlagList.size > 1">
							(
						</if>
						<choose>
							<when test="item.includeOrExclude == true">
								O.SELLER_FLAG IN
								<foreach collection="item.sellerFlag" item="flag" index="index"
									open="(" close=")" separator=",">
									#{flag}
								</foreach>
							</when>
							<otherwise>
								O.SELLER_FLAG NOT IN
								<foreach collection="item.sellerFlag" item="flag" index="index"
									open="(" close=")" separator=",">
									#{flag}
								</foreach>
								AND O.SELLER_FLAG IS NOT NULL
							</otherwise>
						</choose>
						<if test="sellerFlagList.size > 1">
							)
						</if>
					</when>
					<otherwise>
						<choose>
							<when test="item.andOrOr == true">
								AND (
								<choose>
									<when test="item.includeOrExclude == true">
										O.SELLER_FLAG IN
										<foreach collection="item.sellerFlag" item="flag"
											index="index" open="(" close=")" separator=",">
											#{flag}
										</foreach>
									</when>
									<otherwise>
										O.SELLER_FLAG NOT IN
										<foreach collection="item.sellerFlag" item="flag"
											index="index" open="(" close=")" separator=",">
											#{flag}
										</foreach>
										AND O.SELLER_FLAG IS NOT NULL
									</otherwise>
								</choose>
								)
							</when>
							<otherwise>
								OR (
								<choose>
									<when test="item.includeOrExclude == true">
										O.SELLER_FLAG IN
										<foreach collection="item.sellerFlag" item="flag"
											index="index" open="(" close=")" separator=",">
											#{flag}
										</foreach>
									</when>
									<otherwise>
										O.SELLER_FLAG NOT IN
										<foreach collection="item.sellerFlag" item="flag"
											index="index" open="(" close=")" separator=",">
											#{flag}
										</foreach>
										AND O.SELLER_FLAG IS NOT NULL
									</otherwise>
								</choose>
								)
							</otherwise>
						</choose>
					</otherwise>
				</choose>
			</foreach>
		</if>
	</sql>

	<!-- 买家评价 -->
	<sql id="orderTable_buyerRemark">
		<if test="buyerRemarkList != null">
			AND
			<foreach collection="buyerRemarkList" item="item" index="index"
				open="(" close=")">
				<choose>
					<when test="index == 0">
						<if test="buyerRemarkList.size > 1">
							(
						</if>
						<choose>
							<when test="item.includeOrExclude == true">
								<if test="item.good == true">
									O.RESULT = 'good' OR O.RESULT IS NULL
									AND M.TRADE_NUM
									&gt;= 1
								</if>
								<if test="item.neutral == true">
									<if test="item.good == true">
										OR
									</if>
									O.RESULT = 'neutral'
								</if>
								<if test="item.bad == true">
									<if test="item.good == true or item.neutral == true">
										OR
									</if>
									O.RESULT = 'bad'
								</if>
							</when>
							<otherwise>
								<if test="item.good == true">
									O.RESULT != 'good'
								</if>
								<if test="item.neutral == true">
									<if test="item.good == true">
										AND
									</if>
									O.RESULT != 'neutral' OR O.RESULT IS NULL
								</if>
								<if test="item.bad == true">
									<if test="item.good == true or item.neutral == true">
										AND
									</if>
									O.RESULT != 'bad' OR O.RESULT IS NULL
								</if>
							</otherwise>
						</choose>
						<if test="buyerRemarkList.size > 1">
							)
						</if>
					</when>
					<otherwise>
						<choose>
							<when test="item.andOrOr == true">
								AND (
								<choose>
									<when test="item.includeOrExclude == true">
										<if test="item.good == true">
											O.RESULT = 'good' OR O.RESULT IS NULL
											AND
											M.TRADE_NUM &gt;= 1
										</if>
										<if test="item.neutral == true">
											<if test="item.good == true">
												OR
											</if>
											O.RESULT = 'neutral'
										</if>
										<if test="item.bad == true">
											<if test="item.good == true or item.neutral == true">
												OR
											</if>
											O.RESULT = 'bad'
										</if>
									</when>
									<otherwise>
										<if test="item.good == true">
											O.RESULT != 'good' OR O.RESULT IS NULL
										</if>
										<if test="item.neutral == true">
											<if test="item.good == true">
												AND
											</if>
											O.RESULT != 'neutral' OR O.RESULT IS NULL
										</if>
										<if test="item.bad == true">
											<if test="item.good == true or item.neutral == true">
												AND
											</if>
											O.RESULT != 'bad'
										</if>
									</otherwise>
								</choose>
								)
							</when>
							<otherwise>
								OR (
								<choose>
									<when test="item.includeOrExclude == true">
										<if test="item.good == true">
											O.RESULT = 'good' OR O.RESULT IS NULL
											AND
											M.TRADE_NUM &gt;= 1
										</if>
										<if test="item.neutral == true">
											<if test="item.good == true">
												OR
											</if>
											O.RESULT = 'neutral'
										</if>
										<if test="item.bad == true">
											<if test="item.good == true or item.neutral == true">
												OR
											</if>
											O.RESULT = 'bad'
										</if>
									</when>
									<otherwise>
										<if test="item.good == true">
											O.RESULT != 'good'
										</if>
										<if test="item.neutral == true">
											<if test="item.good == true">
												AND
											</if>
											O.RESULT != 'neutral' OR O.RESULT IS NULL
										</if>
										<if test="item.bad == true">
											<if test="item.good == true or item.neutral == true">
												AND
											</if>
											O.RESULT != 'bad' OR O.RESULT IS NULL
										</if>
									</otherwise>
								</choose>
								)
							</otherwise>
						</choose>
					</otherwise>
				</choose>
			</foreach>
		</if>
	</sql>

	<!-- 时间内首次购买商品 -->
	<sql id="orderTable_buyGoodsInFirstTimeOfPeriodTime">
		<if test="buyGoodsInFirstTimeOfPeriodTimeList != null">
			AND
			<foreach collection="buyGoodsInFirstTimeOfPeriodTimeList"
				item="item" index="index" open="(" close=")">
				<choose>
					<when test="index == 0">
						<if test="buyGoodsInFirstTimeOfPeriodTimeList.size > 1">
							(
						</if>
						<choose>
							<when test="item.includeOrExclude == true">
								<if test="item.startDate != null and item.endDate == null">
									M.FIRST_PAY_TIME &gt;= #{item.startDate}
								</if>
								<if test="item.startDate == null and item.endDate != null">
									M.FIRST_PAY_TIME &lt;= #{item.endDate}
								</if>
								<if test="item.startDate != null and item.endDate != null">
									M.FIRST_PAY_TIME &gt;= #{item.startDate}
									AND
									M.FIRST_PAY_TIME &lt;= #{item.endDate}
								</if>
								<if test="item.numIids != null">
									AND
									O.NUM_IID IN
									<foreach collection="item.numIids" item="goods" open="("
										close=")" separator=",">
										#{goods}
									</foreach>
								</if>
							</when>
							<otherwise>
								(
								<if test="item.startDate != null and item.endDate == null">
									M.FIRST_PAY_TIME &gt; #{item.startDate}
								</if>
								<if test="item.startDate == null and item.endDate != null">
									M.FIRST_PAY_TIME &lt; #{item.endDate}
								</if>
								<if test="item.startDate != null and item.endDate != null">
									M.FIRST_PAY_TIME &gt; #{item.startDate}
									AND
									M.FIRST_PAY_TIME &lt; #{item.endDate}
								</if>
								<if test="item.numIids != null">
									AND
									O.NUM_IID NOT IN
									<foreach collection="item.numIids" item="goods" open="("
										close=")" separator=",">
										#{goods}
									</foreach>
								</if>
								)
								OR
								(
								<if test="item.startDate != null and item.endDate == null">
									M.FIRST_PAY_TIME &lt; #{item.startDate}
								</if>
								<if test="item.startDate == null and item.endDate != null">
									M.FIRST_PAY_TIME &gt; #{item.endDate}
								</if>
								<if test="item.startDate != null and item.endDate != null">
									M.FIRST_PAY_TIME &lt; #{item.startDate}
									OR
									M.FIRST_PAY_TIME &gt; #{item.endDate}
								</if>
								<if test="item.numIids != null">
									AND
									O.NUM_IID IN
									<foreach collection="item.numIids" item="goods" open="("
										close=")" separator=",">
										#{goods}
									</foreach>
								</if>
								)
								OR
								(
								<if test="item.startDate != null and item.endDate == null">
									M.FIRST_PAY_TIME &lt; #{item.startDate}
								</if>
								<if test="item.startDate == null and item.endDate != null">
									M.FIRST_PAY_TIME &gt; #{item.endDate}
								</if>
								<if test="item.startDate != null and item.endDate != null">
									M.FIRST_PAY_TIME &lt; #{item.startDate}
									OR
									M.FIRST_PAY_TIME &gt; #{item.endDate}
								</if>
								<if test="item.numIids != null">
									AND
									O.NUM_IID NOT IN
									<foreach collection="item.numIids" item="goods" open="("
										close=")" separator=",">
										#{goods}
									</foreach>
								</if>
								)
							</otherwise>
						</choose>
						<if test="buyGoodsInFirstTimeOfPeriodTimeList.size > 1">
							)
						</if>
					</when>
					<otherwise>
						<choose>
							<when test="item.andOrOr == true">
								AND (
								<choose>
									<when test="item.includeOrExclude == true">
										<if test="item.startDate != null and item.endDate == null">
											M.FIRST_PAY_TIME &gt;= #{item.startDate}
										</if>
										<if test="item.startDate == null and item.endDate != null">
											M.FIRST_PAY_TIME &lt;= #{item.endDate}
										</if>
										<if test="item.startDate != null and item.endDate != null">
											M.FIRST_PAY_TIME &gt;= #{item.startDate}
											AND
											M.FIRST_PAY_TIME &lt;=#{item.endDate}
										</if>
										<if test="item.numIids != null">
											AND
											O.NUM_IID IN
											<foreach collection="item.numIids" item="goods" open="("
												close=")" separator=",">
												#{goods}
											</foreach>
										</if>
									</when>
									<otherwise>
										(
										<if test="item.startDate != null and item.endDate == null">
											M.FIRST_PAY_TIME &gt; #{item.startDate}
										</if>
										<if test="item.startDate == null and item.endDate != null">
											M.FIRST_PAY_TIME &lt; #{item.endDate}
										</if>
										<if test="item.startDate != null and item.endDate != null">
											M.FIRST_PAY_TIME &gt; #{item.startDate}
											AND
											M.FIRST_PAY_TIME &lt; #{item.endDate}
										</if>
										<if test="item.numIids != null">
											AND
											O.NUM_IID NOT IN
											<foreach collection="item.numIids" item="goods" open="("
												close=")" separator=",">
												#{goods}
											</foreach>
										</if>
										)
										OR
										(
										<if test="item.startDate != null and item.endDate == null">
											M.FIRST_PAY_TIME &lt; #{item.startDate}
										</if>
										<if test="item.startDate == null and item.endDate != null">
											M.FIRST_PAY_TIME &gt; #{item.endDate}
										</if>
										<if test="item.startDate != null and item.endDate != null">
											M.FIRST_PAY_TIME &lt; #{item.startDate}
											OR
											M.FIRST_PAY_TIME &gt; #{item.endDate}
										</if>
										<if test="item.numIids != null">
											AND
											O.NUM_IID IN
											<foreach collection="item.numIids" item="goods" open="("
												close=")" separator=",">
												#{goods}
											</foreach>
										</if>
										)
										OR
										(
										<if test="item.startDate != null and item.endDate == null">
											M.FIRST_PAY_TIME &lt; #{item.startDate}
										</if>
										<if test="item.startDate == null and item.endDate != null">
											M.FIRST_PAY_TIME &gt; #{item.endDate}
										</if>
										<if test="item.startDate != null and item.endDate != null">
											M.FIRST_PAY_TIME &lt; #{item.startDate}
											OR
											M.FIRST_PAY_TIME &gt; #{item.endDate}
										</if>
										<if test="item.numIids != null">
											AND
											O.NUM_IID NOT IN
											<foreach collection="item.numIids" item="goods" open="("
												close=")" separator=",">
												#{goods}
											</foreach>
										</if>
										)
									</otherwise>
								</choose>
								)
							</when>
							<otherwise>
								OR (
								<choose>
									<when test="item.includeOrExclude == true">
										<if test="item.startDate != null and item.endDate == null">
											M.FIRST_PAY_TIME &gt;= #{item.startDate}
										</if>
										<if test="item.startDate == null and item.endDate != null">
											M.FIRST_PAY_TIME &lt;= #{item.endDate}
										</if>
										<if test="item.startDate != null and item.endDate != null">
											M.FIRST_PAY_TIME &gt;= #{item.startDate}
											AND
											M.FIRST_PAY_TIME &lt;= #{item.endDate}
										</if>
										<if test="item.numIids != null">
											AND
											O.NUM_IID IN
											<foreach collection="item.numIids" item="goods" open="("
												close=")" separator=",">
												#{goods}
											</foreach>
										</if>
									</when>
									<otherwise>
										(
										<if test="item.startDate != null and item.endDate == null">
											M.FIRST_PAY_TIME &gt; #{item.startDate}
										</if>
										<if test="item.startDate == null and item.endDate != null">
											M.FIRST_PAY_TIME &lt; #{item.endDate}
										</if>
										<if test="item.startDate != null and item.endDate != null">
											M.FIRST_PAY_TIME &gt; #{item.startDate}
											AND
											M.FIRST_PAY_TIME &lt; #{item.endDate}
										</if>
										<if test="item.numIids != null">
											AND
											O.NUM_IID NOT IN
											<foreach collection="item.numIids" item="goods" open="("
												close=")" separator=",">
												#{goods}
											</foreach>
										</if>
										)
										OR
										(
										<if test="item.startDate != null and item.endDate == null">
											M.FIRST_PAY_TIME &lt; #{item.startDate}
										</if>
										<if test="item.startDate == null and item.endDate != null">
											M.FIRST_PAY_TIME &gt; #{item.endDate}
										</if>
										<if test="item.startDate != null and item.endDate != null">
											M.FIRST_PAY_TIME &lt; #{item.startDate}
											OR
											M.FIRST_PAY_TIME &gt; #{item.endDate}
										</if>
										<if test="item.numIids != null">
											AND
											O.NUM_IID IN
											<foreach collection="item.numIids" item="goods" open="("
												close=")" separator=",">
												#{goods}
											</foreach>
										</if>
										)
										OR
										(
										<if test="item.startDate != null and item.endDate == null">
											M.FIRST_PAY_TIME &lt; #{item.startDate}
										</if>
										<if test="item.startDate == null and item.endDate != null">
											M.FIRST_PAY_TIME &gt; #{item.endDate}
										</if>
										<if test="item.startDate != null and item.endDate != null">
											M.FIRST_PAY_TIME &lt; #{item.startDate}
											OR
											M.FIRST_PAY_TIME &gt; #{item.endDate}
										</if>
										<if test="item.numIids != null">
											AND
											O.NUM_IID NOT IN
											<foreach collection="item.numIids" item="goods" open="("
												close=")" separator=",">
												#{goods}
											</foreach>
										</if>
										)
									</otherwise>
								</choose>
								)
							</otherwise>
						</choose>
					</otherwise>
				</choose>
			</foreach>
		</if>
	</sql>

	<!-- 时间内最后一次购买商品 -->
	<sql id="orderTable_buyGoodsInLastTimeOfPeriodTime">
		<if test="buyGoodsInLastTimeOfPeriodTimeList != null">
			AND
			<foreach collection="buyGoodsInLastTimeOfPeriodTimeList"
				item="item" index="index" open="(" close=")">
				<choose>
					<when test="index == 0">
						<if test="buyGoodsInLastTimeOfPeriodTimeList.size > 1">
							(
						</if>
						<choose>
							<when test="item.includeOrExclude == true">
								<if test="item.startDate != null and item.endDate == null">
									M.LAST_TRADE_TIME &gt;= #{item.startDate}
								</if>
								<if test="item.startDate == null and item.endDate != null">
									M.LAST_TRADE_TIME &lt;= #{item.endDate}
								</if>
								<if test="item.startDate != null and item.endDate != null">
									M.LAST_TRADE_TIME &gt;= #{item.startDate}
									AND
									M.LAST_TRADE_TIME &lt;= #{item.endDate}
								</if>
								<if test="item.numIids != null">
									AND
									O.NUM_IID IN
									<foreach collection="item.numIids" item="goods" open="("
										close=")" separator=",">
										#{goods}
									</foreach>
								</if>
							</when>
							<otherwise>
								(
								<if test="item.startDate != null and item.endDate == null">
									M.LAST_TRADE_TIME &gt; #{item.startDate}
								</if>
								<if test="item.startDate == null and item.endDate != null">
									M.LAST_TRADE_TIME &lt; #{item.endDate}
								</if>
								<if test="item.startDate != null and item.endDate != null">
									M.LAST_TRADE_TIME &gt; #{item.startDate}
									AND
									M.LAST_TRADE_TIME &lt; #{item.endDate}
								</if>
								<if test="item.numIids != null">
									AND
									O.NUM_IID NOT IN
									<foreach collection="item.numIids" item="goods" open="("
										close=")" separator=",">
										#{goods}
									</foreach>
								</if>
								)
								OR
								(
								<if test="item.startDate != null and item.endDate == null">
									M.LAST_TRADE_TIME &lt; #{item.startDate}
								</if>
								<if test="item.startDate == null and item.endDate != null">
									M.LAST_TRADE_TIME &gt; #{item.endDate}
								</if>
								<if test="item.startDate != null and item.endDate != null">
									M.LAST_TRADE_TIME &lt; #{item.startDate}
									OR
									M.LAST_TRADE_TIME &gt; #{item.endDate}
								</if>
								<if test="item.numIids != null">
									AND
									O.NUM_IID IN
									<foreach collection="item.numIids" item="goods" open="("
										close=")" separator=",">
										#{goods}
									</foreach>
								</if>
								)
								OR
								(
								<if test="item.startDate != null and item.endDate == null">
									M.LAST_TRADE_TIME &lt; #{item.startDate}
								</if>
								<if test="item.startDate == null and item.endDate != null">
									M.LAST_TRADE_TIME &gt; #{item.endDate}
								</if>
								<if test="item.startDate != null and item.endDate != null">
									M.LAST_TRADE_TIME &lt; #{item.startDate}
									OR
									M.LAST_TRADE_TIME &gt; #{item.endDate}
								</if>
								<if test="item.numIids != null">
									AND
									O.NUM_IID NOT IN
									<foreach collection="item.numIids" item="goods" open="("
										close=")" separator=",">
										#{goods}
									</foreach>
								</if>
								)
							</otherwise>
						</choose>
						<if test="buyGoodsInLastTimeOfPeriodTimeList.size > 1">
							)
						</if>
					</when>
					<otherwise>
						<choose>
							<when test="item.andOrOr == true">
								AND (
								<choose>
									<when test="item.includeOrExclude == true">
										<if test="item.startDate != null and item.endDate == null">
											M.LAST_TRADE_TIME &gt;= #{item.startDate}
										</if>
										<if test="item.startDate == null and item.endDate != null">
											M.LAST_TRADE_TIME &lt;= #{item.endDate}
										</if>
										<if test="item.startDate != null and item.endDate != null">
											M.LAST_TRADE_TIME &gt;= #{item.startDate}
											AND
											M.LAST_TRADE_TIME &lt;= #{item.endDate}
										</if>
										<if test="item.numIids != null">
											AND
											O.NUM_IID IN
											<foreach collection="item.numIids" item="goods" open="("
												close=")" separator=",">
												#{goods}
											</foreach>
										</if>
									</when>
									<otherwise>
										(
										<if test="item.startDate != null and item.endDate == null">
											M.LAST_TRADE_TIME &gt; #{item.startDate}
										</if>
										<if test="item.startDate == null and item.endDate != null">
											M.LAST_TRADE_TIME &lt; #{item.endDate}
										</if>
										<if test="item.startDate != null and item.endDate != null">
											M.LAST_TRADE_TIME &gt; #{item.startDate}
											AND
											M.LAST_TRADE_TIME &lt; #{item.endDate}
										</if>
										<if test="item.numIids != null">
											AND
											O.NUM_IID NOT IN
											<foreach collection="item.numIids" item="goods" open="("
												close=")" separator=",">
												#{goods}
											</foreach>
										</if>
										)
										OR
										(
										<if test="item.startDate != null and item.endDate == null">
											M.LAST_TRADE_TIME &lt; #{item.startDate}
										</if>
										<if test="item.startDate == null and item.endDate != null">
											M.LAST_TRADE_TIME &gt; #{item.endDate}
										</if>
										<if test="item.startDate != null and item.endDate != null">
											M.LAST_TRADE_TIME &lt; #{item.startDate}
											OR
											M.LAST_TRADE_TIME &gt; #{item.endDate}
										</if>
										<if test="item.numIids != null">
											AND
											O.NUM_IID IN
											<foreach collection="item.numIids" item="goods" open="("
												close=")" separator=",">
												#{goods}
											</foreach>
										</if>
										)
										OR
										(
										<if test="item.startDate != null and item.endDate == null">
											M.LAST_TRADE_TIME &lt; #{item.startDate}
										</if>
										<if test="item.startDate == null and item.endDate != null">
											M.LAST_TRADE_TIME &gt; #{item.endDate}
										</if>
										<if test="item.startDate != null and item.endDate != null">
											M.LAST_TRADE_TIME &lt; #{item.startDate}
											OR
											M.LAST_TRADE_TIME &gt; #{item.endDate}
										</if>
										<if test="item.numIids != null">
											AND
											O.NUM_IID NOT IN
											<foreach collection="item.numIids" item="goods" open="("
												close=")" separator=",">
												#{goods}
											</foreach>
										</if>
										)
									</otherwise>
								</choose>
								)
							</when>
							<otherwise>
								OR (
								<choose>
									<when test="item.includeOrExclude == true">
										<if test="item.startDate != null and item.endDate == null">
											M.LAST_TRADE_TIME &gt;= #{item.startDate}
										</if>
										<if test="item.startDate == null and item.endDate != null">
											M.LAST_TRADE_TIME &lt;= #{item.endDate}
										</if>
										<if test="item.startDate != null and item.endDate != null">
											M.LAST_TRADE_TIME &gt;= #{item.startDate}
											AND
											M.LAST_TRADE_TIME &lt;= #{item.endDate}
										</if>
										<if test="item.numIids != null">
											AND
											O.NUM_IID IN
											<foreach collection="item.numIids" item="goods" open="("
												close=")" separator=",">
												#{goods}
											</foreach>
										</if>
									</when>
									<otherwise>
										(
										<if test="item.startDate != null and item.endDate == null">
											M.LAST_TRADE_TIME &gt; #{item.startDate}
										</if>
										<if test="item.startDate == null and item.endDate != null">
											M.LAST_TRADE_TIME &lt; #{item.endDate}
										</if>
										<if test="item.startDate != null and item.endDate != null">
											M.LAST_TRADE_TIME &gt; #{item.startDate}
											AND
											M.LAST_TRADE_TIME &lt; #{item.endDate}
										</if>
										<if test="item.numIids != null">
											AND
											O.NUM_IID NOT IN
											<foreach collection="item.numIids" item="goods" open="("
												close=")" separator=",">
												#{goods}
											</foreach>
										</if>
										)
										OR
										(
										<if test="item.startDate != null and item.endDate == null">
											M.LAST_TRADE_TIME &lt; #{item.startDate}
										</if>
										<if test="item.startDate == null and item.endDate != null">
											M.LAST_TRADE_TIME &gt; #{item.endDate}
										</if>
										<if test="item.startDate != null and item.endDate != null">
											M.LAST_TRADE_TIME &lt; #{item.startDate}
											OR
											M.LAST_TRADE_TIME &gt; #{item.endDate}
										</if>
										<if test="item.numIids != null">
											AND
											O.NUM_IID IN
											<foreach collection="item.numIids" item="goods" open="("
												close=")" separator=",">
												#{goods}
											</foreach>
										</if>
										)
										OR
										(
										<if test="item.startDate != null and item.endDate == null">
											M.LAST_TRADE_TIME &lt; #{item.startDate}
										</if>
										<if test="item.startDate == null and item.endDate != null">
											M.LAST_TRADE_TIME &gt; #{item.endDate}
										</if>
										<if test="item.startDate != null and item.endDate != null">
											M.LAST_TRADE_TIME &lt; #{item.startDate}
											OR
											M.LAST_TRADE_TIME &gt; #{item.endDate}
										</if>
										<if test="item.numIids != null">
											AND
											O.NUM_IID NOT IN
											<foreach collection="item.numIids" item="goods" open="("
												close=")" separator=",">
												#{goods}
											</foreach>
										</if>
										)
									</otherwise>
								</choose>
								)
							</otherwise>
						</choose>
					</otherwise>
				</choose>
			</foreach>
		</if>
	</sql>

	<!-- 拍下时间 -->
	<sql id="orderTable_bookDate">
		<if test="bookDateList != null">
			AND
			<foreach collection="bookDateList" item="item" index="index"
				open="(" close=")">
				<choose>
					<when test="index == 0">
						<if test="bookDateList.size > 1">
							(
						</if>
						<choose>
							<when test="item.includeOrExclude == true">
								<if test="item.startDate != null and item.endDate == null">
									O.TRADE_CREATED &gt;= #{item.startDate}
								</if>
								<if test="item.startDate == null and item.endDate != null">
									O.TRADE_CREATED &lt;= #{item.endDate}
								</if>
								<if test="item.startDate != null and item.endDate != null">
									O.TRADE_CREATED &gt;= #{item.startDate}
									AND
									O.TRADE_CREATED &lt;= #{item.endDate}
								</if>
							</when>
							<otherwise>
								<if test="item.startDate != null and item.endDate == null">
									O.TRADE_CREATED &lt; #{item.startDate}
								</if>
								<if test="item.startDate == null and item.endDate != null">
									O.TRADE_CREATED &gt; #{item.endDate}
								</if>
								<if test="item.startDate != null and item.endDate != null">
									O.TRADE_CREATED &lt; #{item.startDate}
									OR
									O.TRADE_CREATED &gt; #{item.endDate}
								</if>
							</otherwise>
						</choose>
						<if test="bookDateList.size > 1">
							)
						</if>
					</when>
					<otherwise>
						<choose>
							<when test="item.andOrOr == true">
								AND (
								<choose>
									<when test="item.includeOrExclude == true">
										<if test="item.startDate != null and item.endDate == null">
											O.TRADE_CREATED &gt;= #{item.startDate}
										</if>
										<if test="item.startDate == null and item.endDate != null">
											O.TRADE_CREATED &lt;=#{item.endDate}
										</if>
										<if test="item.startDate != null and item.endDate != null">
											O.TRADE_CREATED &gt;= #{item.startDate}
											AND
											O.TRADE_CREATED &lt;= #{item.endDate}
										</if>
									</when>
									<otherwise>
										<if test="item.startDate != null and item.endDate == null">
											O.TRADE_CREATED &lt; #{item.startDate}
										</if>
										<if test="item.startDate == null and item.endDate != null">
											O.TRADE_CREATED &gt; #{item.endDate}
										</if>
										<if test="item.startDate != null and item.endDate != null">
											O.TRADE_CREATED &lt; #{item.startDate}
											OR
											O.TRADE_CREATED &gt; #{item.endDate}
										</if>
									</otherwise>
								</choose>
								)
							</when>
							<otherwise>
								OR (
								<choose>
									<when test="item.includeOrExclude == true">
										<if test="item.startDate != null and item.endDate == null">
											O.TRADE_CREATED &gt;= #{item.startDate}
										</if>
										<if test="item.startDate == null and item.endDate != null">
											O.TRADE_CREATED &lt;= #{item.endDate}
										</if>
										<if test="item.startDate != null and item.endDate != null">
											O.TRADE_CREATED &gt;= #{item.startDate}
											AND
											O.TRADE_CREATED &lt;= #{item.endDate}
										</if>
									</when>
									<otherwise>
										<if test="item.startDate != null and item.endDate == null">
											O.TRADE_CREATED &lt; #{item.startDate}
										</if>
										<if test="item.startDate == null and item.endDate != null">
											O.TRADE_CREATED &gt; #{item.endDate}
										</if>
										<if test="item.startDate != null and item.endDate != null">
											O.TRADE_CREATED &lt; #{item.startDate}
											OR
											O.TRADE_CREATED &gt; #{item.endDate}
										</if>
									</otherwise>
								</choose>
								)
							</otherwise>
						</choose>
					</otherwise>
				</choose>
			</foreach>
		</if>
	</sql>

	<!-- 付款时间 -->
	<sql id="orderTable_payDate">
		<if test="payDateList != null">
			AND
			<foreach collection="payDateList" item="item" index="index"
				open="(" close=")">
				<choose>
					<when test="index == 0">
						<if test="payDateList.size > 1">
							(
						</if>
						<choose>
							<when test="item.includeOrExclude == true">
								<if test="item.startDate != null and item.endDate == null">
									O.TRADE_PAY_TIME &gt;= #{item.startDate}
								</if>
								<if test="item.startDate == null and item.endDate != null">
									O.TRADE_PAY_TIME &lt;= #{item.endDate}
								</if>
								<if test="item.startDate != null and item.endDate != null">
									O.TRADE_PAY_TIME &gt;= #{item.startDate}
									AND
									O.TRADE_PAY_TIME &lt;= #{item.endDate}
								</if>
							</when>
							<otherwise>
								<if test="item.startDate != null and item.endDate == null">
									O.TRADE_PAY_TIME &lt; #{item.startDate}
								</if>
								<if test="item.startDate == null and item.endDate != null">
									O.TRADE_PAY_TIME &gt; #{item.endDate}
								</if>
								<if test="item.startDate != null and item.endDate != null">
									O.TRADE_PAY_TIME &lt; #{item.startDate}
									OR
									O.TRADE_PAY_TIME &gt; #{item.endDate}
								</if>
							</otherwise>
						</choose>
						<if test="payDateList.size > 1">
							)
						</if>
					</when>
					<otherwise>
						<choose>
							<when test="item.andOrOr == true">
								AND (
								<choose>
									<when test="item.includeOrExclude == true">
										<if test="item.startDate != null and item.endDate == null">
											O.TRADE_PAY_TIME &gt;= #{item.startDate}
										</if>
										<if test="item.startDate == null and item.endDate != null">
											O.TRADE_PAY_TIME &lt;= #{item.endDate}
										</if>
										<if test="item.startDate != null and item.endDate != null">
											O.TRADE_PAY_TIME &gt;= #{item.startDate}
											AND
											O.TRADE_PAY_TIME &lt;= #{item.endDate}
										</if>
									</when>
									<otherwise>
										<if test="item.startDate != null and item.endDate == null">
											O.TRADE_PAY_TIME &lt; #{item.startDate}
										</if>
										<if test="item.startDate == null and item.endDate != null">
											O.TRADE_PAY_TIME &gt; #{item.endDate}
										</if>
										<if test="item.startDate != null and item.endDate != null">
											O.TRADE_PAY_TIME &lt; #{item.startDate}
											OR
											O.TRADE_PAY_TIME &gt; #{item.endDate}
										</if>
									</otherwise>
								</choose>
								)
							</when>
							<otherwise>
								OR (
								<choose>
									<when test="item.includeOrExclude == true">
										<if test="item.startDate != null and item.endDate == null">
											O.TRADE_PAY_TIME &gt;= #{item.startDate}
										</if>
										<if test="item.startDate == null and item.endDate != null">
											O.TRADE_PAY_TIME &lt;= #{item.endDate}
										</if>
										<if test="item.startDate != null and item.endDate != null">
											O.TRADE_PAY_TIME &gt;= #{item.startDate}
											AND
											O.TRADE_PAY_TIME &lt;= #{item.endDate}
										</if>
									</when>
									<otherwise>
										<if test="item.startDate != null and item.endDate == null">
											O.TRADE_PAY_TIME &lt; #{item.startDate}
										</if>
										<if test="item.startDate == null and item.endDate != null">
											O.TRADE_PAY_TIME &gt; #{item.endDate}
										</if>
										<if test="item.startDate != null and item.endDate != null">
											O.TRADE_PAY_TIME &lt; #{item.startDate}
											OR
											O.TRADE_PAY_TIME &gt; #{item.endDate}
										</if>
									</otherwise>
								</choose>
								)
							</otherwise>
						</choose>
					</otherwise>
				</choose>
			</foreach>
		</if>
	</sql>

	<!-- 拍下时段 -->
	<sql id="orderTable_bookTime">
		<if test="bookTimeList != null">
			AND
			<foreach collection="bookTimeList" item="item" index="index"
				open="(" close=")">
				<choose>
					<when test="index == 0">
						<if test="bookTimeList.size > 1">
							(
						</if>
						<choose>
							<when test="item.includeOrExclude == true">
								<if test="item.startTime != null and item.endTime == null">
									O.TRADE_CREATED_TIME &gt;= #{item.startTime}
								</if>
								<if test="item.startTime == null and item.endTime != null">
									O.TRADE_CREATED_TIME &lt;= #{item.endTime}
								</if>
								<if test="item.startTime != null and item.endTime != null">
									<choose>
										<when test="item.compareResultBetweenStartAndEnd == -1">
											O.TRADE_CREATED_TIME &gt;= #{item.startTime}
											AND
											O.TRADE_CREATED_TIME &lt;= #{item.endTime}
										</when>
										<when test="item.compareResultBetweenStartAndEnd == 0">
											O.TRADE_CREATED_TIME = #{item.startTime}
										</when>
										<otherwise>
											(
											O.TRADE_CREATED_TIME &gt;= #{item.startTime}
											OR
											O.TRADE_CREATED_TIME &lt;=
											#{item.endTime}
											)
										</otherwise>
									</choose>
								</if>
							</when>
							<otherwise>
								<if test="item.startTime != null and item.endTime == null">
									O.TRADE_CREATED_TIME &lt; #{item.startTime}
								</if>
								<if test="item.startTime == null and item.endTime != null">
									O.TRADE_CREATED_TIME &gt; #{item.endTime}
								</if>
								<if test="item.startTime != null and item.endTime != null">
									<choose>
										<when test="item.compareResultBetweenStartAndEnd == -1">
											(
											O.TRADE_CREATED_TIME &lt; #{item.startTime}
											OR
											O.TRADE_CREATED_TIME &gt; #{item.endTime}
											)
										</when>
										<when test="item.compareResultBetweenStartAndEnd == 0">
											O.TRADE_CREATED_TIME != #{item.startTime}
										</when>
										<otherwise>
											O.TRADE_CREATED_TIME &lt; #{item.endTime}
											AND
											O.TRADE_CREATED_TIME &gt; #{item.startTime}
										</otherwise>
									</choose>
								</if>
							</otherwise>
						</choose>
						<if test="bookTimeList.size > 1">
							)
						</if>
					</when>
					<otherwise>
						<choose>
							<when test="item.andOrOr == true">
								AND (
								<choose>
									<when test="item.includeOrExclude == true">
										<if test="item.startTime != null and item.endTime == null">
											O.TRADE_CREATED_TIME &gt;= #{item.startTime}
										</if>
										<if test="item.startTime == null and item.endTime != null">
											O.TRADE_CREATED_TIME &lt;= #{item.endTime}
										</if>
										<if test="item.startTime != null and item.endTime != null">
											<choose>
												<when test="item.compareResultBetweenStartAndEnd == -1">
													O.TRADE_CREATED_TIME &gt;= #{item.startTime}
													AND
													O.TRADE_CREATED_TIME &lt;= #{item.endTime}
												</when>
												<when test="item.compareResultBetweenStartAndEnd == 0">
													O.TRADE_CREATED_TIME = #{item.startTime}
												</when>
												<otherwise>
													(
													O.TRADE_CREATED_TIME &gt;= #{item.startTime}
													OR
													O.TRADE_CREATED_TIME &lt;= #{item.endTime}
													)
												</otherwise>
											</choose>
										</if>
									</when>
									<otherwise>
										<if test="item.startTime != null and item.endTime == null">
											O.TRADE_CREATED_TIME &lt; #{item.startTime}
										</if>
										<if test="item.startTime == null and item.endTime != null">
											O.TRADE_CREATED_TIME &gt; #{item.endTime}
										</if>
										<if test="item.startTime != null and item.endTime != null">
											<choose>
												<when test="item.compareResultBetweenStartAndEnd == -1">
													(
													O.TRADE_CREATED_TIME &lt; #{item.startTime}
													OR
													O.TRADE_CREATED_TIME &gt; #{item.endTime}
													)
												</when>
												<when test="item.compareResultBetweenStartAndEnd == 0">
													O.TRADE_CREATED_TIME != #{item.startTime}
												</when>
												<otherwise>
													O.TRADE_CREATED_TIME &lt; #{item.endTime}
													AND
													O.TRADE_CREATED_TIME &gt; #{item.startTime}
												</otherwise>
											</choose>
										</if>
									</otherwise>
								</choose>
								)
							</when>
							<otherwise>
								OR (
								<choose>
									<when test="item.includeOrExclude == true">
										<if test="item.startTime != null and item.endTime == null">
											O.TRADE_CREATED_TIME &gt;= #{item.startTime}
										</if>
										<if test="item.startTime == null and item.endTime != null">
											O.TRADE_CREATED_TIME &lt;= #{item.endTime}
										</if>
										<if test="item.startTime != null and item.endTime != null">
											<choose>
												<when test="item.compareResultBetweenStartAndEnd == -1">
													O.TRADE_CREATED_TIME &gt;= #{item.startTime}
													AND
													O.TRADE_CREATED_TIME &lt;= #{item.endTime}
												</when>
												<when test="item.compareResultBetweenStartAndEnd == 0">
													O.TRADE_CREATED_TIME = #{item.startTime}
												</when>
												<otherwise>
													(
													O.TRADE_CREATED_TIME &gt;= #{item.startTime}
													OR
													O.TRADE_CREATED_TIME &lt;= #{item.endTime}
													)
												</otherwise>
											</choose>
										</if>
									</when>
									<otherwise>
										<if test="item.startTime != null and item.endTime == null">
											O.TRADE_CREATED_TIME &lt; #{item.startTime}
										</if>
										<if test="item.startTime == null and item.endTime != null">
											O.TRADE_CREATED_TIME &gt; #{item.endTime}
										</if>
										<if test="item.startTime != null and item.endTime != null">
											<choose>
												<when test="item.compareResultBetweenStartAndEnd == -1">
													(
													O.TRADE_CREATED_TIME &lt; #{item.startTime}
													OR
													O.TRADE_CREATED_TIME &gt; #{item.endTime}
													)
												</when>
												<when test="item.compareResultBetweenStartAndEnd == 0">
													O.TRADE_CREATED_TIME != #{item.startTime}
												</when>
												<otherwise>
													O.TRADE_CREATED_TIME &lt; #{item.endTime}
													AND
													O.TRADE_CREATED_TIME &gt; #{item.startTime}
												</otherwise>
											</choose>
										</if>
									</otherwise>
								</choose>
								)
							</otherwise>
						</choose>
					</otherwise>
				</choose>
			</foreach>
		</if>
	</sql>

	<!-- 付款时段 -->
	<sql id="orderTable_payTime">
		<if test="payTimeList != null">
			AND
			<foreach collection="payTimeList" item="item" index="index"
				open="(" close=")">
				<choose>
					<when test="index == 0">
						<if test="payTimeList.size > 1">
							(
						</if>
						<choose>
							<when test="item.includeOrExclude == true">
								<if test="item.startTime != null and item.endTime == null">
									O.TRADE_PAY_TIME_HMS &gt;= #{item.startTime}
								</if>
								<if test="item.startTime == null  and item.endTime != null">
									O.TRADE_PAY_TIME_HMS &lt;= #{item.endTime}
								</if>
								<if test="item.startTime != null and item.endTime != null">
									<choose>
										<when test="item.compareResultBetweenStartAndEnd == -1">
											O.TRADE_PAY_TIME_HMS &gt;= #{item.startTime}
											AND
											O.TRADE_PAY_TIME_HMS &lt;= #{item.endTime}
										</when>
										<when test="item.compareResultBetweenStartAndEnd == 0">
											O.TRADE_PAY_TIME_HMS = #{item.startTime}
										</when>
										<otherwise>
											(
											O.TRADE_PAY_TIME_HMS &gt;= #{item.startTime}
											OR
											O.TRADE_PAY_TIME_HMS &lt;=
											#{item.endTime}
											)
										</otherwise>
									</choose>
								</if>
							</when>
							<otherwise>
								<if test="item.startTime != null and item.endTime == null">
									O.TRADE_PAY_TIME_HMS &lt; #{item.startTime}
								</if>
								<if test="item.startTime == null  and item.endTime != null">
									O.TRADE_PAY_TIME_HMS &gt; #{item.endTime}
								</if>
								<if test="item.startTime != null and item.endTime != null">
									<choose>
										<when test="item.compareResultBetweenStartAndEnd == -1">
											(
											O.TRADE_PAY_TIME_HMS &lt; #{item.startTime}
											OR
											O.TRADE_PAY_TIME_HMS &gt; #{item.endTime}
											)
										</when>
										<when test="item.compareResultBetweenStartAndEnd == 0">
											O.TRADE_PAY_TIME_HMS != #{item.startTime}
										</when>
										<otherwise>
											O.TRADE_PAY_TIME_HMS &lt; #{item.endTime}
											AND
											O.TRADE_PAY_TIME_HMS &gt; #{item.startTime}
										</otherwise>
									</choose>
								</if>
							</otherwise>
						</choose>
						<if test="payTimeList.size > 1">
							)
						</if>
					</when>
					<otherwise>
						<choose>
							<when test="item.andOrOr == true">
								AND (
								<choose>
									<when test="item.includeOrExclude == true">
										<if test="item.startTime != null and item.endTime == null">
											O.TRADE_PAY_TIME_HMS &gt;= #{item.startTime}
										</if>
										<if test="item.startTime == null  and item.endTime != null">
											O.TRADE_PAY_TIME_HMS &lt;= #{item.endTime}
										</if>
										<if test="item.startTime != null and item.endTime != null">
											<choose>
												<when test="item.compareResultBetweenStartAndEnd == -1">
													O.TRADE_PAY_TIME_HMS &gt;= #{item.startTime}
													AND
													O.TRADE_PAY_TIME_HMS &lt;= #{item.endTime}
												</when>
												<when test="item.compareResultBetweenStartAndEnd == 0">
													O.TRADE_PAY_TIME_HMS = #{item.startTime}
												</when>
												<otherwise>
													(
													O.TRADE_PAY_TIME_HMS &gt;= #{item.startTime}
													OR
													O.TRADE_PAY_TIME_HMS &lt;=
													#{item.endTime}
													)
												</otherwise>
											</choose>
										</if>
									</when>
									<otherwise>
										<if test="item.startTime != null and item.endTime == null">
											O.TRADE_PAY_TIME_HMS &lt; #{item.startTime}
										</if>
										<if test="item.startTime == null  and item.endTime != null">
											O.TRADE_PAY_TIME_HMS &gt; #{item.endTime}
										</if>
										<if test="item.startTime != null and item.endTime != null">
											<choose>
												<when test="item.compareResultBetweenStartAndEnd == -1">
													(
													O.TRADE_PAY_TIME_HMS &lt; #{item.startTime}
													OR
													O.TRADE_PAY_TIME_HMS &gt; #{item.endTime}
													)
												</when>
												<when test="item.compareResultBetweenStartAndEnd == 0">
													O.TRADE_PAY_TIME_HMS != #{item.startTime}
												</when>
												<otherwise>
													O.TRADE_PAY_TIME_HMS &lt; #{item.endTime}
													AND
													O.TRADE_PAY_TIME_HMS &gt; #{item.startTime}
												</otherwise>
											</choose>
										</if>
									</otherwise>
								</choose>
								)
							</when>
							<otherwise>
								OR (
								<choose>
									<when test="item.includeOrExclude == true">
										<if test="item.startTime != null and item.endTime == null">
											O.TRADE_PAY_TIME_HMS &gt;= #{item.startTime}
										</if>
										<if test="item.startTime == null  and item.endTime != null">
											O.TRADE_PAY_TIME_HMS &lt;= #{item.endTime}
										</if>
										<if test="item.startTime != null and item.endTime != null">
											<choose>
												<when test="item.compareResultBetweenStartAndEnd == -1">
													O.TRADE_PAY_TIME_HMS &gt;= #{item.startTime}
													AND
													O.TRADE_PAY_TIME_HMS &lt;= #{item.endTime}
												</when>
												<when test="item.compareResultBetweenStartAndEnd == 0">
													O.TRADE_PAY_TIME_HMS = #{item.startTime}
												</when>
												<otherwise>
													(
													O.TRADE_PAY_TIME_HMS &gt;= #{item.startTime}
													OR
													O.TRADE_PAY_TIME_HMS &lt;=
													#{item.endTime}
													)
												</otherwise>
											</choose>
										</if>
									</when>
									<otherwise>
										<if test="item.startTime != null and item.endTime == null">
											O.TRADE_PAY_TIME_HMS &lt; #{item.startTime}
										</if>
										<if test="item.startTime == null  and item.endTime != null">
											O.TRADE_PAY_TIME_HMS &gt; #{item.endTime}
										</if>
										<if test="item.startTime != null and item.endTime != null">
											<choose>
												<when test="item.compareResultBetweenStartAndEnd == -1">
													(
													O.TRADE_PAY_TIME_HMS &lt; #{item.startTime}
													OR
													O.TRADE_PAY_TIME_HMS &gt; #{item.endTime}
													)
												</when>
												<when test="item.compareResultBetweenStartAndEnd == 0">
													O.TRADE_PAY_TIME_HMS != #{item.startTime}
												</when>
												<otherwise>
													O.TRADE_PAY_TIME_HMS &lt; #{item.endTime}
													AND
													O.TRADE_PAY_TIME_HMS &gt; #{item.startTime}
												</otherwise>
											</choose>
										</if>
									</otherwise>
								</choose>
								)
							</otherwise>
						</choose>
					</otherwise>
				</choose>
			</foreach>
		</if>
	</sql>

	<!-- 购买次数 -->
	<sql id="memberTable_buyGoodsTime">
		<if test="buyGoodsTimeList != null">
			AND
			<foreach collection="buyGoodsTimeList" item="item" index="index"
				open="(" close=")">
				<choose>
					<when test="index == 0">
						<if test="buyGoodsTimeList.size > 1">
							(
						</if>
						<choose>
							<when test="item.includeOrExclude == true">
								<choose>
									<when
										test="item.minBuyGoodsTime != null and item.maxBuyGoodsTime == null">
										M.BUY_NUMBER &gt;= #{item.minBuyGoodsTime}
									</when>
									<when
										test="item.minBuyGoodsTime == null and item.maxBuyGoodsTime != null">
										M.BUY_NUMBER &lt;= #{item.maxBuyGoodsTime}
									</when>
									<otherwise>
										M.BUY_NUMBER &gt;= #{item.minBuyGoodsTime}
										AND
										M.BUY_NUMBER &lt;= #{item.maxBuyGoodsTime}
									</otherwise>
								</choose>
							</when>
							<otherwise>
								<choose>
									<when
										test="item.minBuyGoodsTime != null and item.maxBuyGoodsTime == null">
										M.BUY_NUMBER &lt; #{item.minBuyGoodsTime}
									</when>
									<when
										test="item.minBuyGoodsTime == null and item.maxBuyGoodsTime != null">
										M.BUY_NUMBER &gt; #{item.maxBuyGoodsTime}
									</when>
									<otherwise>
										M.BUY_NUMBER &lt; #{item.minBuyGoodsTime}
										OR
										M.BUY_NUMBER &gt; #{item.maxBuyGoodsTime}
									</otherwise>
								</choose>
							</otherwise>
						</choose>
						<if test="buyGoodsTimeList.size > 1">
							)
						</if>
					</when>
					<otherwise>
						<choose>
							<when test="item.andOrOr == true">
								AND (
								<choose>
									<when test="item.includeOrExclude == true">
										<choose>
											<when
												test="item.minBuyGoodsTime != null and item.maxBuyGoodsTime == null">
												M.BUY_NUMBER &gt;= #{item.minBuyGoodsTime}
											</when>
											<when
												test="item.minBuyGoodsTime == null and item.maxBuyGoodsTime != null">
												M.BUY_NUMBER &lt;= #{item.maxBuyGoodsTime}
											</when>
											<otherwise>
												M.BUY_NUMBER &gt;= #{item.minBuyGoodsTime}
												AND
												M.BUY_NUMBER &lt;= #{item.maxBuyGoodsTime}
											</otherwise>
										</choose>
									</when>
									<otherwise>
										<choose>
											<when
												test="item.minBuyGoodsTime != null and item.maxBuyGoodsTime == null">
												M.BUY_NUMBER &lt; #{item.minBuyGoodsTime}
											</when>
											<when
												test="item.minBuyGoodsTime == null and item.maxBuyGoodsTime != null">
												M.BUY_NUMBER &gt; #{item.maxBuyGoodsTime}
											</when>
											<otherwise>
												M.BUY_NUMBER &lt; #{item.minBuyGoodsTime}
												OR
												M.BUY_NUMBER &gt; #{item.maxBuyGoodsTime}
											</otherwise>
										</choose>
									</otherwise>
								</choose>
								)
							</when>
							<otherwise>
								OR (
								<choose>
									<when test="item.includeOrExclude == true">
										<choose>
											<when
												test="item.minBuyGoodsTime != null and item.maxBuyGoodsTime == null">
												M.BUY_NUMBER &gt;= #{item.minBuyGoodsTime}
											</when>
											<when
												test="item.minBuyGoodsTime == null and item.maxBuyGoodsTime != null">
												M.BUY_NUMBER &lt;= #{item.maxBuyGoodsTime}
											</when>
											<otherwise>
												M.BUY_NUMBER &gt;= #{item.minBuyGoodsTime}
												AND
												M.BUY_NUMBER &lt;= #{item.maxBuyGoodsTime}
											</otherwise>
										</choose>
									</when>
									<otherwise>
										<choose>
											<when
												test="item.minBuyGoodsTime != null and item.maxBuyGoodsTime == null">
												M.BUY_NUMBER &lt; #{item.minBuyGoodsTime}
											</when>
											<when
												test="item.minBuyGoodsTime == null and item.maxBuyGoodsTime != null">
												M.BUY_NUMBER &gt; #{item.maxBuyGoodsTime}
											</when>
											<otherwise>
												M.BUY_NUMBER &lt; #{item.minBuyGoodsTime}
												OR
												M.BUY_NUMBER &gt; #{item.maxBuyGoodsTime}
											</otherwise>
										</choose>
									</otherwise>
								</choose>
								)
							</otherwise>
						</choose>
					</otherwise>
				</choose>
			</foreach>
		</if>
	</sql>

	<!-- 拍下次数 -->
	<sql id="memberTable_bookGoodsTime">
		<if test="bookGoodsTimeList != null">
			AND
			<foreach collection="bookGoodsTimeList" item="item" index="index"
				open="(" close=")">
				<choose>
					<when test="index == 0">
						<if test="bookGoodsTimeList.size  > 1">
							(
						</if>
						<choose>
							<when test="item.includeOrExclude == true">
								<choose>
									<when
										test="item.minBookGoodsTime != null and item.maxBookGoodsTime == null">
										M.ADD_NUMBER &gt;= #{item.minBookGoodsTime}
									</when>
									<when
										test="item.minBookGoodsTime == null and item.maxBookGoodsTime != null">
										M.ADD_NUMBER &lt;= #{item.maxBookGoodsTime}
									</when>
									<otherwise>
										M.ADD_NUMBER &gt;= #{item.minBookGoodsTime}
										AND
										M.ADD_NUMBER &lt;= #{item.maxBookGoodsTime}
									</otherwise>
								</choose>
							</when>
							<otherwise>
								<choose>
									<when
										test="item.minBookGoodsTime != null and item.maxBookGoodsTime == null">
										M.ADD_NUMBER &lt; #{item.minBookGoodsTime}
									</when>
									<when
										test="item.minBookGoodsTime == null and item.maxBookGoodsTime != null">
										M.ADD_NUMBER &gt; #{item.maxBookGoodsTime}
									</when>
									<otherwise>
										M.ADD_NUMBER &lt; #{item.minBookGoodsTime}
										OR
										M.ADD_NUMBER &gt; #{item.maxBookGoodsTime}
									</otherwise>
								</choose>
							</otherwise>
						</choose>
						<if test="bookGoodsTimeList.size  > 1">
							)
						</if>
					</when>
					<otherwise>
						<choose>
							<when test="item.andOrOr == true">
								AND (
								<choose>
									<when test="item.includeOrExclude == true">
										<choose>
											<when
												test="item.minBookGoodsTime != null and item.maxBookGoodsTime == null">
												M.ADD_NUMBER &gt;= #{item.minBookGoodsTime}
											</when>
											<when
												test="item.minBookGoodsTime == null and item.maxBookGoodsTime != null">
												M.ADD_NUMBER &lt;= #{item.maxBookGoodsTime}
											</when>
											<otherwise>
												M.ADD_NUMBER &gt;= #{item.minBookGoodsTime}
												AND
												M.ADD_NUMBER &lt;= #{item.maxBookGoodsTime}
											</otherwise>
										</choose>
									</when>
									<otherwise>
										<choose>
											<when
												test="item.minBookGoodsTime != null and item.maxBookGoodsTime == null">
												M.ADD_NUMBER &lt; #{item.minBookGoodsTime}
											</when>
											<when
												test="item.minBookGoodsTime == null and item.maxBookGoodsTime != null">
												M.ADD_NUMBER &gt; #{item.maxBookGoodsTime}
											</when>
											<otherwise>
												M.ADD_NUMBER &lt; #{item.minBookGoodsTime}
												OR
												M.ADD_NUMBER &gt; #{item.maxBookGoodsTime}
											</otherwise>
										</choose>
									</otherwise>
								</choose>
								)
							</when>
							<otherwise>
								OR (
								<choose>
									<when test="item.includeOrExclude == true">
										<choose>
											<when
												test="item.minBookGoodsTime != null and item.maxBookGoodsTime == null">
												M.ADD_NUMBER &gt;= #{item.minBookGoodsTime}
											</when>
											<when
												test="item.minBookGoodsTime == null and item.maxBookGoodsTime != null">
												M.ADD_NUMBER &lt;= #{item.maxBookGoodsTime}
											</when>
											<otherwise>
												M.ADD_NUMBER &gt;= #{item.minBookGoodsTime}
												AND
												M.ADD_NUMBER &lt;= #{item.maxBookGoodsTime}
											</otherwise>
										</choose>
									</when>
									<otherwise>
										<choose>
											<when
												test="item.minBookGoodsTime != null and item.maxBookGoodsTime == null">
												M.ADD_NUMBER &lt; #{item.minBookGoodsTime}
											</when>
											<when
												test="item.minBookGoodsTime == null and item.maxBookGoodsTime != null">
												M.ADD_NUMBER &gt; #{item.maxBookGoodsTime}
											</when>
											<otherwise>
												M.ADD_NUMBER &lt; #{item.minBookGoodsTime}
												OR
												M.ADD_NUMBER &gt; #{item.maxBookGoodsTime}
											</otherwise>
										</choose>
									</otherwise>
								</choose>
								)
							</otherwise>
						</choose>
					</otherwise>
				</choose>
			</foreach>
		</if>
	</sql>

	<!-- 拍下金额 -->
	<sql id="orderTable_bookPrice">
		<if test="bookPriceList != null">
			AND
			<foreach collection="bookPriceList" item="item" index="index"
				open="(" close=")">
				<choose>
					<when test="index == 0">
						<if test="bookPriceList.size > 1">
							(
						</if>
						<choose>
							<when test="item.includeOrExclude == true">
								<choose>
									<when test="item.minBookPrice != null and item.maxBookPrice == null">
										O.TRADE_TOTAL_FEE &gt;= #{item.minBookPrice}
									</when>
									<when test="item.minBookPrice == null and item.maxBookPrice != null">
										O.TRADE_TOTAL_FEE &lt;= #{item.maxBookPrice}
									</when>
									<otherwise>
										O.TRADE_TOTAL_FEE &gt;= #{item.minBookPrice}
										AND
										O.TRADE_TOTAL_FEE &lt;= #{item.maxBookPrice}
									</otherwise>
								</choose>
							</when>
							<otherwise>
								<choose>
									<when test="item.minBookPrice != null and item.maxBookPrice == null">
										O.TRADE_TOTAL_FEE &lt; #{item.minBookPrice}
									</when>
									<when test="item.minBookPrice == null and item.maxBookPrice != null">
										O.TRADE_TOTAL_FEE &gt; #{item.maxBookPrice}
									</when>
									<otherwise>
										O.TRADE_TOTAL_FEE &lt; #{item.minBookPrice}
										OR
										O.TRADE_TOTAL_FEE &gt; #{item.maxBookPrice}
									</otherwise>
								</choose>
							</otherwise>
						</choose>
						<if test="bookPriceList.size > 1">
							)
						</if>
					</when>
					<otherwise>
						<choose>
							<when test="item.andOrOr == true">
								AND (
								<choose>
									<when test="item.includeOrExclude == true">
										<choose>
											<when
												test="item.minBookPrice != null and item.maxBookPrice == null">
												O.TRADE_TOTAL_FEE &gt;= #{item.minBookPrice}
											</when>
											<when
												test="item.minBookPrice == null and item.maxBookPrice != null">
												O.TRADE_TOTAL_FEE &lt;= #{item.maxBookPrice}
											</when>
											<otherwise>
												O.TRADE_TOTAL_FEE &gt;= #{item.minBookPrice}
												AND
												O.TRADE_TOTAL_FEE &lt;= #{item.maxBookPrice}
											</otherwise>
										</choose>
									</when>
									<otherwise>
										<choose>
											<when
												test="item.minBookPrice != null and item.maxBookPrice == null">
												O.TRADE_TOTAL_FEE &lt; #{item.minBookPrice}
											</when>
											<when
												test="item.minBookPrice == null and item.maxBookPrice != null">
												O.TRADE_TOTAL_FEE &gt; #{item.maxBookPrice}
											</when>
											<otherwise>
												O.TRADE_TOTAL_FEE &lt; #{item.minBookPrice}
												OR
												O.TRADE_TOTAL_FEE &gt; #{item.maxBookPrice}
											</otherwise>
										</choose>
									</otherwise>
								</choose>
								)
							</when>
							<otherwise>
								OR (
								<choose>
									<when test="item.includeOrExclude == true">
										<choose>
											<when
												test="item.minBookPrice != null and item.maxBookPrice == null">
												O.TRADE_TOTAL_FEE &gt;= #{item.minBookPrice}
											</when>
											<when
												test="item.minBookPrice == null and item.maxBookPrice != null">
												O.TRADE_TOTAL_FEE &lt;= #{item.maxBookPrice}
											</when>
											<otherwise>
												O.TRADE_TOTAL_FEE &gt;= #{item.minBookPrice}
												AND
												O.TRADE_TOTAL_FEE &lt;= #{item.maxBookPrice}
											</otherwise>
										</choose>
									</when>
									<otherwise>
										<choose>
											<when
												test="item.minBookPrice != null and item.maxBookPrice == null">
												O.TRADE_TOTAL_FEE &lt; #{item.minBookPrice}
											</when>
											<when
												test="item.minBookPrice == null and item.maxBookPrice != null">
												O.TRADE_TOTAL_FEE &gt; #{item.maxBookPrice}
											</when>
											<otherwise>
												O.TRADE_TOTAL_FEE &lt; #{item.minBookPrice}
												OR
												O.TRADE_TOTAL_FEE &gt; #{item.maxBookPrice}
											</otherwise>
										</choose>
									</otherwise>
								</choose>
								)
							</otherwise>
						</choose>
					</otherwise>
				</choose>
			</foreach>
		</if>
	</sql>

	<!-- 拍下未付款次数 -->
	<sql id="memberTable_bookButNonPaymentTime">
		<if test="bookButNonPaymentTimeList != null">
			AND
			<foreach collection="bookButNonPaymentTimeList" item="item"
				index="index" open="(" close=")">
				<choose>
					<when test="index == 0">
						<if test="bookButNonPaymentTimeList.size > 1">
							(
						</if>
						<choose>
							<when test="item.includeOrExclude == true">
								<choose>
									<when
										test="item.minBookButNonPaymentTime != null and item.maxBookButNonPaymentTime == null">
										M.CLOSE_TRADE_NUM &gt;=
										#{item.minBookButNonPaymentTime}
									</when>
									<when
										test="item.minBookButNonPaymentTime == null and item.maxBookButNonPaymentTime != null">
										M.CLOSE_TRADE_NUM &lt;=
										#{item.maxBookButNonPaymentTime}
									</when>
									<otherwise>
										M.CLOSE_TRADE_NUM &gt;=
										#{item.minBookButNonPaymentTime}
										AND
										M.CLOSE_TRADE_NUM
										&lt;=
										#{item.maxBookButNonPaymentTime}
									</otherwise>
								</choose>
							</when>
							<otherwise>
								<choose>
									<when
										test="item.minBookButNonPaymentTime != null and item.maxBookButNonPaymentTime == null">
										M.CLOSE_TRADE_NUM &lt;
										#{item.minBookButNonPaymentTime}
									</when>
									<when
										test="item.minBookButNonPaymentTime == null and item.maxBookButNonPaymentTime != null">
										M.CLOSE_TRADE_NUM &gt;
										#{item.maxBookButNonPaymentTime}
									</when>
									<otherwise>
										M.CLOSE_TRADE_NUM &lt;
										#{item.minBookButNonPaymentTime}
										OR
										M.CLOSE_TRADE_NUM
										&gt;
										#{item.maxBookButNonPaymentTime}
									</otherwise>
								</choose>
							</otherwise>
						</choose>
						<if test="bookButNonPaymentTimeList.size > 1">
							)
						</if>
					</when>
					<otherwise>
						<choose>
							<when test="item.andOrOr == true">
								AND (
								<choose>
									<when test="item.includeOrExclude == true">
										<choose>
											<when
												test="item.minBookButNonPaymentTime != null and item.maxBookButNonPaymentTime == null">
												M.CLOSE_TRADE_NUM &gt;=
												#{item.minBookButNonPaymentTime}
											</when>
											<when
												test="item.minBookButNonPaymentTime == null and item.maxBookButNonPaymentTime != null">
												M.CLOSE_TRADE_NUM &lt;=
												#{item.maxBookButNonPaymentTime}
											</when>
											<otherwise>
												M.CLOSE_TRADE_NUM &gt;=
												#{item.minBookButNonPaymentTime}
												AND
												M.CLOSE_TRADE_NUM
												&lt;=
												#{item.maxBookButNonPaymentTime}
											</otherwise>
										</choose>
									</when>
									<otherwise>
										<choose>
											<when
												test="item.minBookButNonPaymentTime != null and item.maxBookButNonPaymentTime == null">
												M.CLOSE_TRADE_NUM &lt;
												#{item.minBookButNonPaymentTime}
											</when>
											<when
												test="item.minBookButNonPaymentTime == null and item.maxBookButNonPaymentTime != null">
												M.CLOSE_TRADE_NUM &gt;
												#{item.maxBookButNonPaymentTime}
											</when>
											<otherwise>
												M.CLOSE_TRADE_NUM &lt;
												#{item.minBookButNonPaymentTime}
												OR
												M.CLOSE_TRADE_NUM
												&gt;
												#{item.maxBookButNonPaymentTime}
											</otherwise>
										</choose>
									</otherwise>
								</choose>
								)
							</when>
							<otherwise>
								OR (
								<choose>
									<when test="item.includeOrExclude == true">
										<choose>
											<when
												test="item.minBookButNonPaymentTime != null and item.maxBookButNonPaymentTime == null">
												M.CLOSE_TRADE_NUM &gt;=
												#{item.minBookButNonPaymentTime}
											</when>
											<when
												test="item.minBookButNonPaymentTime == null and item.maxBookButNonPaymentTime != null">
												M.CLOSE_TRADE_NUM &lt;=
												#{item.maxBookButNonPaymentTime}
											</when>
											<otherwise>
												M.CLOSE_TRADE_NUM &gt;=
												#{item.minBookButNonPaymentTime}
												AND
												M.CLOSE_TRADE_NUM
												&lt;=
												#{item.maxBookButNonPaymentTime}
											</otherwise>
										</choose>
									</when>
									<otherwise>
										<choose>
											<when
												test="item.minBookButNonPaymentTime != null and item.maxBookButNonPaymentTime == null">
												M.CLOSE_TRADE_NUM &lt;
												#{item.minBookButNonPaymentTime}
											</when>
											<when
												test="item.minBookButNonPaymentTime == null and item.maxBookButNonPaymentTime != null">
												M.CLOSE_TRADE_NUM &gt;
												#{item.maxBookButNonPaymentTime}
											</when>
											<otherwise>
												M.CLOSE_TRADE_NUM &lt;
												#{item.minBookButNonPaymentTime}
												OR
												M.CLOSE_TRADE_NUM
												&gt;
												#{item.maxBookButNonPaymentTime}
											</otherwise>
										</choose>
									</otherwise>
								</choose>
								)
							</otherwise>
						</choose>
					</otherwise>
				</choose>
			</foreach>
		</if>
	</sql>

	<!-- 付款金额 -->
	<sql id="orderTable_payPrice">
		<if test="payPriceList != null">
			AND
			<foreach collection="payPriceList" item="item" index="index"
				open="(" close=")">
				<choose>
					<when test="index == 0">
						<if test="payPriceList.size > 1">
							(
						</if>
						<choose>
							<when test="item.includeOrExclude == true">
								<choose>
									<when test="item.minPayPrice != null and item.maxPayPrice == null">
										O.TRADE_PAYMENT &gt;= #{item.minPayPrice}
									</when>
									<when test="item.minPayPrice == null and item.maxPayPrice != null">
										O.TRADE_PAYMENT &lt;= #{item.maxPayPrice}
									</when>
									<otherwise>
										O.TRADE_PAYMENT &gt;= #{item.minPayPrice}
										AND
										O.TRADE_PAYMENT
										&lt;= #{item.maxPayPrice}
									</otherwise>
								</choose>
							</when>
							<otherwise>
								<choose>
									<when test="item.minPayPrice != null and item.maxPayPrice == null">
										O.TRADE_PAYMENT &lt; #{item.minPayPrice}
									</when>
									<when test="item.minPayPrice == null and item.maxPayPrice != null">
										O.TRADE_PAYMENT &gt; #{item.maxPayPrice}
									</when>
									<otherwise>
										O.TRADE_PAYMENT &lt; #{item.minPayPrice}
										OR
										O.TRADE_PAYMENT
										&gt;
										#{item.maxPayPrice}
									</otherwise>
								</choose>
							</otherwise>
						</choose>
						<if test="payPriceList.size > 1">
							)
						</if>
					</when>
					<otherwise>
						<choose>
							<when test="item.andOrOr == true">
								AND (
								<choose>
									<when test="item.includeOrExclude == true">
										<choose>
											<when test="item.minPayPrice != null and item.maxPayPrice == null">
												O.TRADE_PAYMENT &gt;= #{item.minPayPrice}
											</when>
											<when test="item.minPayPrice == null and item.maxPayPrice != null">
												O.TRADE_PAYMENT &lt;= #{item.maxPayPrice}
											</when>
											<otherwise>
												O.TRADE_PAYMENT &gt;= #{item.minPayPrice}
												AND
												O.TRADE_PAYMENT
												&lt;= #{item.maxPayPrice}
											</otherwise>
										</choose>
									</when>
									<otherwise>
										<choose>
											<when test="item.minPayPrice != null and item.maxPayPrice == null">
												O.TRADE_PAYMENT &lt; #{item.minPayPrice}
											</when>
											<when test="item.minPayPrice == null and item.maxPayPrice != null">
												O.TRADE_PAYMENT &gt; #{item.maxPayPrice}
											</when>
											<otherwise>
												O.TRADE_PAYMENT &lt; #{item.minPayPrice}
												OR
												O.TRADE_PAYMENT
												&gt;
												#{item.maxPayPrice}
											</otherwise>
										</choose>
									</otherwise>
								</choose>
								)
							</when>
							<otherwise>
								OR (
								<choose>
									<when test="item.includeOrExclude == true">
										<choose>
											<when test="item.minPayPrice != null and item.maxPayPrice == null">
												O.TRADE_PAYMENT &gt;= #{item.minPayPrice}
											</when>
											<when test="item.minPayPrice == null and item.maxPayPrice != null">
												O.TRADE_PAYMENT &lt;= #{item.maxPayPrice}
											</when>
											<otherwise>
												O.TRADE_PAYMENT &gt;= #{item.minPayPrice}
												AND
												O.TRADE_PAYMENT
												&lt;= #{item.maxPayPrice}
											</otherwise>
										</choose>
									</when>
									<otherwise>
										<choose>
											<when test="item.minPayPrice != null and item.maxPayPrice == null">
												O.TRADE_PAYMENT &lt; #{item.minPayPrice}
											</when>
											<when test="item.minPayPrice == null and item.maxPayPrice != null">
												O.TRADE_PAYMENT &gt; #{item.maxPayPrice}
											</when>
											<otherwise>
												O.TRADE_PAYMENT &lt; #{item.minPayPrice}
												OR
												O.TRADE_PAYMENT
												&gt;
												#{item.maxPayPrice}
											</otherwise>
										</choose>
									</otherwise>
								</choose>
								)
							</otherwise>
						</choose>
					</otherwise>
				</choose>
			</foreach>
		</if>
	</sql>

	<!-- 星期几付款 -->
	<sql id="orderTable_payInDayOfWeek">
		<if test="payInDayOfWeekList != null">
			AND
			<foreach collection="payInDayOfWeekList" item="item" index="index"
				open="(" close=")">
				<choose>
					<when test="index == 0">
						<if test="payInDayOfWeekList.size > 1">
							(
						</if>
						<choose>
							<when test="item.includeOrExclude == true">
								O.WEEK IN
								<trim prefix="(" suffix=")" suffixOverrides=",">
									<if test="item.monday == true">
										'2',
									</if>
									<if test="item.tuesday == true">
										'3',
									</if>
									<if test="item.wednesday == true">
										'4',
									</if>
									<if test="item.thursday == true">
										'5',
									</if>
									<if test="item.friday == true">
										'6',
									</if>
									<if test="item.saturday == true">
										'7',
									</if>
									<if test="item.sunday == true">
										'1',
									</if>
								</trim>
							</when>
							<otherwise>
								O.WEEK NOT IN
								<trim prefix="(" suffix=")" suffixOverrides=",">
									<if test="item.monday == true">
										'2',
									</if>
									<if test="item.tuesday == true">
										'3',
									</if>
									<if test="item.wednesday == true">
										'4',
									</if>
									<if test="item.thursday == true">
										'5',
									</if>
									<if test="item.friday == true">
										'6',
									</if>
									<if test="item.saturday == true">
										'7',
									</if>
									<if test="item.sunday == true">
										'1',
									</if>
								</trim>
								AND
								O.WEEK IS NOT NULL
							</otherwise>
						</choose>
						<if test="payInDayOfWeekList.size > 1">
							)
						</if>
					</when>
					<otherwise>
						<choose>
							<when test="item.andOrOr == true">
								AND (
								<choose>
									<when test="item.includeOrExclude == true">
										O.WEEK IN
										<trim prefix="(" suffix=")" suffixOverrides=",">
											<if test="item.monday == true">
												'2',
											</if>
											<if test="item.tuesday == true">
												'3',
											</if>
											<if test="item.wednesday == true">
												'4',
											</if>
											<if test="item.thursday == true">
												'5',
											</if>
											<if test="item.friday == true">
												'6',
											</if>
											<if test="item.saturday == true">
												'7',
											</if>
											<if test="item.sunday == true">
												'1',
											</if>
										</trim>
									</when>
									<otherwise>
										O.WEEK NOT IN
										<trim prefix="(" suffix=")" suffixOverrides=",">
											<if test="item.monday == true">
												'2',
											</if>
											<if test="item.tuesday == true">
												'3',
											</if>
											<if test="item.wednesday == true">
												'4',
											</if>
											<if test="item.thursday == true">
												'5',
											</if>
											<if test="item.friday == true">
												'6',
											</if>
											<if test="item.saturday == true">
												'7',
											</if>
											<if test="item.sunday == true">
												'1',
											</if>
										</trim>
										AND
										O.WEEK IS NOT NULL
									</otherwise>
								</choose>
								)
							</when>
							<otherwise>
								OR (
								<choose>
									<when test="item.includeOrExclude == true">
										O.WEEK IN
										<trim prefix="(" suffix=")" suffixOverrides=",">
											<if test="item.monday == true">
												'2',
											</if>
											<if test="item.tuesday == true">
												'3',
											</if>
											<if test="item.wednesday == true">
												'4',
											</if>
											<if test="item.thursday == true">
												'5',
											</if>
											<if test="item.friday == true">
												'6',
											</if>
											<if test="item.saturday == true">
												'7',
											</if>
											<if test="item.sunday == true">
												'1',
											</if>
										</trim>
									</when>
									<otherwise>
										O.WEEK NOT IN
										<trim prefix="(" suffix=")" suffixOverrides=",">
											<if test="item.monday == true">
												'2',
											</if>
											<if test="item.tuesday == true">
												'3',
											</if>
											<if test="item.wednesday == true">
												'4',
											</if>
											<if test="item.thursday == true">
												'5',
											</if>
											<if test="item.friday == true">
												'6',
											</if>
											<if test="item.saturday == true">
												'7',
											</if>
											<if test="item.sunday == true">
												'1',
											</if>
										</trim>
										AND
										O.WEEK IS NOT NULL
									</otherwise>
								</choose>
								)
							</otherwise>
						</choose>
					</otherwise>
				</choose>
			</foreach>
		</if>
	</sql>

	<!-- 手机号运营商 -->
	<sql id="memberTable_mobileManufacturer">
		<if test="mobileManufacturerList != null">
			AND
			<foreach collection="mobileManufacturerList" item="item"
				index="index" open="(" close=")">
				<choose>
					<when test="index == 0">
						<if test="mobileManufacturerList.size > 1">
							(
						</if>
						<choose>
							<when test="item.includeOrExclude == true">
								M.OPERATOR IN
								<trim prefix="(" suffix=")" suffixOverrides=",">
									<if test="item.cmcc == true">
										'移动',
									</if>
									<if test="item.cu == true">
										'联通',
									</if>
									<if test="item.cdma == true">
										'电信',
									</if>
									'其他'
								</trim>
							</when>
							<otherwise>
								M.OPERATOR NOT IN
								<trim prefix="(" suffix=")" suffixOverrides=",">
									<if test="item.cmcc == true">
										'移动',
									</if>
									<if test="item.cu == true">
										'联通',
									</if>
									<if test="item.cdma == true">
										'电信',
									</if>
									'其他'
								</trim>
								AND
								M.OPERATOR IS NOT NULL
							</otherwise>
						</choose>
						<if test="mobileManufacturerList.size > 1">
							)
						</if>
					</when>
					<otherwise>
						<choose>
							<when test="item.andOrOr == true">
								AND (
								<choose>
									<when test="item.includeOrExclude == true">
										M.OPERATOR IN
										<trim prefix="(" suffix=")" suffixOverrides=",">
											<if test="item.cmcc == true">
												'移动',
											</if>
											<if test="item.cu == true">
												'联通',
											</if>
											<if test="item.cdma == true">
												'电信',
											</if>
											'其他'
										</trim>
									</when>
									<otherwise>
										M.OPERATOR NOT IN
										<trim prefix="(" suffix=")" suffixOverrides=",">
											<if test="item.cmcc == true">
												'移动',
											</if>
											<if test="item.cu == true">
												'联通',
											</if>
											<if test="item.cdma == true">
												'电信',
											</if>
											'其他'
										</trim>
										AND
										M.OPERATOR IS NOT NULL
									</otherwise>
								</choose>
								)
							</when>
							<otherwise>
								OR (
								<choose>
									<when test="item.includeOrExclude == true">
										M.OPERATOR IN
										<trim prefix="(" suffix=")" suffixOverrides=",">
											<if test="item.cmcc == true">
												'移动',
											</if>
											<if test="item.cu == true">
												'联通',
											</if>
											<if test="item.cdma == true">
												'电信',
											</if>
											'其他'
										</trim>
									</when>
									<otherwise>
										M.OPERATOR NOT IN
										<trim prefix="(" suffix=")" suffixOverrides=",">
											<if test="item.cmcc == true">
												'移动',
											</if>
											<if test="item.cu == true">
												'联通',
											</if>
											<if test="item.cdma == true">
												'电信',
											</if>
											'其他'
										</trim>
										AND
										M.OPERATOR IS NOT NULL
									</otherwise>
								</choose>
								)
							</otherwise>
						</choose>
					</otherwise>
				</choose>
			</foreach>
		</if>
	</sql>

	<!-- 手机号归属地 -->
	<sql id="memberTable_mobileLocation">
		<if test="mobileLocationList != null">
			AND
			<foreach collection="mobileLocationList" item="item" index="index"
				open="(" close=")">
				<choose>
					<when test="index == 0">
						<if test="mobileLocationList.size > 1">
							(
						</if>
						<choose>
							<when test="item.includeOrExclude == true">
								<choose>
									<when test="item.province != null and item.city == null">
										M.PROVINCE IN
										<foreach collection="item.province" item="province"
											open="(" close=")" separator=",">
											#{province}
										</foreach>
									</when>
									<when test="item.province == null and item.city != null">
										M.CITY IN
										<foreach collection="item.city" item="city" open="("
											close=")" separator=",">
											#{city}
										</foreach>
									</when>
									<otherwise>
										M.PROVINCE IN
										<foreach collection="item.province" item="province"
											open="(" close=")" separator=",">
											#{province}
										</foreach>
										AND
										M.CITY IN
										<foreach collection="item.city" item="city" open="("
											close=")" separator=",">
											#{city}
										</foreach>
									</otherwise>
								</choose>
							</when>
							<otherwise>
								<choose>
									<when test="item.province != null and item.city == null">
										(M.PROVINCE NOT IN
										<foreach collection="item.province" item="province"
											open="(" close=")" separator=",">
											#{province}
										</foreach>
										AND
										M.PROVINCE IS NOT NULL)
									</when>
									<when test="item.province == null and item.city != null">
										(M.CITY NOT IN
										<foreach collection="item.city" item="city" open="("
											close=")" separator=",">
											#{city}
										</foreach>
										AND
										M.CITY IS NOT NULL)
									</when>
									<otherwise>
										(M.PROVINCE NOT IN
										<foreach collection="item.province" item="province"
											open="(" close=")" separator=",">
											#{province}
										</foreach>
										AND
										M.PROVINCE IS NOT NULL)
										OR
										(M.CITY NOT IN
										<foreach collection="item.city" item="city" open="("
											close=")" separator=",">
											#{city}
										</foreach>
										AND
										M.CITY IS NOT NULL)
									</otherwise>
								</choose>
							</otherwise>
						</choose>
						<if test="mobileLocationList.size > 1">
							)
						</if>
					</when>
					<otherwise>
						<choose>
							<when test="item.andOrOr == true">
								AND (
								<choose>
									<when test="item.includeOrExclude == true">
										<choose>
											<when test="item.province != null and item.city == null">
												M.PROVINCE IN
												<foreach collection="item.province" item="province"
													open="(" close=")" separator=",">
													#{province}
												</foreach>
											</when>
											<when test="item.province == null and item.city != null">
												M.CITY IN
												<foreach collection="item.city" item="city" open="("
													close=")" separator=",">
													#{city}
												</foreach>
											</when>
											<otherwise>
												M.PROVINCE IN
												<foreach collection="item.province" item="province"
													open="(" close=")" separator=",">
													#{province}
												</foreach>
												AND
												M.CITY IN
												<foreach collection="item.city" item="city" open="("
													close=")" separator=",">
													#{city}
												</foreach>
											</otherwise>
										</choose>
									</when>
									<otherwise>
										<choose>
											<when test="item.province != null and item.city == null">
												(M.PROVINCE NOT IN
												<foreach collection="item.province" item="province"
													open="(" close=")" separator=",">
													#{province}
												</foreach>
												AND
												M.PROVINCE IS NOT NULL)
											</when>
											<when test="item.province == null and item.city != null">
												(M.CITY NOT IN
												<foreach collection="item.city" item="city" open="("
													close=")" separator=",">
													#{city}
												</foreach>
												AND
												M.CITY IS NOT NULL)
											</when>
											<otherwise>
												(M.PROVINCE NOT IN
												<foreach collection="item.province" item="province"
													open="(" close=")" separator=",">
													#{province}
												</foreach>
												AND
												M.PROVINCE IS NOT NULL)
												OR
												(M.CITY NOT IN
												<foreach collection="item.city" item="city" open="("
													close=")" separator=",">
													#{city}
												</foreach>
												AND
												M.CITY IS NOT NULL)
											</otherwise>
										</choose>
									</otherwise>
								</choose>
								)
							</when>
							<otherwise>
								OR (
								<choose>
									<when test="item.includeOrExclude == true">
										<choose>
											<when test="item.province != null and item.city == null">
												M.PROVINCE IN
												<foreach collection="item.province" item="province"
													open="(" close=")" separator=",">
													#{province}
												</foreach>
											</when>
											<when test="item.province == null and item.city != null">
												M.CITY IN
												<foreach collection="item.city" item="city" open="("
													close=")" separator=",">
													#{city}
												</foreach>
											</when>
											<otherwise>
												M.PROVINCE IN
												<foreach collection="item.province" item="province"
													open="(" close=")" separator=",">
													#{province}
												</foreach>
												AND
												M.CITY IN
												<foreach collection="item.city" item="city" open="("
													close=")" separator=",">
													#{city}
												</foreach>
											</otherwise>
										</choose>
									</when>
									<otherwise>
										<choose>
											<when test="item.province != null and item.city == null">
												(M.PROVINCE NOT IN
												<foreach collection="item.province" item="province"
													open="(" close=")" separator=",">
													#{province}
												</foreach>
												AND
												M.PROVINCE IS NOT NULL)
											</when>
											<when test="item.province == null and item.city != null">
												(M.CITY NOT IN
												<foreach collection="item.city" item="city" open="("
													close=")" separator=",">
													#{city}
												</foreach>
												AND
												M.CITY IS NOT NULL)
											</when>
											<otherwise>
												(M.PROVINCE NOT IN
												<foreach collection="item.province" item="province"
													open="(" close=")" separator=",">
													#{province}
												</foreach>
												AND
												M.PROVINCE IS NOT NULL)
												OR
												(M.CITY NOT IN
												<foreach collection="item.city" item="city" open="("
													close=")" separator=",">
													#{city}
												</foreach>
												AND
												M.CITY IS NOT NULL)
											</otherwise>
										</choose>
									</otherwise>
								</choose>
								)
							</otherwise>
						</choose>
					</otherwise>
				</choose>
			</foreach>
		</if>
	</sql>

	<!-- 手机号段 -->
	<sql id="memberTable_mobileSectionNumber">
		<if test="mobileSectionNumberList != null">
			AND
			<foreach collection="mobileSectionNumberList" item="item"
				index="index" open="(" close=")">
				<choose>
					<when test="index == 0">
						<if test="mobileSectionNumberList.size > 1">
							(
						</if>
						<choose>
							<when test="item.includeOrExclude == true">
								M.DNSEG_THREE IN
								<foreach collection="item.mobileSectionNumber" item="sectionNumber"
									index="index" open="(" close=")" separator=",">
									#{sectionNumber}
								</foreach>
							</when>
							<otherwise>
								M.DNSEG_THREE NOT IN
								<foreach collection="item.mobileSectionNumber" item="sectionNumber"
									index="index" open="(" close=")" separator=",">
									#{sectionNumber}
								</foreach>
								AND M.DNSEG_THREE IS NOT NULL
							</otherwise>
						</choose>
						<if test="mobileSectionNumberList.size > 1">
							)
						</if>
					</when>
					<otherwise>
						<choose>
							<when test="item.andOrOr == true">
								AND (
								<choose>
									<when test="item.includeOrExclude == true">
										M.DNSEG_THREE IN
										<foreach collection="item.mobileSectionNumber" item="sectionNumber"
											index="index" open="(" close=")" separator=",">
											#{sectionNumber}
										</foreach>
									</when>
									<otherwise>
										M.DNSEG_THREE NOT IN
										<foreach collection="item.mobileSectionNumber" item="sectionNumber"
											index="index" open="(" close=")" separator=",">
											#{sectionNumber}
										</foreach>
										AND M.DNSEG_THREE IS NOT NULL
									</otherwise>
								</choose>
								)
							</when>
							<otherwise>
								OR (
								<choose>
									<when test="item.includeOrExclude == true">
										M.DNSEG_THREE IN
										<foreach collection="item.mobileSectionNumber" item="sectionNumber"
											index="index" open="(" close=")" separator=",">
											#{sectionNumber}
										</foreach>
									</when>
									<otherwise>
										M.DNSEG_THREE NOT IN
										<foreach collection="item.mobileSectionNumber" item="sectionNumber"
											index="index" open="(" close=")" separator=",">
											#{sectionNumber}
										</foreach>
										AND M.DNSEG_THREE IS NOT NULL
									</otherwise>
								</choose>
								)
							</otherwise>
						</choose>
					</otherwise>
				</choose>
			</foreach>
		</if>
	</sql>

	<!-- 过滤黑名单 -->
	<sql id="memberTable_sendBlackListMember">
		<if test="filterBlackList == true">
			AND
			M.STATUS = 1
		</if>
	</sql>

	<!-- ##### 以下是CRM_MEMBER_INFO_DTO筛选条件 ##### -->
	<!-- 交易时间与未交易时间 -->
	<sql id="memberInfoDTO_tradeTimeAndUntradeTime">
		<if test="tradeTimeOrUntradeTime != null ">
			<choose>
				<when test="tradeTimeOrUntradeTime == 1 ">
					<if test="tradeTime != null">
						AND
						M.LAST_TRADE_TIME &gt;= #{tradeTime}
					</if>
					<if test="minTradeTime != null and maxTradeTime == null">
						AND
						M.LAST_TRADE_TIME &gt;= #{minTradeTime}
					</if>
					<if test="maxTradeTime != null and minTradeTime == null">
						AND
						M.LAST_TRADE_TIME &lt;= #{maxTradeTime}
					</if>
					<if test="minTradeTime != null and maxTradeTime != null">
						AND
						(
						M.LAST_TRADE_TIME &gt;= #{minTradeTime}
						AND
						M.LAST_TRADE_TIME &lt;= #{maxTradeTime}
						)
					</if>
				</when>
				<otherwise>
					<if test="tradeTime != null ">
						AND
						M.LAST_TRADE_TIME &lt;= #{tradeTime}
					</if>
					<if test="minTradeTime != null and maxTradeTime == null">
						AND
						M.LAST_TRADE_TIME &lt;= #{minTradeTime}
					</if>
					<if test="maxTradeTime != null and minTradeTime == null">
						AND
						M.LAST_TRADE_TIME &gt;= #{maxTradeTime}
					</if>
					<if test="minTradeTime != null and maxTradeTime != null">
						AND
						(
						M.LAST_TRADE_TIME &lt;= #{minTradeTime}
						OR
						M.LAST_TRADE_TIME &gt;= #{maxTradeTime}
						)
					</if>
				</otherwise>
			</choose>
		</if>
	</sql>

	<!-- 交易成功次数 -->
	<sql id="memberInfoDTO_tradeNum">
		<choose>
			<when test="tradeNum != null">
				AND
				M.TRADE_NUM = #{tradeNum}
			</when>
			<otherwise>
				<if test="minTradeNum != null and maxTradeNum== null">
					AND
					M.TRADE_NUM &gt;= #{minTradeNum}
				</if>
				<if test="maxTradeNum != null and minTradeNum == null">
					AND
					M.TRADE_NUM &lt;= #{maxTradeNum}
				</if>
				<if test="minTradeNum != null and maxTradeNum != null">
					AND
					(
					M.TRADE_NUM &gt;= #{minTradeNum}
					AND
					M.TRADE_NUM &lt;=
					#{maxTradeNum}
					)
				</if>
			</otherwise>
		</choose>
	</sql>

	<!-- 累计消费金额 -->
	<sql id="memberInfoDTO_tradeAmount">
		<choose>
			<when test="tradeAmount != null">
				AND
				M.TRADE_AMOUNT = #{tradeAmount}
			</when>
			<otherwise>
				<if test="minTradeAmount != null and maxTradeAmount == null">
					AND
					M.TRADE_AMOUNT &gt;= #{minTradeAmount}
				</if>
				<if test="maxTradeAmount != null and minTradeAmount == null">
					AND
					M.TRADE_AMOUNT &lt;= #{maxTradeAmount}
				</if>
				<if test="minTradeAmount != null and maxTradeAmount != null">
					AND
					(
					M.TRADE_AMOUNT &gt;= #{minTradeAmount}
					AND
					M.TRADE_AMOUNT &lt;= #{maxTradeAmount}
					)
				</if>
			</otherwise>
		</choose>
	</sql>

	<!-- 平均订单金额 -->
	<sql id="memberInfoDTO_avgTradePrice">
		<choose>
			<when test="avgTradePrice != null">
				AND
				M.AVG_TRADE_PRICE = #{avgTradePrice}
			</when>
			<otherwise>
				<if test="minAvgTradePrice != null and maxAvgTradePrice == null">
					AND
					M.AVG_TRADE_PRICE &gt;= #{minAvgTradePrice}
				</if>
				<if test="maxAvgTradePrice != null and minAvgTradePrice == null">
					AND
					M.AVG_TRADE_PRICE &lt;= #{maxAvgTradePrice}
				</if>
				<if test="minAvgTradePrice != null and maxAvgTradePrice != null">
					AND
					(
					M.AVG_TRADE_PRICE &gt;= #{minAvgTradePrice}
					AND
					M.AVG_TRADE_PRICE &lt;= #{maxAvgTradePrice}
					)
				</if>
			</otherwise>
		</choose>
	</sql>

	<!-- 关闭交易次数 -->
	<sql id="memberInfoDTO_closeTradeNum">
		<choose>
			<when test="closeTradeNum != null">
				AND
				M.CLOSE_TRADE_NUM = #{closeTradeNum}
			</when>
			<otherwise>
				<if test="minCloseTradeNum != null and maxCloseTradeNum == null">
					AND
					M.CLOSE_TRADE_NUM &gt;= #{minCloseTradeNum}
				</if>
				<if test="maxCloseTradeNum != null and minCloseTradeNum == null">
					AND
					M.CLOSE_TRADE_NUM &lt;= #{maxCloseTradeNum}
				</if>
				<if test="minCloseTradeNum != null and maxCloseTradeNum != null">
					AND
					(
					M.CLOSE_TRADE_NUM &gt;= #{minCloseTradeNum}
					AND
					M.CLOSE_TRADE_NUM &lt;= #{maxCloseTradeNum}
					)
				</if>
			</otherwise>
		</choose>
	</sql>

	<!--交易宝贝件数 -->
	<sql id="memberInfoDTO_itemNum">
		<choose>
			<when test="itemNum != null">
				AND
				M.ITEM_NUM = #{itemNum}
			</when>
			<otherwise>
				<if test="minItemNum != null and maxItemNum == null">
					AND
					M.ITEM_NUM &gt;= #{minItemNum}
				</if>
				<if test="maxItemNum != null and minItemNum == null">
					AND
					M.ITEM_NUM &lt;= #{maxItemNum}
				</if>
				<if test="minItemNum != null and maxItemNum != null">
					AND
					(
					M.ITEM_NUM &gt;= #{minItemNum}
					AND
					M.ITEM_NUM &lt;=
					#{maxItemNum}
					)
				</if>
			</otherwise>
		</choose>
	</sql>

	<!-- 地区筛选【省份】 -->
	<sql id="memberInfoDTO_province">
		<if test="provinceArray != null and sendOrNotSendForArea == 1">
			AND
			M.PROVINCE IN
			<foreach collection="provinceArray" item="province" open="("
				close=")" separator=",">
				#{province}
			</foreach>
		</if>
		<if test="provinceArray != null and sendOrNotSendForArea == -1">
			AND
			M.PROVINCE NOT IN
			<foreach collection="provinceArray" item="province" open="("
				close=")" separator=",">
				#{province}
			</foreach>
		</if>
	</sql>

	<!-- 地区筛选【城市】 -->
	<sql id="memberInfoDTO_city">
		<if test="cityArray != null and sendOrNotSendForArea == 1 ">
			AND
			M.CITY IN
			<foreach collection="cityArray" item="city" open="(" close=")"
				separator=",">
				#{city}
			</foreach>
		</if>
		<if test="cityArray != null and sendOrNotSendForArea == -1 ">
			AND
			M.CITY NOT IN
			<foreach collection="cityArray" item="city" open="(" close=")"
				separator=",">
				#{city}
			</foreach>
		</if>
	</sql>

	<!-- 营销短信发送次数 -->
	<sql id="memberInfoDTO_marketingSmsNumber">
		<choose>
			<when test="marketingSmsNumber != null">
				AND
				M.MARKETING_SMS_NUMBER = #{marketingSmsNumber}
				<if test="minMarketingSmsNumber == 0">
					OR
					M.MARKETING_SMS_NUMBER IS NULL
				</if>
			</when>
			<otherwise>
				<if
					test="minMarketingSmsNumber != null and maxMarketingSmsNumber == null">
					AND
					M.MARKETING_SMS_NUMBER &gt;= #{minMarketingSmsNumber}
					<if test="minMarketingSmsNumber == 0">
						OR
						M.MARKETING_SMS_NUMBER IS NULL
					</if>
				</if>
				<if
					test="maxMarketingSmsNumber != null and minMarketingSmsNumber == null">
					AND
					M.MARKETING_SMS_NUMBER &lt;= #{maxMarketingSmsNumber}
					<if test="minMarketingSmsNumber == null or maxMarketingSmsNumber == 0">
						OR
						M.MARKETING_SMS_NUMBER IS NULL
					</if>
				</if>
				<if
					test="minMarketingSmsNumber != null and maxMarketingSmsNumber != null">
					AND
					(
					M.MARKETING_SMS_NUMBER &gt;= #{minMarketingSmsNumber}
					AND
					M.MARKETING_SMS_NUMBER &lt;= #{maxMarketingSmsNumber}
					)
					<if test="minMarketingSmsNumber == 0 or minMarketingSmsNumber == null">
						OR
						M.MARKETING_SMS_NUMBER IS NULL
					</if>
				</if>
			</otherwise>
		</choose>
	</sql>

	<!-- 已发送过滤 -->
	<sql id="memberInfoDTO_lastMarketingTime">
		<if test="lastMarketingTime != null">
			AND
			(
			M.LAST_SEND_TIME &lt;= #{lastMarketingTime}
			OR
			M.LAST_SEND_TIME IS NULL
			)
		</if>
	</sql>

	<!-- 过滤条件【黑名单】 -->
	<sql id="memberInfoDTO_status">
		<if test="memberStatus != null and memberStatus != '' ">
			AND
			M.STATUS = #{memberStatus}
		</if>
	</sql>

	<!-- 买家昵称 -->
	<sql id="memberInfoDTO_buyerNick">
		<if test="buyerNick != null and buyerNick != '' ">
			AND
			M.BUYER_NICK = #{buyerNick}
		</if>
	</sql>

	<!-- 手机号码 -->
	<sql id="memberInfoDTO_mobile">
		<if test="mobile != null and mobile != '' ">
			AND
			M.MOBILE LIKE = #{mobile}
		</if>
	</sql>

	<!-- 客户来源 -->
	<sql id="memberInfoDTO_relationSource">
		<if test="relationSource != null and relationSource != '' ">
			AND
			M.RELATION_SOURCE = #{relationSource}
		</if>
	</sql>
	<!-- ##### 以上是CRM_MEMBER_INFO_DTO筛选条件 ##### -->

	<!-- #####以下是CRM_ORDER_DTO表筛选条件##### -->
	<!-- 订单来源 -->
	<sql id="orderDTO_orderFrom">
		<if test="orderFromArray != null ">
			AND
			O.ORDER_FROM IN
			<foreach collection="orderFromArray" item="orderFrom" open="("
				close=")" separator=",">
				"${orderFrom}"
			</foreach>
		</if>
	</sql>

	<!-- 订单状态 -->
	<sql id="orderDTO_status">
		<choose>
			<when test="orderStatus != null and orderStatus != ''">
				AND
				O.STATUS = #{orderStatus}
			</when>
			<otherwise>
				<if test="orderStatusArray != null">
					AND
					O.STATUS IN
					<foreach collection="orderStatusArray" item="orderStatus"
						open="(" close=")" separator=",">
						#{orderStatus}
					</foreach>
				</if>
			</otherwise>
		</choose>
	</sql>

	<!-- 指定商品编号 -->
	<sql id="orderDTO_numIid">
		<if test="sendOrNotSendForGoods == 1">
			<if test="specifyGoodsOrKeyCodeGoods == 1">
				<if test="numIidArray != null ">
					AND
					O.NUM_IID IN
					<foreach collection="numIidArray" item="item" open="("
						close=")" separator=",">
						#{item}
					</foreach>
				</if>
			</if>
			<if test="specifyGoodsOrKeyCodeGoods == -1">
				<if test="goodsKeyCode != null and goodsKeyCode != ''">
					AND
					O.NUM_IID IN (SELECT I.NUM_IID FROM CRM_ITEM${uid} I
					WHERE I.TITLE LIKE
					"%"#{goodsKeyCode}"%")
				</if>
			</if>
		</if>
		<if test="sendOrNotSendForGoods == -1">
			<if test="specifyGoodsOrKeyCodeGoods == 1">
				<if test="numIidArray != null ">
					AND
					O.NUM_IID NOT IN
					<foreach collection="numIidArray" item="item" open="("
						close=")" separator=",">
						#{item}
					</foreach>
				</if>
			</if>
			<if test="specifyGoodsOrKeyCodeGoods == -1">
				<if test="goodsKeyCode != null and goodsKeyCode != ''">
					AND
					O.NUM_IID NOT IN (SELECT I.NUM_IID FROM
					CRM_ITEM${uid}
					I WHERE I.TITLE LIKE
					"%"#{goodsKeyCode}"%")
				</if>
			</if>
		</if>
	</sql>

	<!-- 拍下订单时段 -->
	<sql id="orderDTO_tradeCreatedTime">
		<if test="orderTimeSectionStart != null and orderTimeSectionEnd == null">
			AND
			O.TRADE_CREATED_TIME &gt;= #{orderTimeSectionStart}
		</if>
		<if test="orderTimeSectionEnd != null and orderTimeSectionStart == null">
			AND
			O.TRADE_CREATED_TIME &lt;= #{orderTimeSectionEnd}
		</if>
		<if test="orderTimeSectionStart != null and orderTimeSectionEnd != null">
			AND
			(
			O.TRADE_CREATED_TIME &gt;= #{orderTimeSectionStart}
			AND
			O.TRADE_CREATED_TIME &lt;= #{orderTimeSectionEnd}
			)
		</if>
	</sql>

	<!-- 卖家标记 -->
	<sql id="orderDTO_sellerFlag">
		<if test="sellerFlagArray != null">
			AND (
			O.SELLER_FLAG IN
			<foreach collection="sellerFlagArray" item="sellerFlag" open="("
				close=")" separator=",">
				#{sellerFlag}
			</foreach>
			<if test="unsign == true">
				OR
				O.SELLER_FLAG IS NULL
			</if>
			)
		</if>
	</sql>
	<!-- ##### 以上是CRM_ORDER_DTO筛选条件 ##### -->

	<!-- ID范围 -->
	<sql id="limit_id">
		<if test="limitId != null">
			AND
			M.ID &lt; #{limitId}
		</if>
	</sql>

	<!-- 分页 -->
	<sql id="pagination">
		<if test="startRows !=null  and currentRows != null ">
			LIMIT #{startRows},#{currentRows}
		</if>
	</sql>

	<!-- 商品分组 -->
	<sql id="orderTable_specifyGoodsNumIids">
		<if test="specifyGoodsNumIidsArray != null">
			AND
			O.NUM_IID IN
			<foreach collection="specifyGoodsNumIidsArray" item="num_iid"
				index="index" open="(" close=")" separator=",">
				#{num_iid}
			</foreach>
		</if>
	</sql>

	<!-- 模版 -->
	<sql id="">
		<if test="">
			AND
			<foreach collection="" item="item" index="index" open="("
				close=")">
				<choose>
					<when test="index == 0">
						<choose>
							<when test="item.includeOrExclude == true">
							</when>
							<otherwise>
							</otherwise>
						</choose>
					</when>
					<otherwise>
						<choose>
							<when test="item.andOrOr == true">
								AND
								<choose>
									<when test="item.includeOrExclude == true">
									</when>
									<otherwise>
									</otherwise>
								</choose>
							</when>
							<otherwise>
								OR
								<choose>
									<when test="item.includeOrExclude == true">
									</when>
									<otherwise>
									</otherwise>
								</choose>
							</otherwise>
						</choose>
					</otherwise>
				</choose>
			</foreach>
		</if>
	</sql>

</mapper>